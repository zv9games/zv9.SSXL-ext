type FetchFn = < crate::GDExtensionInterfaceClassdbGetMethodBind as crate::Inner > ::FnPtr;
pub struct ClassSceneMethodTable {
    function_pointers: Vec < crate::ClassMethodBind >,
}
impl ClassSceneMethodTable {
    pub const CLASS_COUNT: usize = 658usize;
    pub const METHOD_COUNT: usize = 11288usize;
    #[doc = r" # Safety"]
    #[doc = r" - Must be called exactly once during library initialization."]
    #[doc = r" - All parameters (dependencies) must have been initialized and valid."]
    pub unsafe fn load(interface: &crate::GDExtensionInterface, string_names: &mut crate::StringCache,) -> Self {
        let fetch_fptr = interface.classdb_get_method_bind.expect("classdb_get_method_bind absent");
        let mut function_pointers = Vec::with_capacity(11288usize);
        load_AESContext_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AStar2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AStar3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AStarGrid2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AcceptDialog_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AimModifier3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AnimatableBody2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AnimatableBody3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AnimatedSprite2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AnimatedSprite3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AnimatedTexture_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Animation_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AnimationLibrary_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AnimationMixer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AnimationNode_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AnimationNodeAnimation_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AnimationNodeBlendSpace1D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AnimationNodeBlendSpace2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AnimationNodeBlendTree_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AnimationNodeExtension_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AnimationNodeOneShot_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AnimationNodeStateMachine_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AnimationNodeStateMachinePlayback_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AnimationNodeStateMachineTransition_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AnimationNodeSync_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AnimationNodeTimeSeek_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AnimationNodeTransition_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AnimationPlayer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AnimationTree_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Area2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Area3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ArrayMesh_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ArrayOccluder3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AspectRatioContainer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AtlasTexture_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioEffectAmplify_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioEffectCapture_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioEffectChorus_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioEffectCompressor_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioEffectDelay_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioEffectDistortion_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioEffectEQ_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioEffectFilter_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioEffectHardLimiter_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioEffectLimiter_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioEffectPanner_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioEffectPhaser_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioEffectPitchShift_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioEffectRecord_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioEffectReverb_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioEffectSpectrumAnalyzer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioEffectSpectrumAnalyzerInstance_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioEffectStereoEnhance_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioListener2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioListener3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioStream_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioStreamGenerator_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioStreamGeneratorPlayback_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioStreamInteractive_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioStreamMP3_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioStreamOggVorbis_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioStreamPlayback_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioStreamPlaybackInteractive_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioStreamPlaybackPolyphonic_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioStreamPlaybackResampled_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioStreamPlayer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioStreamPlayer2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioStreamPlayer3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioStreamPlaylist_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioStreamPolyphonic_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioStreamRandomizer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioStreamSynchronized_methods(&mut function_pointers, string_names, fetch_fptr);
        load_AudioStreamWAV_methods(&mut function_pointers, string_names, fetch_fptr);
        load_BackBufferCopy_methods(&mut function_pointers, string_names, fetch_fptr);
        load_BaseButton_methods(&mut function_pointers, string_names, fetch_fptr);
        load_BaseMaterial3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_BitMap_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Bone2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_BoneAttachment3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_BoneConstraint3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_BoneMap_methods(&mut function_pointers, string_names, fetch_fptr);
        load_BoxContainer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_BoxMesh_methods(&mut function_pointers, string_names, fetch_fptr);
        load_BoxOccluder3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_BoxShape3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Button_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ButtonGroup_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CPUParticles2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CPUParticles3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CSGBox3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CSGCylinder3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CSGMesh3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CSGPolygon3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CSGPrimitive3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CSGShape3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CSGSphere3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CSGTorus3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CallbackTweener_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Camera2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Camera3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CameraAttributes_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CameraAttributesPhysical_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CameraAttributesPractical_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CameraFeed_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CameraTexture_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CanvasGroup_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CanvasItem_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CanvasItemMaterial_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CanvasLayer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CanvasModulate_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CanvasTexture_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CapsuleMesh_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CapsuleShape2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CapsuleShape3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CenterContainer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CharFXTransform_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CharacterBody2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CharacterBody3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CircleShape2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ClassDB_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CodeEdit_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CodeHighlighter_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CollisionObject2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CollisionObject3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CollisionPolygon2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CollisionPolygon3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CollisionShape2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CollisionShape3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ColorPalette_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ColorPicker_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ColorPickerButton_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ColorRect_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CompressedTexture2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CompressedTexture3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CompressedTextureLayered_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ConcavePolygonShape2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ConcavePolygonShape3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ConeTwistJoint3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ConfigFile_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ConfirmationDialog_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Container_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Control_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ConvertTransformModifier3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ConvexPolygonShape2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ConvexPolygonShape3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CopyTransformModifier3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Crypto_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CryptoKey_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Cubemap_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CubemapArray_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Curve_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Curve2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Curve3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CurveTexture_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CurveXYZTexture_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CylinderMesh_methods(&mut function_pointers, string_names, fetch_fptr);
        load_CylinderShape3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_DPITexture_methods(&mut function_pointers, string_names, fetch_fptr);
        load_DTLSServer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_DampedSpringJoint2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Decal_methods(&mut function_pointers, string_names, fetch_fptr);
        load_DirAccess_methods(&mut function_pointers, string_names, fetch_fptr);
        load_DirectionalLight2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_DirectionalLight3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ENetConnection_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ENetMultiplayerPeer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ENetPacketPeer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_EncodedObjectAsID_methods(&mut function_pointers, string_names, fetch_fptr);
        load_EngineDebugger_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Environment_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Expression_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ExternalTexture_methods(&mut function_pointers, string_names, fetch_fptr);
        load_FBXState_methods(&mut function_pointers, string_names, fetch_fptr);
        load_FastNoiseLite_methods(&mut function_pointers, string_names, fetch_fptr);
        load_FileAccess_methods(&mut function_pointers, string_names, fetch_fptr);
        load_FileDialog_methods(&mut function_pointers, string_names, fetch_fptr);
        load_FlowContainer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_FogMaterial_methods(&mut function_pointers, string_names, fetch_fptr);
        load_FogVolume_methods(&mut function_pointers, string_names, fetch_fptr);
        load_FoldableContainer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_FoldableGroup_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Font_methods(&mut function_pointers, string_names, fetch_fptr);
        load_FontFile_methods(&mut function_pointers, string_names, fetch_fptr);
        load_FontVariation_methods(&mut function_pointers, string_names, fetch_fptr);
        load_FramebufferCacheRD_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GDExtensionManager_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GDScript_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GLTFAccessor_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GLTFAnimation_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GLTFBufferView_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GLTFCamera_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GLTFDocument_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GLTFLight_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GLTFMesh_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GLTFNode_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GLTFObjectModelProperty_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GLTFPhysicsBody_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GLTFPhysicsShape_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GLTFSkeleton_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GLTFSkin_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GLTFSpecGloss_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GLTFState_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GLTFTexture_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GLTFTextureSampler_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GPUParticles2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GPUParticles3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GPUParticlesAttractor3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GPUParticlesAttractorBox3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GPUParticlesAttractorSphere3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GPUParticlesAttractorVectorField3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GPUParticlesCollision3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GPUParticlesCollisionBox3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GPUParticlesCollisionHeightField3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GPUParticlesCollisionSDF3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GPUParticlesCollisionSphere3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Generic6DOFJoint3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Geometry2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Geometry3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GeometryInstance3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Gradient_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GradientTexture1D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GradientTexture2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GridContainer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GridMap_methods(&mut function_pointers, string_names, fetch_fptr);
        load_GrooveJoint2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_HMACContext_methods(&mut function_pointers, string_names, fetch_fptr);
        load_HTTPClient_methods(&mut function_pointers, string_names, fetch_fptr);
        load_HTTPRequest_methods(&mut function_pointers, string_names, fetch_fptr);
        load_HashingContext_methods(&mut function_pointers, string_names, fetch_fptr);
        load_HeightMapShape3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_HingeJoint3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_IP_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Image_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ImageFormatLoaderExtension_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ImageTexture_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ImageTexture3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ImageTextureLayered_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ImmediateMesh_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ImporterMesh_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ImporterMeshInstance3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Input_methods(&mut function_pointers, string_names, fetch_fptr);
        load_InputEvent_methods(&mut function_pointers, string_names, fetch_fptr);
        load_InputEventAction_methods(&mut function_pointers, string_names, fetch_fptr);
        load_InputEventFromWindow_methods(&mut function_pointers, string_names, fetch_fptr);
        load_InputEventGesture_methods(&mut function_pointers, string_names, fetch_fptr);
        load_InputEventJoypadButton_methods(&mut function_pointers, string_names, fetch_fptr);
        load_InputEventJoypadMotion_methods(&mut function_pointers, string_names, fetch_fptr);
        load_InputEventKey_methods(&mut function_pointers, string_names, fetch_fptr);
        load_InputEventMIDI_methods(&mut function_pointers, string_names, fetch_fptr);
        load_InputEventMagnifyGesture_methods(&mut function_pointers, string_names, fetch_fptr);
        load_InputEventMouse_methods(&mut function_pointers, string_names, fetch_fptr);
        load_InputEventMouseButton_methods(&mut function_pointers, string_names, fetch_fptr);
        load_InputEventMouseMotion_methods(&mut function_pointers, string_names, fetch_fptr);
        load_InputEventPanGesture_methods(&mut function_pointers, string_names, fetch_fptr);
        load_InputEventScreenDrag_methods(&mut function_pointers, string_names, fetch_fptr);
        load_InputEventScreenTouch_methods(&mut function_pointers, string_names, fetch_fptr);
        load_InputEventShortcut_methods(&mut function_pointers, string_names, fetch_fptr);
        load_InputEventWithModifiers_methods(&mut function_pointers, string_names, fetch_fptr);
        load_InputMap_methods(&mut function_pointers, string_names, fetch_fptr);
        load_InstancePlaceholder_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ItemList_methods(&mut function_pointers, string_names, fetch_fptr);
        load_JSON_methods(&mut function_pointers, string_names, fetch_fptr);
        load_JSONRPC_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Joint2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Joint3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_KinematicCollision2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_KinematicCollision3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Label_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Label3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_LabelSettings_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Light2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Light3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_LightOccluder2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_LightmapGI_methods(&mut function_pointers, string_names, fetch_fptr);
        load_LightmapGIData_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Line2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_LineEdit_methods(&mut function_pointers, string_names, fetch_fptr);
        load_LinkButton_methods(&mut function_pointers, string_names, fetch_fptr);
        load_LookAtModifier3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Marker2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Marker3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Marshalls_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Material_methods(&mut function_pointers, string_names, fetch_fptr);
        load_MenuBar_methods(&mut function_pointers, string_names, fetch_fptr);
        load_MenuButton_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Mesh_methods(&mut function_pointers, string_names, fetch_fptr);
        load_MeshConvexDecompositionSettings_methods(&mut function_pointers, string_names, fetch_fptr);
        load_MeshDataTool_methods(&mut function_pointers, string_names, fetch_fptr);
        load_MeshInstance2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_MeshInstance3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_MeshLibrary_methods(&mut function_pointers, string_names, fetch_fptr);
        load_MeshTexture_methods(&mut function_pointers, string_names, fetch_fptr);
        load_MethodTweener_methods(&mut function_pointers, string_names, fetch_fptr);
        load_MissingNode_methods(&mut function_pointers, string_names, fetch_fptr);
        load_MissingResource_methods(&mut function_pointers, string_names, fetch_fptr);
        load_MobileVRInterface_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ModifierBoneTarget3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_MovieWriter_methods(&mut function_pointers, string_names, fetch_fptr);
        load_MultiMesh_methods(&mut function_pointers, string_names, fetch_fptr);
        load_MultiMeshInstance2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_MultiMeshInstance3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_MultiplayerAPI_methods(&mut function_pointers, string_names, fetch_fptr);
        load_MultiplayerPeer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_MultiplayerSpawner_methods(&mut function_pointers, string_names, fetch_fptr);
        load_MultiplayerSynchronizer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_NativeMenu_methods(&mut function_pointers, string_names, fetch_fptr);
        load_NinePatchRect_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Node_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Node2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Node3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Noise_methods(&mut function_pointers, string_names, fetch_fptr);
        load_NoiseTexture2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_NoiseTexture3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Occluder3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OccluderInstance3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OccluderPolygon2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OggPacketSequence_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OmniLight3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OpenXRAPIExtension_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OpenXRAction_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OpenXRActionMap_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OpenXRActionSet_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OpenXRAnalogThresholdModifier_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OpenXRCompositionLayer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OpenXRCompositionLayerCylinder_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OpenXRCompositionLayerEquirect_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OpenXRCompositionLayerQuad_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OpenXRDpadBindingModifier_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OpenXRExtensionWrapper_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OpenXRFutureExtension_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OpenXRFutureResult_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OpenXRHand_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OpenXRHapticVibration_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OpenXRIPBinding_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OpenXRInteractionProfile_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OpenXRInteractionProfileMetadata_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OpenXRInterface_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OpenXRRenderModel_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OpenXRRenderModelExtension_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OpenXRRenderModelManager_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OptimizedTranslation_methods(&mut function_pointers, string_names, fetch_fptr);
        load_OptionButton_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PCKPacker_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PackedDataContainer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PackedDataContainerRef_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PackedScene_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PacketPeer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PacketPeerDTLS_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PacketPeerStream_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PacketPeerUDP_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PanoramaSkyMaterial_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ParallaxBackground_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ParallaxLayer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ParticleProcessMaterial_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Path2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Path3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PathFollow2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PathFollow3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Performance_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PhysicalBone2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PhysicalBone3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PhysicalBoneSimulator3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PhysicalSkyMaterial_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PhysicsBody2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PhysicsBody3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PhysicsMaterial_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PhysicsPointQueryParameters2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PhysicsPointQueryParameters3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PhysicsRayQueryParameters2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PhysicsRayQueryParameters3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PhysicsShapeQueryParameters2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PhysicsShapeQueryParameters3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PhysicsTestMotionParameters2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PhysicsTestMotionParameters3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PhysicsTestMotionResult2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PhysicsTestMotionResult3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PinJoint2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PinJoint3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PlaceholderMesh_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PlaceholderTexture2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PlaceholderTexture3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PlaceholderTextureLayered_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PlaneMesh_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PointLight2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Polygon2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PolygonOccluder3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PolygonPathFinder_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PopupMenu_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PortableCompressedTexture2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PrimitiveMesh_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PrismMesh_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ProceduralSkyMaterial_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ProgressBar_methods(&mut function_pointers, string_names, fetch_fptr);
        load_PropertyTweener_methods(&mut function_pointers, string_names, fetch_fptr);
        load_QuadOccluder3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RDAttachmentFormat_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RDFramebufferPass_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RDPipelineColorBlendState_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RDPipelineColorBlendStateAttachment_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RDPipelineDepthStencilState_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RDPipelineMultisampleState_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RDPipelineRasterizationState_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RDPipelineSpecializationConstant_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RDSamplerState_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RDShaderFile_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RDShaderSPIRV_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RDShaderSource_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RDTextureFormat_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RDTextureView_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RDUniform_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RDVertexAttribute_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RandomNumberGenerator_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Range_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RayCast2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RayCast3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RectangleShape2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ReferenceRect_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ReflectionProbe_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RegEx_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RegExMatch_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RemoteTransform2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RemoteTransform3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RenderSceneBuffers_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RenderSceneBuffersConfiguration_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RenderSceneBuffersRD_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RenderingDevice_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ResourceLoader_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ResourcePreloader_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ResourceSaver_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ResourceUID_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RetargetModifier3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RibbonTrailMesh_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RichTextLabel_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RigidBody2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RigidBody3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_RootMotionView_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SceneMultiplayer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SceneReplicationConfig_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SceneState_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SceneTree_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SceneTreeTimer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Script_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ScriptBacktrace_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ScrollBar_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ScrollContainer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SegmentShape2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SeparationRayShape2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SeparationRayShape3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Shader_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ShaderInclude_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ShaderIncludeDB_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ShaderMaterial_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Shape2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Shape3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ShapeCast2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ShapeCast3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Shortcut_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Skeleton2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Skeleton3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SkeletonIK3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SkeletonModifier3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SkeletonProfile_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Skin_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SkinReference_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Sky_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Slider_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SliderJoint3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SoftBody3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SphereMesh_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SphereOccluder3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SphereShape3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SpinBox_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SplitContainer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SpringArm3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SpringBoneCollision3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SpringBoneCollisionCapsule3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SpringBoneCollisionSphere3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SpringBoneSimulator3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Sprite2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Sprite3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SpriteBase3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SpriteFrames_methods(&mut function_pointers, string_names, fetch_fptr);
        load_StaticBody2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_StaticBody3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_StatusIndicator_methods(&mut function_pointers, string_names, fetch_fptr);
        load_StreamPeer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_StreamPeerBuffer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_StreamPeerTCP_methods(&mut function_pointers, string_names, fetch_fptr);
        load_StreamPeerTLS_methods(&mut function_pointers, string_names, fetch_fptr);
        load_StyleBox_methods(&mut function_pointers, string_names, fetch_fptr);
        load_StyleBoxFlat_methods(&mut function_pointers, string_names, fetch_fptr);
        load_StyleBoxLine_methods(&mut function_pointers, string_names, fetch_fptr);
        load_StyleBoxTexture_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SubViewport_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SubViewportContainer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SubtweenTweener_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SurfaceTool_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SyntaxHighlighter_methods(&mut function_pointers, string_names, fetch_fptr);
        load_SystemFont_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TCPServer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TLSOptions_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TabBar_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TabContainer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TextEdit_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TextLine_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TextMesh_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TextParagraph_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TextServer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TextServerManager_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Texture2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Texture2DArray_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Texture2DRD_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Texture3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Texture3DRD_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TextureButton_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TextureLayered_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TextureLayeredRD_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TextureProgressBar_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TextureRect_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Theme_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ThemeDB_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TileData_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TileMap_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TileMapLayer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TileMapPattern_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TileSet_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TileSetAtlasSource_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TileSetScenesCollectionSource_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TileSetSource_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Timer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TorusMesh_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TouchScreenButton_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Translation_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TranslationDomain_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Tree_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TreeItem_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TriangleMesh_methods(&mut function_pointers, string_names, fetch_fptr);
        load_TubeTrailMesh_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Tween_methods(&mut function_pointers, string_names, fetch_fptr);
        load_UDPServer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_UPNP_methods(&mut function_pointers, string_names, fetch_fptr);
        load_UPNPDevice_methods(&mut function_pointers, string_names, fetch_fptr);
        load_UndoRedo_methods(&mut function_pointers, string_names, fetch_fptr);
        load_UniformSetCacheRD_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VehicleBody3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VehicleWheel3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VideoStream_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VideoStreamPlayback_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VideoStreamPlayer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Viewport_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ViewportTexture_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisibleOnScreenEnabler2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisibleOnScreenEnabler3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisibleOnScreenNotifier2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisibleOnScreenNotifier3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualInstance3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShader_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNode_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeBillboard_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeBooleanConstant_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeBooleanParameter_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeClamp_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeColorConstant_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeColorFunc_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeColorOp_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeColorParameter_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeCompare_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeCubemap_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeCurveTexture_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeCurveXYZTexture_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeCustom_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeDerivativeFunc_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeExpression_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeFloatConstant_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeFloatFunc_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeFloatOp_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeFloatParameter_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeFrame_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeGroupBase_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeInput_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeIntConstant_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeIntFunc_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeIntOp_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeIntParameter_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeIs_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeMix_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeMultiplyAdd_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeParameter_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeParameterRef_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeParticleAccelerator_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeParticleEmit_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeParticleEmitter_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeParticleMeshEmitter_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeParticleMultiplyByAxisAngle_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeParticleRandomness_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeRemap_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeReroute_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeResizableBase_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeSample3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeSmoothStep_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeStep_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeSwitch_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeTexture_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeTexture2DArray_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeTexture3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeTextureParameter_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeTransformConstant_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeTransformFunc_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeTransformOp_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeTransformParameter_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeTransformVecMult_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeUIntConstant_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeUIntFunc_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeUIntOp_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeUIntParameter_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeUVFunc_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeVarying_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeVec2Constant_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeVec2Parameter_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeVec3Constant_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeVec3Parameter_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeVec4Constant_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeVec4Parameter_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeVectorBase_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeVectorFunc_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VisualShaderNodeVectorOp_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VoxelGI_methods(&mut function_pointers, string_names, fetch_fptr);
        load_VoxelGIData_methods(&mut function_pointers, string_names, fetch_fptr);
        load_WeakRef_methods(&mut function_pointers, string_names, fetch_fptr);
        load_WebRTCDataChannel_methods(&mut function_pointers, string_names, fetch_fptr);
        load_WebRTCMultiplayerPeer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_WebRTCPeerConnection_methods(&mut function_pointers, string_names, fetch_fptr);
        load_WebSocketMultiplayerPeer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_WebSocketPeer_methods(&mut function_pointers, string_names, fetch_fptr);
        load_WebXRInterface_methods(&mut function_pointers, string_names, fetch_fptr);
        load_Window_methods(&mut function_pointers, string_names, fetch_fptr);
        load_WorkerThreadPool_methods(&mut function_pointers, string_names, fetch_fptr);
        load_World2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_World3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_WorldBoundaryShape2D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_WorldBoundaryShape3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_WorldEnvironment_methods(&mut function_pointers, string_names, fetch_fptr);
        load_X509Certificate_methods(&mut function_pointers, string_names, fetch_fptr);
        load_XMLParser_methods(&mut function_pointers, string_names, fetch_fptr);
        load_XRAnchor3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_XRController3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_XRHandModifier3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_XRHandTracker_methods(&mut function_pointers, string_names, fetch_fptr);
        load_XRInterface_methods(&mut function_pointers, string_names, fetch_fptr);
        load_XRInterfaceExtension_methods(&mut function_pointers, string_names, fetch_fptr);
        load_XRNode3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_XROrigin3D_methods(&mut function_pointers, string_names, fetch_fptr);
        load_XRPose_methods(&mut function_pointers, string_names, fetch_fptr);
        load_XRPositionalTracker_methods(&mut function_pointers, string_names, fetch_fptr);
        load_XRTracker_methods(&mut function_pointers, string_names, fetch_fptr);
        load_XRVRS_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ZIPPacker_methods(&mut function_pointers, string_names, fetch_fptr);
        load_ZIPReader_methods(&mut function_pointers, string_names, fetch_fptr);
        Self {
            function_pointers
        }
    }
    #[inline(always)]
    pub fn fptr_by_index(&self, index: usize) -> crate::ClassMethodBind {
        unsafe {
            * self.function_pointers.get_unchecked(index)
        }
    }
    #[inline(always)]
    pub fn scene_tree__call_group_flags(&self) -> crate::ClassMethodBind {
        self.fptr_by_index(7872usize)
    }
    #[inline(always)]
    pub fn scene_tree__notify_group_flags(&self) -> crate::ClassMethodBind {
        self.fptr_by_index(7873usize)
    }
    #[inline(always)]
    pub fn scene_tree__set_group_flags(&self) -> crate::ClassMethodBind {
        self.fptr_by_index(7874usize)
    }
    #[inline(always)]
    pub fn scene_tree__notify_group(&self) -> crate::ClassMethodBind {
        self.fptr_by_index(7876usize)
    }
}
fn load_AESContext_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AESContext = string_names.fetch("AESContext");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AESContext), "AESContext", "start", 3122411423i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AESContext), "AESContext", "update", 527836100i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AESContext), "AESContext", "get_iv_state", 2115431945i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AESContext), "AESContext", "finish", 3218959716i64),);
    
}
fn load_AStar2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AStar2D = string_names.fetch("AStar2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "get_available_point_id", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "add_point", 4074201818i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "get_point_position", 2299179447i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "set_point_position", 163021252i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "get_point_weight_scale", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "set_point_weight_scale", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "remove_point", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "has_point", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "get_point_connections", 2865087369i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "get_point_ids", 3851388692i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "set_neighbor_filter_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "is_neighbor_filter_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "set_point_disabled", 972357352i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "is_point_disabled", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "connect_points", 3710494224i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "disconnect_points", 3710494224i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "are_points_connected", 2288175859i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "get_point_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "get_point_capacity", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "reserve_space", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "get_closest_point", 2300324924i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "get_closest_position_in_segment", 2656412154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "get_point_path", 3427490392i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar2D), "AStar2D", "get_id_path", 3136199648i64),);
    
}
fn load_AStar3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AStar3D = string_names.fetch("AStar3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "get_available_point_id", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "add_point", 1038703438i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "get_point_position", 711720468i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "set_point_position", 1530502735i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "get_point_weight_scale", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "set_point_weight_scale", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "remove_point", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "has_point", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "get_point_connections", 2865087369i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "get_point_ids", 3851388692i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "set_point_disabled", 972357352i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "is_point_disabled", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "set_neighbor_filter_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "is_neighbor_filter_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "connect_points", 3710494224i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "disconnect_points", 3710494224i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "are_points_connected", 2288175859i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "get_point_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "get_point_capacity", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "reserve_space", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "get_closest_point", 3241074317i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "get_closest_position_in_segment", 192990374i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "get_point_path", 1562654675i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStar3D), "AStar3D", "get_id_path", 3136199648i64),);
    
}
fn load_AStarGrid2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AStarGrid2D = string_names.fetch("AStarGrid2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "set_region", 1763793166i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "get_region", 410525958i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "set_size", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "get_size", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "set_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "get_offset", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "set_cell_size", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "get_cell_size", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "set_cell_shape", 4130591146i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "get_cell_shape", 3293463634i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "is_in_bounds", 2522259332i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "is_in_boundsv", 3900751641i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "is_dirty", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "update", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "set_jumping_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "is_jumping_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "set_diagonal_mode", 1017829798i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "get_diagonal_mode", 3129282674i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "set_default_compute_heuristic", 1044375519i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "get_default_compute_heuristic", 2074731422i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "set_default_estimate_heuristic", 1044375519i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "get_default_estimate_heuristic", 2074731422i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "set_point_solid", 1765703753i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "is_point_solid", 3900751641i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "set_point_weight_scale", 2262553149i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "get_point_weight_scale", 719993801i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "fill_solid_region", 2261970063i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "fill_weight_scale_region", 2793244083i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "get_point_position", 108438297i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "get_point_data_in_region", 3893818462i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "get_point_path", 1641925693i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AStarGrid2D), "AStarGrid2D", "get_id_path", 1918132273i64),);
    
}
fn load_AcceptDialog_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AcceptDialog = string_names.fetch("AcceptDialog");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AcceptDialog), "AcceptDialog", "get_ok_button", 1856205918i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AcceptDialog), "AcceptDialog", "get_label", 566733104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AcceptDialog), "AcceptDialog", "set_hide_on_ok", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AcceptDialog), "AcceptDialog", "get_hide_on_ok", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AcceptDialog), "AcceptDialog", "set_close_on_escape", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AcceptDialog), "AcceptDialog", "get_close_on_escape", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AcceptDialog), "AcceptDialog", "add_button", 3328440682i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AcceptDialog), "AcceptDialog", "add_cancel_button", 242045556i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AcceptDialog), "AcceptDialog", "remove_button", 2068354942i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AcceptDialog), "AcceptDialog", "register_text_enter", 3714008017i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AcceptDialog), "AcceptDialog", "set_text", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AcceptDialog), "AcceptDialog", "get_text", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AcceptDialog), "AcceptDialog", "set_autowrap", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AcceptDialog), "AcceptDialog", "has_autowrap", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AcceptDialog), "AcceptDialog", "set_ok_button_text", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AcceptDialog), "AcceptDialog", "get_ok_button_text", 201670096i64),);
    
}
fn load_AimModifier3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AimModifier3D = string_names.fetch("AimModifier3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AimModifier3D), "AimModifier3D", "set_forward_axis", 2496831085i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AimModifier3D), "AimModifier3D", "get_forward_axis", 3949866735i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AimModifier3D), "AimModifier3D", "set_use_euler", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AimModifier3D), "AimModifier3D", "is_using_euler", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AimModifier3D), "AimModifier3D", "set_primary_rotation_axis", 776736805i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AimModifier3D), "AimModifier3D", "get_primary_rotation_axis", 4131134770i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AimModifier3D), "AimModifier3D", "set_use_secondary_rotation", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AimModifier3D), "AimModifier3D", "is_using_secondary_rotation", 1116898809i64),);
    
}
fn load_AnimatableBody2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AnimatableBody2D = string_names.fetch("AnimatableBody2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatableBody2D), "AnimatableBody2D", "set_sync_to_physics", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatableBody2D), "AnimatableBody2D", "is_sync_to_physics_enabled", 36873697i64),);
    
}
fn load_AnimatableBody3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AnimatableBody3D = string_names.fetch("AnimatableBody3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatableBody3D), "AnimatableBody3D", "set_sync_to_physics", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatableBody3D), "AnimatableBody3D", "is_sync_to_physics_enabled", 36873697i64),);
    
}
fn load_AnimatedSprite2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AnimatedSprite2D = string_names.fetch("AnimatedSprite2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "set_sprite_frames", 905781144i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "get_sprite_frames", 3804851214i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "set_animation", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "get_animation", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "set_autoplay", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "get_autoplay", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "is_playing", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "play", 3269405555i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "play_backwards", 3323268493i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "pause", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "stop", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "set_centered", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "is_centered", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "set_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "get_offset", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "set_flip_h", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "is_flipped_h", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "set_flip_v", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "is_flipped_v", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "set_frame", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "get_frame", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "set_frame_progress", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "get_frame_progress", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "set_frame_and_progress", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "set_speed_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "get_speed_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite2D), "AnimatedSprite2D", "get_playing_speed", 1740695150i64),);
    
}
fn load_AnimatedSprite3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AnimatedSprite3D = string_names.fetch("AnimatedSprite3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite3D), "AnimatedSprite3D", "set_sprite_frames", 905781144i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite3D), "AnimatedSprite3D", "get_sprite_frames", 3804851214i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite3D), "AnimatedSprite3D", "set_animation", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite3D), "AnimatedSprite3D", "get_animation", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite3D), "AnimatedSprite3D", "set_autoplay", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite3D), "AnimatedSprite3D", "get_autoplay", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite3D), "AnimatedSprite3D", "is_playing", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite3D), "AnimatedSprite3D", "play", 3269405555i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite3D), "AnimatedSprite3D", "play_backwards", 3323268493i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite3D), "AnimatedSprite3D", "pause", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite3D), "AnimatedSprite3D", "stop", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite3D), "AnimatedSprite3D", "set_frame", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite3D), "AnimatedSprite3D", "get_frame", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite3D), "AnimatedSprite3D", "set_frame_progress", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite3D), "AnimatedSprite3D", "get_frame_progress", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite3D), "AnimatedSprite3D", "set_frame_and_progress", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite3D), "AnimatedSprite3D", "set_speed_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite3D), "AnimatedSprite3D", "get_speed_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedSprite3D), "AnimatedSprite3D", "get_playing_speed", 1740695150i64),);
    
}
fn load_AnimatedTexture_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AnimatedTexture = string_names.fetch("AnimatedTexture");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedTexture), "AnimatedTexture", "set_frames", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedTexture), "AnimatedTexture", "get_frames", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedTexture), "AnimatedTexture", "set_current_frame", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedTexture), "AnimatedTexture", "get_current_frame", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedTexture), "AnimatedTexture", "set_pause", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedTexture), "AnimatedTexture", "get_pause", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedTexture), "AnimatedTexture", "set_one_shot", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedTexture), "AnimatedTexture", "get_one_shot", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedTexture), "AnimatedTexture", "set_speed_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedTexture), "AnimatedTexture", "get_speed_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedTexture), "AnimatedTexture", "set_frame_texture", 666127730i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedTexture), "AnimatedTexture", "get_frame_texture", 3536238170i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedTexture), "AnimatedTexture", "set_frame_duration", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimatedTexture), "AnimatedTexture", "get_frame_duration", 2339986948i64),);
    
}
fn load_Animation_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Animation = string_names.fetch("Animation");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "add_track", 3843682357i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "remove_track", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "get_track_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_get_type", 3445944217i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_get_path", 408788394i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_set_path", 2761262315i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "find_track", 245376003i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_move_up", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_move_down", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_move_to", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_swap", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_set_imported", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_is_imported", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_set_enabled", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_is_enabled", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "position_track_insert_key", 2540608232i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "rotation_track_insert_key", 4165004800i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "scale_track_insert_key", 2540608232i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "blend_shape_track_insert_key", 1534913637i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "position_track_interpolate", 3530011197i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "rotation_track_interpolate", 2915876792i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "scale_track_interpolate", 3530011197i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "blend_shape_track_interpolate", 2482365182i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_insert_key", 808952278i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_remove_key", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_remove_key_at_time", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_set_key_value", 2060538656i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_set_key_transition", 3506521499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_set_key_time", 3506521499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_get_key_transition", 3085491603i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_get_key_count", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_get_key_value", 678354945i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_get_key_time", 3085491603i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_find_key", 4230953007i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_set_interpolation_type", 4112932513i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_get_interpolation_type", 1530756894i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_set_interpolation_loop_wrap", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_get_interpolation_loop_wrap", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "track_is_compressed", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "value_track_set_update_mode", 2854058312i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "value_track_get_update_mode", 1440326473i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "value_track_interpolate", 747269075i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "method_track_get_name", 351665558i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "method_track_get_params", 2345056839i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "bezier_track_insert_key", 3656773645i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "bezier_track_set_key_value", 3506521499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "bezier_track_set_key_in_handle", 1719223284i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "bezier_track_set_key_out_handle", 1719223284i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "bezier_track_get_key_value", 3085491603i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "bezier_track_get_key_in_handle", 3016396712i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "bezier_track_get_key_out_handle", 3016396712i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "bezier_track_interpolate", 1900462983i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "audio_track_insert_key", 4021027286i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "audio_track_set_key_stream", 3886397084i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "audio_track_set_key_start_offset", 3506521499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "audio_track_set_key_end_offset", 3506521499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "audio_track_get_key_stream", 635277205i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "audio_track_get_key_start_offset", 3085491603i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "audio_track_get_key_end_offset", 3085491603i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "audio_track_set_use_blend", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "audio_track_is_use_blend", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "animation_track_insert_key", 158676774i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "animation_track_set_key_animation", 117615382i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "animation_track_get_key_animation", 351665558i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "add_marker", 4135858297i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "remove_marker", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "has_marker", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "get_marker_at_time", 4079494655i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "get_next_marker", 4079494655i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "get_prev_marker", 4079494655i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "get_marker_time", 2349060816i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "get_marker_names", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "get_marker_color", 3742943038i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "set_marker_color", 4260178595i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "set_length", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "get_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "set_loop_mode", 3155355575i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "get_loop_mode", 1988889481i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "set_step", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "get_step", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "copy_track", 148001024i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "optimize", 3303583852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "compress", 3608408117i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Animation), "Animation", "is_capture_included", 36873697i64),);
    
}
fn load_AnimationLibrary_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AnimationLibrary = string_names.fetch("AnimationLibrary");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationLibrary), "AnimationLibrary", "add_animation", 1811855551i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationLibrary), "AnimationLibrary", "remove_animation", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationLibrary), "AnimationLibrary", "rename_animation", 3740211285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationLibrary), "AnimationLibrary", "has_animation", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationLibrary), "AnimationLibrary", "get_animation", 2933122410i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationLibrary), "AnimationLibrary", "get_animation_list", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationLibrary), "AnimationLibrary", "get_animation_list_size", 3905245786i64),);
    
}
fn load_AnimationMixer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AnimationMixer = string_names.fetch("AnimationMixer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "add_animation_library", 618909818i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "remove_animation_library", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "rename_animation_library", 3740211285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "has_animation_library", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "get_animation_library", 147342321i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "get_animation_library_list", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "has_animation", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "get_animation", 2933122410i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "get_animation_list", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "set_active", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "is_active", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "set_deterministic", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "is_deterministic", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "set_root_node", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "get_root_node", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "set_callback_mode_process", 2153733086i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "get_callback_mode_process", 1394468472i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "set_callback_mode_method", 742218271i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "get_callback_mode_method", 489449656i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "set_callback_mode_discrete", 1998944670i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "get_callback_mode_discrete", 3493168860i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "set_audio_max_polyphony", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "get_audio_max_polyphony", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "set_root_motion_track", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "get_root_motion_track", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "set_root_motion_local", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "is_root_motion_local", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "get_root_motion_position", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "get_root_motion_rotation", 1222331677i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "get_root_motion_scale", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "get_root_motion_position_accumulator", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "get_root_motion_rotation_accumulator", 1222331677i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "get_root_motion_scale_accumulator", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "clear_caches", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "advance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "capture", 1333632127i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "set_reset_on_save_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "is_reset_on_save_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "find_animation", 1559484580i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationMixer), "AnimationMixer", "find_animation_library", 1559484580i64),);
    
}
fn load_AnimationNode_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AnimationNode = string_names.fetch("AnimationNode");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNode), "AnimationNode", "add_input", 2323990056i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNode), "AnimationNode", "remove_input", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNode), "AnimationNode", "set_input_name", 215573526i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNode), "AnimationNode", "get_input_name", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNode), "AnimationNode", "get_input_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNode), "AnimationNode", "find_input", 1321353865i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNode), "AnimationNode", "set_filter_path", 3868023870i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNode), "AnimationNode", "is_path_filtered", 861721659i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNode), "AnimationNode", "set_filter_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNode), "AnimationNode", "is_filter_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNode), "AnimationNode", "get_processing_animation_tree_instance_id", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNode), "AnimationNode", "is_process_testing", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNode), "AnimationNode", "blend_animation", 1630801826i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNode), "AnimationNode", "blend_node", 1746075988i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNode), "AnimationNode", "blend_input", 1361527350i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNode), "AnimationNode", "set_parameter", 3776071444i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNode), "AnimationNode", "get_parameter", 2760726917i64),);
    
}
fn load_AnimationNodeAnimation_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AnimationNodeAnimation = string_names.fetch("AnimationNodeAnimation");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeAnimation), "AnimationNodeAnimation", "set_animation", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeAnimation), "AnimationNodeAnimation", "get_animation", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeAnimation), "AnimationNodeAnimation", "set_play_mode", 3347718873i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeAnimation), "AnimationNodeAnimation", "get_play_mode", 2061244637i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeAnimation), "AnimationNodeAnimation", "set_advance_on_start", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeAnimation), "AnimationNodeAnimation", "is_advance_on_start", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeAnimation), "AnimationNodeAnimation", "set_use_custom_timeline", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeAnimation), "AnimationNodeAnimation", "is_using_custom_timeline", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeAnimation), "AnimationNodeAnimation", "set_timeline_length", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeAnimation), "AnimationNodeAnimation", "get_timeline_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeAnimation), "AnimationNodeAnimation", "set_stretch_time_scale", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeAnimation), "AnimationNodeAnimation", "is_stretching_time_scale", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeAnimation), "AnimationNodeAnimation", "set_start_offset", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeAnimation), "AnimationNodeAnimation", "get_start_offset", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeAnimation), "AnimationNodeAnimation", "set_loop_mode", 3155355575i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeAnimation), "AnimationNodeAnimation", "get_loop_mode", 1988889481i64),);
    
}
fn load_AnimationNodeBlendSpace1D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AnimationNodeBlendSpace1D = string_names.fetch("AnimationNodeBlendSpace1D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace1D), "AnimationNodeBlendSpace1D", "add_blend_point", 285050433i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace1D), "AnimationNodeBlendSpace1D", "set_blend_point_position", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace1D), "AnimationNodeBlendSpace1D", "get_blend_point_position", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace1D), "AnimationNodeBlendSpace1D", "set_blend_point_node", 4240341528i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace1D), "AnimationNodeBlendSpace1D", "get_blend_point_node", 665599029i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace1D), "AnimationNodeBlendSpace1D", "remove_blend_point", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace1D), "AnimationNodeBlendSpace1D", "get_blend_point_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace1D), "AnimationNodeBlendSpace1D", "set_min_space", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace1D), "AnimationNodeBlendSpace1D", "get_min_space", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace1D), "AnimationNodeBlendSpace1D", "set_max_space", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace1D), "AnimationNodeBlendSpace1D", "get_max_space", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace1D), "AnimationNodeBlendSpace1D", "set_snap", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace1D), "AnimationNodeBlendSpace1D", "get_snap", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace1D), "AnimationNodeBlendSpace1D", "set_value_label", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace1D), "AnimationNodeBlendSpace1D", "get_value_label", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace1D), "AnimationNodeBlendSpace1D", "set_blend_mode", 2600869457i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace1D), "AnimationNodeBlendSpace1D", "get_blend_mode", 1547667849i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace1D), "AnimationNodeBlendSpace1D", "set_use_sync", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace1D), "AnimationNodeBlendSpace1D", "is_using_sync", 36873697i64),);
    
}
fn load_AnimationNodeBlendSpace2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AnimationNodeBlendSpace2D = string_names.fetch("AnimationNodeBlendSpace2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "add_blend_point", 402261981i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "set_blend_point_position", 163021252i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "get_blend_point_position", 2299179447i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "set_blend_point_node", 4240341528i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "get_blend_point_node", 665599029i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "remove_blend_point", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "get_blend_point_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "add_triangle", 753017335i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "get_triangle_point", 50157827i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "remove_triangle", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "get_triangle_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "set_min_space", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "get_min_space", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "set_max_space", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "get_max_space", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "set_snap", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "get_snap", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "set_x_label", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "get_x_label", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "set_y_label", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "get_y_label", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "set_auto_triangles", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "get_auto_triangles", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "set_blend_mode", 81193520i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "get_blend_mode", 1398433632i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "set_use_sync", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendSpace2D), "AnimationNodeBlendSpace2D", "is_using_sync", 36873697i64),);
    
}
fn load_AnimationNodeBlendTree_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AnimationNodeBlendTree = string_names.fetch("AnimationNodeBlendTree");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendTree), "AnimationNodeBlendTree", "add_node", 1980270704i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendTree), "AnimationNodeBlendTree", "get_node", 625644256i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendTree), "AnimationNodeBlendTree", "remove_node", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendTree), "AnimationNodeBlendTree", "rename_node", 3740211285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendTree), "AnimationNodeBlendTree", "has_node", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendTree), "AnimationNodeBlendTree", "connect_node", 2168001410i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendTree), "AnimationNodeBlendTree", "disconnect_node", 2415702435i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendTree), "AnimationNodeBlendTree", "get_node_list", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendTree), "AnimationNodeBlendTree", "set_node_position", 1999414630i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendTree), "AnimationNodeBlendTree", "get_node_position", 3100822709i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendTree), "AnimationNodeBlendTree", "set_graph_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeBlendTree), "AnimationNodeBlendTree", "get_graph_offset", 3341600327i64),);
    
}
fn load_AnimationNodeExtension_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AnimationNodeExtension = string_names.fetch("AnimationNodeExtension");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeExtension), "AnimationNodeExtension", "is_looping", 2035584311i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeExtension), "AnimationNodeExtension", "get_remaining_time", 2851904656i64),);
    
}
fn load_AnimationNodeOneShot_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AnimationNodeOneShot = string_names.fetch("AnimationNodeOneShot");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeOneShot), "AnimationNodeOneShot", "set_fadein_time", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeOneShot), "AnimationNodeOneShot", "get_fadein_time", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeOneShot), "AnimationNodeOneShot", "set_fadein_curve", 270443179i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeOneShot), "AnimationNodeOneShot", "get_fadein_curve", 2460114913i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeOneShot), "AnimationNodeOneShot", "set_fadeout_time", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeOneShot), "AnimationNodeOneShot", "get_fadeout_time", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeOneShot), "AnimationNodeOneShot", "set_fadeout_curve", 270443179i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeOneShot), "AnimationNodeOneShot", "get_fadeout_curve", 2460114913i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeOneShot), "AnimationNodeOneShot", "set_break_loop_at_end", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeOneShot), "AnimationNodeOneShot", "is_loop_broken_at_end", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeOneShot), "AnimationNodeOneShot", "set_autorestart", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeOneShot), "AnimationNodeOneShot", "has_autorestart", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeOneShot), "AnimationNodeOneShot", "set_autorestart_delay", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeOneShot), "AnimationNodeOneShot", "get_autorestart_delay", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeOneShot), "AnimationNodeOneShot", "set_autorestart_random_delay", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeOneShot), "AnimationNodeOneShot", "get_autorestart_random_delay", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeOneShot), "AnimationNodeOneShot", "set_mix_mode", 1018899799i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeOneShot), "AnimationNodeOneShot", "get_mix_mode", 3076550526i64),);
    
}
fn load_AnimationNodeStateMachine_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AnimationNodeStateMachine = string_names.fetch("AnimationNodeStateMachine");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "add_node", 1980270704i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "replace_node", 2559412862i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "get_node", 625644256i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "remove_node", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "rename_node", 3740211285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "has_node", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "get_node_name", 739213945i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "get_node_list", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "set_node_position", 1999414630i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "get_node_position", 3100822709i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "has_transition", 471820014i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "add_transition", 795486887i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "get_transition", 4192381260i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "get_transition_from", 659327637i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "get_transition_to", 659327637i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "get_transition_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "remove_transition_by_index", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "remove_transition", 3740211285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "set_graph_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "get_graph_offset", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "set_state_machine_type", 2584759088i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "get_state_machine_type", 1140726469i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "set_allow_transition_to_self", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "is_allow_transition_to_self", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "set_reset_ends", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachine), "AnimationNodeStateMachine", "are_ends_reset", 36873697i64),);
    
}
fn load_AnimationNodeStateMachinePlayback_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AnimationNodeStateMachinePlayback = string_names.fetch("AnimationNodeStateMachinePlayback");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachinePlayback), "AnimationNodeStateMachinePlayback", "travel", 3823612587i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachinePlayback), "AnimationNodeStateMachinePlayback", "start", 3823612587i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachinePlayback), "AnimationNodeStateMachinePlayback", "next", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachinePlayback), "AnimationNodeStateMachinePlayback", "stop", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachinePlayback), "AnimationNodeStateMachinePlayback", "is_playing", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachinePlayback), "AnimationNodeStateMachinePlayback", "get_current_node", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachinePlayback), "AnimationNodeStateMachinePlayback", "get_current_play_position", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachinePlayback), "AnimationNodeStateMachinePlayback", "get_current_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachinePlayback), "AnimationNodeStateMachinePlayback", "get_fading_from_node", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachinePlayback), "AnimationNodeStateMachinePlayback", "get_travel_path", 3995934104i64),);
    
}
fn load_AnimationNodeStateMachineTransition_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AnimationNodeStateMachineTransition = string_names.fetch("AnimationNodeStateMachineTransition");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachineTransition), "AnimationNodeStateMachineTransition", "set_switch_mode", 2074906633i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachineTransition), "AnimationNodeStateMachineTransition", "get_switch_mode", 2138562085i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachineTransition), "AnimationNodeStateMachineTransition", "set_advance_mode", 1210869868i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachineTransition), "AnimationNodeStateMachineTransition", "get_advance_mode", 61101689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachineTransition), "AnimationNodeStateMachineTransition", "set_advance_condition", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachineTransition), "AnimationNodeStateMachineTransition", "get_advance_condition", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachineTransition), "AnimationNodeStateMachineTransition", "set_xfade_time", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachineTransition), "AnimationNodeStateMachineTransition", "get_xfade_time", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachineTransition), "AnimationNodeStateMachineTransition", "set_xfade_curve", 270443179i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachineTransition), "AnimationNodeStateMachineTransition", "get_xfade_curve", 2460114913i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachineTransition), "AnimationNodeStateMachineTransition", "set_break_loop_at_end", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachineTransition), "AnimationNodeStateMachineTransition", "is_loop_broken_at_end", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachineTransition), "AnimationNodeStateMachineTransition", "set_reset", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachineTransition), "AnimationNodeStateMachineTransition", "is_reset", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachineTransition), "AnimationNodeStateMachineTransition", "set_priority", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachineTransition), "AnimationNodeStateMachineTransition", "get_priority", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachineTransition), "AnimationNodeStateMachineTransition", "set_advance_expression", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeStateMachineTransition), "AnimationNodeStateMachineTransition", "get_advance_expression", 201670096i64),);
    
}
fn load_AnimationNodeSync_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AnimationNodeSync = string_names.fetch("AnimationNodeSync");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeSync), "AnimationNodeSync", "set_use_sync", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeSync), "AnimationNodeSync", "is_using_sync", 36873697i64),);
    
}
fn load_AnimationNodeTimeSeek_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AnimationNodeTimeSeek = string_names.fetch("AnimationNodeTimeSeek");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeTimeSeek), "AnimationNodeTimeSeek", "set_explicit_elapse", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeTimeSeek), "AnimationNodeTimeSeek", "is_explicit_elapse", 36873697i64),);
    
}
fn load_AnimationNodeTransition_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AnimationNodeTransition = string_names.fetch("AnimationNodeTransition");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeTransition), "AnimationNodeTransition", "set_input_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeTransition), "AnimationNodeTransition", "set_input_as_auto_advance", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeTransition), "AnimationNodeTransition", "is_input_set_as_auto_advance", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeTransition), "AnimationNodeTransition", "set_input_break_loop_at_end", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeTransition), "AnimationNodeTransition", "is_input_loop_broken_at_end", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeTransition), "AnimationNodeTransition", "set_input_reset", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeTransition), "AnimationNodeTransition", "is_input_reset", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeTransition), "AnimationNodeTransition", "set_xfade_time", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeTransition), "AnimationNodeTransition", "get_xfade_time", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeTransition), "AnimationNodeTransition", "set_xfade_curve", 270443179i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeTransition), "AnimationNodeTransition", "get_xfade_curve", 2460114913i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeTransition), "AnimationNodeTransition", "set_allow_transition_to_self", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationNodeTransition), "AnimationNodeTransition", "is_allow_transition_to_self", 36873697i64),);
    
}
fn load_AnimationPlayer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AnimationPlayer = string_names.fetch("AnimationPlayer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "animation_set_next", 3740211285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "animation_get_next", 1965194235i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "set_blend_time", 3231131886i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "get_blend_time", 1958752504i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "set_default_blend_time", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "get_default_blend_time", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "set_auto_capture", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "is_auto_capture", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "set_auto_capture_duration", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "get_auto_capture_duration", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "set_auto_capture_transition_type", 1058637742i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "get_auto_capture_transition_type", 3842314528i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "set_auto_capture_ease_type", 1208105857i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "get_auto_capture_ease_type", 631880200i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "play", 3118260607i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "play_section_with_markers", 1421431412i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "play_section", 284774635i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "play_backwards", 2787282401i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "play_section_with_markers_backwards", 910195100i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "play_section_backwards", 831955981i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "play_with_capture", 1572969103i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "pause", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "stop", 107499316i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "is_playing", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "set_current_animation", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "get_current_animation", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "set_assigned_animation", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "get_assigned_animation", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "queue", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "get_queue", 2981934095i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "clear_queue", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "set_speed_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "get_speed_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "get_playing_speed", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "set_autoplay", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "get_autoplay", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "set_movie_quit_on_finish_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "is_movie_quit_on_finish_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "get_current_animation_position", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "get_current_animation_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "set_section_with_markers", 794792241i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "set_section", 3749779719i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "reset_section", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "get_section_start_time", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "get_section_end_time", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "has_section", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "seek", 1807872683i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "set_process_callback", 1663839457i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "get_process_callback", 4207496604i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "set_method_call_mode", 3413514846i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "get_method_call_mode", 3583380054i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "set_root", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationPlayer), "AnimationPlayer", "get_root", 4075236667i64),);
    
}
fn load_AnimationTree_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AnimationTree = string_names.fetch("AnimationTree");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationTree), "AnimationTree", "set_tree_root", 2581683800i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationTree), "AnimationTree", "get_tree_root", 4110384712i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationTree), "AnimationTree", "set_advance_expression_base_node", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationTree), "AnimationTree", "get_advance_expression_base_node", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationTree), "AnimationTree", "set_animation_player", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationTree), "AnimationTree", "get_animation_player", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationTree), "AnimationTree", "set_process_callback", 1723352826i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AnimationTree), "AnimationTree", "get_process_callback", 891317132i64),);
    
}
fn load_Area2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Area2D = string_names.fetch("Area2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "set_gravity_space_override_mode", 2879900038i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "get_gravity_space_override_mode", 3990256304i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "set_gravity_is_point", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "is_gravity_a_point", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "set_gravity_point_unit_distance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "get_gravity_point_unit_distance", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "set_gravity_point_center", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "get_gravity_point_center", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "set_gravity_direction", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "get_gravity_direction", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "set_gravity", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "get_gravity", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "set_linear_damp_space_override_mode", 2879900038i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "get_linear_damp_space_override_mode", 3990256304i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "set_angular_damp_space_override_mode", 2879900038i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "get_angular_damp_space_override_mode", 3990256304i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "set_linear_damp", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "get_linear_damp", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "set_angular_damp", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "get_angular_damp", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "set_priority", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "get_priority", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "set_monitoring", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "is_monitoring", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "set_monitorable", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "is_monitorable", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "get_overlapping_bodies", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "get_overlapping_areas", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "has_overlapping_bodies", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "has_overlapping_areas", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "overlaps_body", 3093956946i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "overlaps_area", 3093956946i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "set_audio_bus_name", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "get_audio_bus_name", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "set_audio_bus_override", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area2D), "Area2D", "is_overriding_audio_bus", 36873697i64),);
    
}
fn load_Area3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Area3D = string_names.fetch("Area3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "set_gravity_space_override_mode", 2311433571i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "get_gravity_space_override_mode", 958191869i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "set_gravity_is_point", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "is_gravity_a_point", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "set_gravity_point_unit_distance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "get_gravity_point_unit_distance", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "set_gravity_point_center", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "get_gravity_point_center", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "set_gravity_direction", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "get_gravity_direction", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "set_gravity", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "get_gravity", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "set_linear_damp_space_override_mode", 2311433571i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "get_linear_damp_space_override_mode", 958191869i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "set_angular_damp_space_override_mode", 2311433571i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "get_angular_damp_space_override_mode", 958191869i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "set_angular_damp", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "get_angular_damp", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "set_linear_damp", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "get_linear_damp", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "set_priority", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "get_priority", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "set_wind_force_magnitude", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "get_wind_force_magnitude", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "set_wind_attenuation_factor", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "get_wind_attenuation_factor", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "set_wind_source_path", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "get_wind_source_path", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "set_monitorable", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "is_monitorable", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "set_monitoring", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "is_monitoring", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "get_overlapping_bodies", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "get_overlapping_areas", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "has_overlapping_bodies", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "has_overlapping_areas", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "overlaps_body", 3093956946i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "overlaps_area", 3093956946i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "set_audio_bus_override", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "is_overriding_audio_bus", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "set_audio_bus_name", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "get_audio_bus_name", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "set_use_reverb_bus", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "is_using_reverb_bus", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "set_reverb_bus_name", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "get_reverb_bus_name", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "set_reverb_amount", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "get_reverb_amount", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "set_reverb_uniformity", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Area3D), "Area3D", "get_reverb_uniformity", 1740695150i64),);
    
}
fn load_ArrayMesh_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ArrayMesh = string_names.fetch("ArrayMesh");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "add_blend_shape", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "get_blend_shape_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "get_blend_shape_name", 659327637i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "set_blend_shape_name", 3780747571i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "clear_blend_shapes", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "set_blend_shape_mode", 227983991i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "get_blend_shape_mode", 836485024i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "add_surface_from_arrays", 1796411378i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "clear_surfaces", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "surface_remove", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "surface_update_vertex_region", 3837166854i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "surface_update_attribute_region", 3837166854i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "surface_update_skin_region", 3837166854i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "surface_get_array_len", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "surface_get_array_index_len", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "surface_get_format", 3718287884i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "surface_get_primitive_type", 4141943888i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "surface_find_by_name", 1321353865i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "surface_set_name", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "surface_get_name", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "regen_normal_maps", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "lightmap_unwrap", 1476641071i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "set_custom_aabb", 259215842i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "get_custom_aabb", 1068685055i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "set_shadow_mesh", 3377897901i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayMesh), "ArrayMesh", "get_shadow_mesh", 3206942465i64),);
    
}
fn load_ArrayOccluder3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ArrayOccluder3D = string_names.fetch("ArrayOccluder3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayOccluder3D), "ArrayOccluder3D", "set_arrays", 3233972621i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayOccluder3D), "ArrayOccluder3D", "set_vertices", 334873810i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ArrayOccluder3D), "ArrayOccluder3D", "set_indices", 3614634198i64),);
    
}
fn load_AspectRatioContainer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AspectRatioContainer = string_names.fetch("AspectRatioContainer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AspectRatioContainer), "AspectRatioContainer", "set_ratio", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AspectRatioContainer), "AspectRatioContainer", "get_ratio", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AspectRatioContainer), "AspectRatioContainer", "set_stretch_mode", 1876743467i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AspectRatioContainer), "AspectRatioContainer", "get_stretch_mode", 3416449033i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AspectRatioContainer), "AspectRatioContainer", "set_alignment_horizontal", 2147829016i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AspectRatioContainer), "AspectRatioContainer", "get_alignment_horizontal", 3838875429i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AspectRatioContainer), "AspectRatioContainer", "set_alignment_vertical", 2147829016i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AspectRatioContainer), "AspectRatioContainer", "get_alignment_vertical", 3838875429i64),);
    
}
fn load_AtlasTexture_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AtlasTexture = string_names.fetch("AtlasTexture");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AtlasTexture), "AtlasTexture", "set_atlas", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AtlasTexture), "AtlasTexture", "get_atlas", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AtlasTexture), "AtlasTexture", "set_region", 2046264180i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AtlasTexture), "AtlasTexture", "get_region", 1639390495i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AtlasTexture), "AtlasTexture", "set_margin", 2046264180i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AtlasTexture), "AtlasTexture", "get_margin", 1639390495i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AtlasTexture), "AtlasTexture", "set_filter_clip", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AtlasTexture), "AtlasTexture", "has_filter_clip", 36873697i64),);
    
}
fn load_AudioEffectAmplify_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioEffectAmplify = string_names.fetch("AudioEffectAmplify");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectAmplify), "AudioEffectAmplify", "set_volume_db", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectAmplify), "AudioEffectAmplify", "get_volume_db", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectAmplify), "AudioEffectAmplify", "set_volume_linear", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectAmplify), "AudioEffectAmplify", "get_volume_linear", 1740695150i64),);
    
}
fn load_AudioEffectCapture_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioEffectCapture = string_names.fetch("AudioEffectCapture");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCapture), "AudioEffectCapture", "can_get_buffer", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCapture), "AudioEffectCapture", "get_buffer", 2649534757i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCapture), "AudioEffectCapture", "clear_buffer", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCapture), "AudioEffectCapture", "set_buffer_length", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCapture), "AudioEffectCapture", "get_buffer_length", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCapture), "AudioEffectCapture", "get_frames_available", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCapture), "AudioEffectCapture", "get_discarded_frames", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCapture), "AudioEffectCapture", "get_buffer_length_frames", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCapture), "AudioEffectCapture", "get_pushed_frames", 3905245786i64),);
    
}
fn load_AudioEffectChorus_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioEffectChorus = string_names.fetch("AudioEffectChorus");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectChorus), "AudioEffectChorus", "set_voice_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectChorus), "AudioEffectChorus", "get_voice_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectChorus), "AudioEffectChorus", "set_voice_delay_ms", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectChorus), "AudioEffectChorus", "get_voice_delay_ms", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectChorus), "AudioEffectChorus", "set_voice_rate_hz", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectChorus), "AudioEffectChorus", "get_voice_rate_hz", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectChorus), "AudioEffectChorus", "set_voice_depth_ms", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectChorus), "AudioEffectChorus", "get_voice_depth_ms", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectChorus), "AudioEffectChorus", "set_voice_level_db", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectChorus), "AudioEffectChorus", "get_voice_level_db", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectChorus), "AudioEffectChorus", "set_voice_cutoff_hz", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectChorus), "AudioEffectChorus", "get_voice_cutoff_hz", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectChorus), "AudioEffectChorus", "set_voice_pan", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectChorus), "AudioEffectChorus", "get_voice_pan", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectChorus), "AudioEffectChorus", "set_wet", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectChorus), "AudioEffectChorus", "get_wet", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectChorus), "AudioEffectChorus", "set_dry", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectChorus), "AudioEffectChorus", "get_dry", 1740695150i64),);
    
}
fn load_AudioEffectCompressor_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioEffectCompressor = string_names.fetch("AudioEffectCompressor");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCompressor), "AudioEffectCompressor", "set_threshold", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCompressor), "AudioEffectCompressor", "get_threshold", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCompressor), "AudioEffectCompressor", "set_ratio", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCompressor), "AudioEffectCompressor", "get_ratio", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCompressor), "AudioEffectCompressor", "set_gain", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCompressor), "AudioEffectCompressor", "get_gain", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCompressor), "AudioEffectCompressor", "set_attack_us", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCompressor), "AudioEffectCompressor", "get_attack_us", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCompressor), "AudioEffectCompressor", "set_release_ms", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCompressor), "AudioEffectCompressor", "get_release_ms", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCompressor), "AudioEffectCompressor", "set_mix", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCompressor), "AudioEffectCompressor", "get_mix", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCompressor), "AudioEffectCompressor", "set_sidechain", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectCompressor), "AudioEffectCompressor", "get_sidechain", 2002593661i64),);
    
}
fn load_AudioEffectDelay_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioEffectDelay = string_names.fetch("AudioEffectDelay");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "set_dry", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "get_dry", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "set_tap1_active", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "is_tap1_active", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "set_tap1_delay_ms", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "get_tap1_delay_ms", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "set_tap1_level_db", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "get_tap1_level_db", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "set_tap1_pan", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "get_tap1_pan", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "set_tap2_active", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "is_tap2_active", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "set_tap2_delay_ms", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "get_tap2_delay_ms", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "set_tap2_level_db", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "get_tap2_level_db", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "set_tap2_pan", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "get_tap2_pan", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "set_feedback_active", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "is_feedback_active", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "set_feedback_delay_ms", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "get_feedback_delay_ms", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "set_feedback_level_db", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "get_feedback_level_db", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "set_feedback_lowpass", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDelay), "AudioEffectDelay", "get_feedback_lowpass", 1740695150i64),);
    
}
fn load_AudioEffectDistortion_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioEffectDistortion = string_names.fetch("AudioEffectDistortion");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDistortion), "AudioEffectDistortion", "set_mode", 1314744793i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDistortion), "AudioEffectDistortion", "get_mode", 809118343i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDistortion), "AudioEffectDistortion", "set_pre_gain", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDistortion), "AudioEffectDistortion", "get_pre_gain", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDistortion), "AudioEffectDistortion", "set_keep_hf_hz", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDistortion), "AudioEffectDistortion", "get_keep_hf_hz", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDistortion), "AudioEffectDistortion", "set_drive", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDistortion), "AudioEffectDistortion", "get_drive", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDistortion), "AudioEffectDistortion", "set_post_gain", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectDistortion), "AudioEffectDistortion", "get_post_gain", 1740695150i64),);
    
}
fn load_AudioEffectEQ_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioEffectEQ = string_names.fetch("AudioEffectEQ");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectEQ), "AudioEffectEQ", "set_band_gain_db", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectEQ), "AudioEffectEQ", "get_band_gain_db", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectEQ), "AudioEffectEQ", "get_band_count", 3905245786i64),);
    
}
fn load_AudioEffectFilter_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioEffectFilter = string_names.fetch("AudioEffectFilter");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectFilter), "AudioEffectFilter", "set_cutoff", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectFilter), "AudioEffectFilter", "get_cutoff", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectFilter), "AudioEffectFilter", "set_resonance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectFilter), "AudioEffectFilter", "get_resonance", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectFilter), "AudioEffectFilter", "set_gain", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectFilter), "AudioEffectFilter", "get_gain", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectFilter), "AudioEffectFilter", "set_db", 771740901i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectFilter), "AudioEffectFilter", "get_db", 3981721890i64),);
    
}
fn load_AudioEffectHardLimiter_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioEffectHardLimiter = string_names.fetch("AudioEffectHardLimiter");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectHardLimiter), "AudioEffectHardLimiter", "set_ceiling_db", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectHardLimiter), "AudioEffectHardLimiter", "get_ceiling_db", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectHardLimiter), "AudioEffectHardLimiter", "set_pre_gain_db", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectHardLimiter), "AudioEffectHardLimiter", "get_pre_gain_db", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectHardLimiter), "AudioEffectHardLimiter", "set_release", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectHardLimiter), "AudioEffectHardLimiter", "get_release", 1740695150i64),);
    
}
fn load_AudioEffectLimiter_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioEffectLimiter = string_names.fetch("AudioEffectLimiter");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectLimiter), "AudioEffectLimiter", "set_ceiling_db", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectLimiter), "AudioEffectLimiter", "get_ceiling_db", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectLimiter), "AudioEffectLimiter", "set_threshold_db", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectLimiter), "AudioEffectLimiter", "get_threshold_db", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectLimiter), "AudioEffectLimiter", "set_soft_clip_db", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectLimiter), "AudioEffectLimiter", "get_soft_clip_db", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectLimiter), "AudioEffectLimiter", "set_soft_clip_ratio", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectLimiter), "AudioEffectLimiter", "get_soft_clip_ratio", 1740695150i64),);
    
}
fn load_AudioEffectPanner_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioEffectPanner = string_names.fetch("AudioEffectPanner");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectPanner), "AudioEffectPanner", "set_pan", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectPanner), "AudioEffectPanner", "get_pan", 1740695150i64),);
    
}
fn load_AudioEffectPhaser_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioEffectPhaser = string_names.fetch("AudioEffectPhaser");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectPhaser), "AudioEffectPhaser", "set_range_min_hz", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectPhaser), "AudioEffectPhaser", "get_range_min_hz", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectPhaser), "AudioEffectPhaser", "set_range_max_hz", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectPhaser), "AudioEffectPhaser", "get_range_max_hz", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectPhaser), "AudioEffectPhaser", "set_rate_hz", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectPhaser), "AudioEffectPhaser", "get_rate_hz", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectPhaser), "AudioEffectPhaser", "set_feedback", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectPhaser), "AudioEffectPhaser", "get_feedback", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectPhaser), "AudioEffectPhaser", "set_depth", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectPhaser), "AudioEffectPhaser", "get_depth", 1740695150i64),);
    
}
fn load_AudioEffectPitchShift_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioEffectPitchShift = string_names.fetch("AudioEffectPitchShift");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectPitchShift), "AudioEffectPitchShift", "set_pitch_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectPitchShift), "AudioEffectPitchShift", "get_pitch_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectPitchShift), "AudioEffectPitchShift", "set_oversampling", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectPitchShift), "AudioEffectPitchShift", "get_oversampling", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectPitchShift), "AudioEffectPitchShift", "set_fft_size", 2323518741i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectPitchShift), "AudioEffectPitchShift", "get_fft_size", 2361246789i64),);
    
}
fn load_AudioEffectRecord_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioEffectRecord = string_names.fetch("AudioEffectRecord");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectRecord), "AudioEffectRecord", "set_recording_active", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectRecord), "AudioEffectRecord", "is_recording_active", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectRecord), "AudioEffectRecord", "set_format", 60648488i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectRecord), "AudioEffectRecord", "get_format", 3151724922i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectRecord), "AudioEffectRecord", "get_recording", 2964110865i64),);
    
}
fn load_AudioEffectReverb_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioEffectReverb = string_names.fetch("AudioEffectReverb");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectReverb), "AudioEffectReverb", "set_predelay_msec", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectReverb), "AudioEffectReverb", "get_predelay_msec", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectReverb), "AudioEffectReverb", "set_predelay_feedback", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectReverb), "AudioEffectReverb", "get_predelay_feedback", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectReverb), "AudioEffectReverb", "set_room_size", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectReverb), "AudioEffectReverb", "get_room_size", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectReverb), "AudioEffectReverb", "set_damping", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectReverb), "AudioEffectReverb", "get_damping", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectReverb), "AudioEffectReverb", "set_spread", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectReverb), "AudioEffectReverb", "get_spread", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectReverb), "AudioEffectReverb", "set_dry", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectReverb), "AudioEffectReverb", "get_dry", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectReverb), "AudioEffectReverb", "set_wet", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectReverb), "AudioEffectReverb", "get_wet", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectReverb), "AudioEffectReverb", "set_hpf", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectReverb), "AudioEffectReverb", "get_hpf", 1740695150i64),);
    
}
fn load_AudioEffectSpectrumAnalyzer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioEffectSpectrumAnalyzer = string_names.fetch("AudioEffectSpectrumAnalyzer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectSpectrumAnalyzer), "AudioEffectSpectrumAnalyzer", "set_buffer_length", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectSpectrumAnalyzer), "AudioEffectSpectrumAnalyzer", "get_buffer_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectSpectrumAnalyzer), "AudioEffectSpectrumAnalyzer", "set_tap_back_pos", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectSpectrumAnalyzer), "AudioEffectSpectrumAnalyzer", "get_tap_back_pos", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectSpectrumAnalyzer), "AudioEffectSpectrumAnalyzer", "set_fft_size", 1202879215i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectSpectrumAnalyzer), "AudioEffectSpectrumAnalyzer", "get_fft_size", 3925405343i64),);
    
}
fn load_AudioEffectSpectrumAnalyzerInstance_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioEffectSpectrumAnalyzerInstance = string_names.fetch("AudioEffectSpectrumAnalyzerInstance");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectSpectrumAnalyzerInstance), "AudioEffectSpectrumAnalyzerInstance", "get_magnitude_for_frequency_range", 797993915i64),);
    
}
fn load_AudioEffectStereoEnhance_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioEffectStereoEnhance = string_names.fetch("AudioEffectStereoEnhance");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectStereoEnhance), "AudioEffectStereoEnhance", "set_pan_pullout", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectStereoEnhance), "AudioEffectStereoEnhance", "get_pan_pullout", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectStereoEnhance), "AudioEffectStereoEnhance", "set_time_pullout", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectStereoEnhance), "AudioEffectStereoEnhance", "get_time_pullout", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectStereoEnhance), "AudioEffectStereoEnhance", "set_surround", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioEffectStereoEnhance), "AudioEffectStereoEnhance", "get_surround", 1740695150i64),);
    
}
fn load_AudioListener2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioListener2D = string_names.fetch("AudioListener2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioListener2D), "AudioListener2D", "make_current", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioListener2D), "AudioListener2D", "clear_current", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioListener2D), "AudioListener2D", "is_current", 36873697i64),);
    
}
fn load_AudioListener3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioListener3D = string_names.fetch("AudioListener3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioListener3D), "AudioListener3D", "make_current", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioListener3D), "AudioListener3D", "clear_current", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioListener3D), "AudioListener3D", "is_current", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioListener3D), "AudioListener3D", "get_listener_transform", 3229777777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioListener3D), "AudioListener3D", "set_doppler_tracking", 2365921740i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioListener3D), "AudioListener3D", "get_doppler_tracking", 550229039i64),);
    
}
fn load_AudioStream_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioStream = string_names.fetch("AudioStream");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStream), "AudioStream", "get_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStream), "AudioStream", "is_monophonic", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStream), "AudioStream", "instantiate_playback", 210135309i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStream), "AudioStream", "can_be_sampled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStream), "AudioStream", "is_meta_stream", 36873697i64),);
    
}
fn load_AudioStreamGenerator_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioStreamGenerator = string_names.fetch("AudioStreamGenerator");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamGenerator), "AudioStreamGenerator", "set_mix_rate", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamGenerator), "AudioStreamGenerator", "get_mix_rate", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamGenerator), "AudioStreamGenerator", "set_mix_rate_mode", 3354885803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamGenerator), "AudioStreamGenerator", "get_mix_rate_mode", 3537132591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamGenerator), "AudioStreamGenerator", "set_buffer_length", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamGenerator), "AudioStreamGenerator", "get_buffer_length", 1740695150i64),);
    
}
fn load_AudioStreamGeneratorPlayback_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioStreamGeneratorPlayback = string_names.fetch("AudioStreamGeneratorPlayback");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamGeneratorPlayback), "AudioStreamGeneratorPlayback", "push_frame", 3975407249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamGeneratorPlayback), "AudioStreamGeneratorPlayback", "can_push_buffer", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamGeneratorPlayback), "AudioStreamGeneratorPlayback", "push_buffer", 1361156557i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamGeneratorPlayback), "AudioStreamGeneratorPlayback", "get_frames_available", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamGeneratorPlayback), "AudioStreamGeneratorPlayback", "get_skips", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamGeneratorPlayback), "AudioStreamGeneratorPlayback", "clear_buffer", 3218959716i64),);
    
}
fn load_AudioStreamInteractive_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioStreamInteractive = string_names.fetch("AudioStreamInteractive");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "set_clip_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "get_clip_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "set_initial_clip", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "get_initial_clip", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "set_clip_name", 3780747571i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "get_clip_name", 659327637i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "set_clip_stream", 111075094i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "get_clip_stream", 2739380747i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "set_clip_auto_advance", 57217598i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "get_clip_auto_advance", 1778634807i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "set_clip_auto_advance_next_clip", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "get_clip_auto_advance_next_clip", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "add_transition", 1630280552i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "has_transition", 2522259332i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "erase_transition", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "get_transition_list", 1930428628i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "get_transition_from_time", 3453338158i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "get_transition_to_time", 1369651373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "get_transition_fade_mode", 4065396087i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "get_transition_fade_beats", 3085491603i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "is_transition_using_filler_clip", 2522259332i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "get_transition_filler_clip", 3175239445i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamInteractive), "AudioStreamInteractive", "is_transition_holding_previous", 2522259332i64),);
    
}
fn load_AudioStreamMP3_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioStreamMP3 = string_names.fetch("AudioStreamMP3");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamMP3), "AudioStreamMP3", "load_from_buffer", 1674970313i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamMP3), "AudioStreamMP3", "load_from_file", 4238362998i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamMP3), "AudioStreamMP3", "set_data", 2971499966i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamMP3), "AudioStreamMP3", "get_data", 2362200018i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamMP3), "AudioStreamMP3", "set_loop", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamMP3), "AudioStreamMP3", "has_loop", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamMP3), "AudioStreamMP3", "set_loop_offset", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamMP3), "AudioStreamMP3", "get_loop_offset", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamMP3), "AudioStreamMP3", "set_bpm", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamMP3), "AudioStreamMP3", "get_bpm", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamMP3), "AudioStreamMP3", "set_beat_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamMP3), "AudioStreamMP3", "get_beat_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamMP3), "AudioStreamMP3", "set_bar_beats", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamMP3), "AudioStreamMP3", "get_bar_beats", 3905245786i64),);
    
}
fn load_AudioStreamOggVorbis_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioStreamOggVorbis = string_names.fetch("AudioStreamOggVorbis");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamOggVorbis), "AudioStreamOggVorbis", "load_from_buffer", 354904730i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamOggVorbis), "AudioStreamOggVorbis", "load_from_file", 797568536i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamOggVorbis), "AudioStreamOggVorbis", "set_packet_sequence", 438882457i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamOggVorbis), "AudioStreamOggVorbis", "get_packet_sequence", 2801636033i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamOggVorbis), "AudioStreamOggVorbis", "set_loop", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamOggVorbis), "AudioStreamOggVorbis", "has_loop", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamOggVorbis), "AudioStreamOggVorbis", "set_loop_offset", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamOggVorbis), "AudioStreamOggVorbis", "get_loop_offset", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamOggVorbis), "AudioStreamOggVorbis", "set_bpm", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamOggVorbis), "AudioStreamOggVorbis", "get_bpm", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamOggVorbis), "AudioStreamOggVorbis", "set_beat_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamOggVorbis), "AudioStreamOggVorbis", "get_beat_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamOggVorbis), "AudioStreamOggVorbis", "set_bar_beats", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamOggVorbis), "AudioStreamOggVorbis", "get_bar_beats", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamOggVorbis), "AudioStreamOggVorbis", "set_tags", 4155329257i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamOggVorbis), "AudioStreamOggVorbis", "get_tags", 3102165223i64),);
    
}
fn load_AudioStreamPlayback_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioStreamPlayback = string_names.fetch("AudioStreamPlayback");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayback), "AudioStreamPlayback", "mix_audio", 3341291446i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayback), "AudioStreamPlayback", "start", 1958160172i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayback), "AudioStreamPlayback", "seek", 1958160172i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayback), "AudioStreamPlayback", "stop", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayback), "AudioStreamPlayback", "get_loop_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayback), "AudioStreamPlayback", "get_playback_position", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayback), "AudioStreamPlayback", "is_playing", 36873697i64),);
    
}
fn load_AudioStreamPlaybackInteractive_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioStreamPlaybackInteractive = string_names.fetch("AudioStreamPlaybackInteractive");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlaybackInteractive), "AudioStreamPlaybackInteractive", "switch_to_clip_by_name", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlaybackInteractive), "AudioStreamPlaybackInteractive", "switch_to_clip", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlaybackInteractive), "AudioStreamPlaybackInteractive", "get_current_clip_index", 3905245786i64),);
    
}
fn load_AudioStreamPlaybackPolyphonic_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioStreamPlaybackPolyphonic = string_names.fetch("AudioStreamPlaybackPolyphonic");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlaybackPolyphonic), "AudioStreamPlaybackPolyphonic", "play_stream", 1846744803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlaybackPolyphonic), "AudioStreamPlaybackPolyphonic", "set_stream_volume", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlaybackPolyphonic), "AudioStreamPlaybackPolyphonic", "set_stream_pitch_scale", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlaybackPolyphonic), "AudioStreamPlaybackPolyphonic", "is_stream_playing", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlaybackPolyphonic), "AudioStreamPlaybackPolyphonic", "stop_stream", 1286410249i64),);
    
}
fn load_AudioStreamPlaybackResampled_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioStreamPlaybackResampled = string_names.fetch("AudioStreamPlaybackResampled");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlaybackResampled), "AudioStreamPlaybackResampled", "begin_resample", 3218959716i64),);
    
}
fn load_AudioStreamPlayer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioStreamPlayer = string_names.fetch("AudioStreamPlayer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "set_stream", 2210767741i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "get_stream", 160907539i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "set_volume_db", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "get_volume_db", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "set_volume_linear", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "get_volume_linear", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "set_pitch_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "get_pitch_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "play", 1958160172i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "seek", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "stop", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "is_playing", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "get_playback_position", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "set_bus", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "get_bus", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "set_autoplay", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "is_autoplay_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "set_mix_target", 2300306138i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "get_mix_target", 172807476i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "set_playing", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "set_stream_paused", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "get_stream_paused", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "set_max_polyphony", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "get_max_polyphony", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "has_stream_playback", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "get_stream_playback", 210135309i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "set_playback_type", 725473817i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer), "AudioStreamPlayer", "get_playback_type", 4011264623i64),);
    
}
fn load_AudioStreamPlayer2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioStreamPlayer2D = string_names.fetch("AudioStreamPlayer2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "set_stream", 2210767741i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "get_stream", 160907539i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "set_volume_db", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "get_volume_db", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "set_volume_linear", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "get_volume_linear", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "set_pitch_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "get_pitch_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "play", 1958160172i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "seek", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "stop", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "is_playing", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "get_playback_position", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "set_bus", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "get_bus", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "set_autoplay", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "is_autoplay_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "set_playing", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "set_max_distance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "get_max_distance", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "set_attenuation", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "get_attenuation", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "set_area_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "get_area_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "set_stream_paused", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "get_stream_paused", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "set_max_polyphony", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "get_max_polyphony", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "set_panning_strength", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "get_panning_strength", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "has_stream_playback", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "get_stream_playback", 210135309i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "set_playback_type", 725473817i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer2D), "AudioStreamPlayer2D", "get_playback_type", 4011264623i64),);
    
}
fn load_AudioStreamPlayer3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioStreamPlayer3D = string_names.fetch("AudioStreamPlayer3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "set_stream", 2210767741i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "get_stream", 160907539i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "set_volume_db", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "get_volume_db", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "set_volume_linear", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "get_volume_linear", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "set_unit_size", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "get_unit_size", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "set_max_db", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "get_max_db", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "set_pitch_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "get_pitch_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "play", 1958160172i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "seek", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "stop", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "is_playing", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "get_playback_position", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "set_bus", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "get_bus", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "set_autoplay", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "is_autoplay_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "set_playing", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "set_max_distance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "get_max_distance", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "set_area_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "get_area_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "set_emission_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "get_emission_angle", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "set_emission_angle_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "is_emission_angle_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "set_emission_angle_filter_attenuation_db", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "get_emission_angle_filter_attenuation_db", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "set_attenuation_filter_cutoff_hz", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "get_attenuation_filter_cutoff_hz", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "set_attenuation_filter_db", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "get_attenuation_filter_db", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "set_attenuation_model", 2988086229i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "get_attenuation_model", 3035106060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "set_doppler_tracking", 3968161450i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "get_doppler_tracking", 1702418664i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "set_stream_paused", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "get_stream_paused", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "set_max_polyphony", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "get_max_polyphony", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "set_panning_strength", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "get_panning_strength", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "has_stream_playback", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "get_stream_playback", 210135309i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "set_playback_type", 725473817i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlayer3D), "AudioStreamPlayer3D", "get_playback_type", 4011264623i64),);
    
}
fn load_AudioStreamPlaylist_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioStreamPlaylist = string_names.fetch("AudioStreamPlaylist");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlaylist), "AudioStreamPlaylist", "set_stream_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlaylist), "AudioStreamPlaylist", "get_stream_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlaylist), "AudioStreamPlaylist", "get_bpm", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlaylist), "AudioStreamPlaylist", "set_list_stream", 111075094i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlaylist), "AudioStreamPlaylist", "get_list_stream", 2739380747i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlaylist), "AudioStreamPlaylist", "set_shuffle", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlaylist), "AudioStreamPlaylist", "get_shuffle", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlaylist), "AudioStreamPlaylist", "set_fade_time", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlaylist), "AudioStreamPlaylist", "get_fade_time", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlaylist), "AudioStreamPlaylist", "set_loop", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPlaylist), "AudioStreamPlaylist", "has_loop", 36873697i64),);
    
}
fn load_AudioStreamPolyphonic_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioStreamPolyphonic = string_names.fetch("AudioStreamPolyphonic");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPolyphonic), "AudioStreamPolyphonic", "set_polyphony", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamPolyphonic), "AudioStreamPolyphonic", "get_polyphony", 3905245786i64),);
    
}
fn load_AudioStreamRandomizer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioStreamRandomizer = string_names.fetch("AudioStreamRandomizer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamRandomizer), "AudioStreamRandomizer", "add_stream", 1892018854i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamRandomizer), "AudioStreamRandomizer", "move_stream", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamRandomizer), "AudioStreamRandomizer", "remove_stream", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamRandomizer), "AudioStreamRandomizer", "set_stream", 111075094i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamRandomizer), "AudioStreamRandomizer", "get_stream", 2739380747i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamRandomizer), "AudioStreamRandomizer", "set_stream_probability_weight", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamRandomizer), "AudioStreamRandomizer", "get_stream_probability_weight", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamRandomizer), "AudioStreamRandomizer", "set_streams_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamRandomizer), "AudioStreamRandomizer", "get_streams_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamRandomizer), "AudioStreamRandomizer", "set_random_pitch", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamRandomizer), "AudioStreamRandomizer", "get_random_pitch", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamRandomizer), "AudioStreamRandomizer", "set_random_volume_offset_db", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamRandomizer), "AudioStreamRandomizer", "get_random_volume_offset_db", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamRandomizer), "AudioStreamRandomizer", "set_playback_mode", 3950967023i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamRandomizer), "AudioStreamRandomizer", "get_playback_mode", 3943055077i64),);
    
}
fn load_AudioStreamSynchronized_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioStreamSynchronized = string_names.fetch("AudioStreamSynchronized");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamSynchronized), "AudioStreamSynchronized", "set_stream_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamSynchronized), "AudioStreamSynchronized", "get_stream_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamSynchronized), "AudioStreamSynchronized", "set_sync_stream", 111075094i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamSynchronized), "AudioStreamSynchronized", "get_sync_stream", 2739380747i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamSynchronized), "AudioStreamSynchronized", "set_sync_stream_volume", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamSynchronized), "AudioStreamSynchronized", "get_sync_stream_volume", 2339986948i64),);
    
}
fn load_AudioStreamWAV_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_AudioStreamWAV = string_names.fetch("AudioStreamWAV");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamWAV), "AudioStreamWAV", "load_from_buffer", 4266838938i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamWAV), "AudioStreamWAV", "load_from_file", 4015802384i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamWAV), "AudioStreamWAV", "set_data", 2971499966i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamWAV), "AudioStreamWAV", "get_data", 2362200018i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamWAV), "AudioStreamWAV", "set_format", 60648488i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamWAV), "AudioStreamWAV", "get_format", 3151724922i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamWAV), "AudioStreamWAV", "set_loop_mode", 2444882972i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamWAV), "AudioStreamWAV", "get_loop_mode", 393560655i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamWAV), "AudioStreamWAV", "set_loop_begin", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamWAV), "AudioStreamWAV", "get_loop_begin", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamWAV), "AudioStreamWAV", "set_loop_end", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamWAV), "AudioStreamWAV", "get_loop_end", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamWAV), "AudioStreamWAV", "set_mix_rate", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamWAV), "AudioStreamWAV", "get_mix_rate", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamWAV), "AudioStreamWAV", "set_stereo", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamWAV), "AudioStreamWAV", "is_stereo", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamWAV), "AudioStreamWAV", "set_tags", 4155329257i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamWAV), "AudioStreamWAV", "get_tags", 3102165223i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_AudioStreamWAV), "AudioStreamWAV", "save_to_wav", 166001499i64),);
    
}
fn load_BackBufferCopy_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_BackBufferCopy = string_names.fetch("BackBufferCopy");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BackBufferCopy), "BackBufferCopy", "set_rect", 2046264180i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BackBufferCopy), "BackBufferCopy", "get_rect", 1639390495i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BackBufferCopy), "BackBufferCopy", "set_copy_mode", 1713538590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BackBufferCopy), "BackBufferCopy", "get_copy_mode", 3271169440i64),);
    
}
fn load_BaseButton_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_BaseButton = string_names.fetch("BaseButton");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "set_pressed", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "is_pressed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "set_pressed_no_signal", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "is_hovered", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "set_toggle_mode", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "is_toggle_mode", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "set_shortcut_in_tooltip", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "is_shortcut_in_tooltip_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "set_disabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "is_disabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "set_action_mode", 1985162088i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "get_action_mode", 2589712189i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "set_button_mask", 3950145251i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "get_button_mask", 2512161324i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "get_draw_mode", 2492721305i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "set_keep_pressed_outside", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "is_keep_pressed_outside", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "set_shortcut_feedback", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "is_shortcut_feedback", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "set_shortcut", 857163497i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "get_shortcut", 3415666916i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "set_button_group", 1794463739i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseButton), "BaseButton", "get_button_group", 281644053i64),);
    
}
fn load_BaseMaterial3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_BaseMaterial3D = string_names.fetch("BaseMaterial3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_albedo", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_albedo", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_transparency", 3435651667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_transparency", 990903061i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_alpha_antialiasing", 3212649852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_alpha_antialiasing", 2889939400i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_alpha_antialiasing_edge", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_alpha_antialiasing_edge", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_shading_mode", 3368750322i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_shading_mode", 2132070559i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_specular", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_specular", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_metallic", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_metallic", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_roughness", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_roughness", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_emission", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_emission", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_emission_energy_multiplier", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_emission_energy_multiplier", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_emission_intensity", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_emission_intensity", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_normal_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_normal_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_rim", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_rim", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_rim_tint", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_rim_tint", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_clearcoat", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_clearcoat", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_clearcoat_roughness", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_clearcoat_roughness", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_anisotropy", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_anisotropy", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_heightmap_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_heightmap_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_subsurface_scattering_strength", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_subsurface_scattering_strength", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_transmittance_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_transmittance_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_transmittance_depth", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_transmittance_depth", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_transmittance_boost", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_transmittance_boost", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_backlight", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_backlight", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_refraction", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_refraction", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_point_size", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_point_size", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_detail_uv", 456801921i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_detail_uv", 2306920512i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_blend_mode", 2830186259i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_blend_mode", 4022690962i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_depth_draw_mode", 1456584748i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_depth_draw_mode", 2578197639i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_depth_test", 3918692338i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_depth_test", 3434785811i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_cull_mode", 2338909218i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_cull_mode", 1941499586i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_diffuse_mode", 1045299638i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_diffuse_mode", 3973617136i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_specular_mode", 584737147i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_specular_mode", 2569953298i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_flag", 3070159527i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_flag", 1286410065i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_texture_filter", 22904437i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_texture_filter", 3289213076i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_feature", 2819288693i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_feature", 1965241794i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_texture", 464208135i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_texture", 329605813i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_detail_blend_mode", 2830186259i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_detail_blend_mode", 4022690962i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_uv1_scale", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_uv1_scale", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_uv1_offset", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_uv1_offset", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_uv1_triplanar_blend_sharpness", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_uv1_triplanar_blend_sharpness", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_uv2_scale", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_uv2_scale", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_uv2_offset", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_uv2_offset", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_uv2_triplanar_blend_sharpness", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_uv2_triplanar_blend_sharpness", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_billboard_mode", 4202036497i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_billboard_mode", 1283840139i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_particles_anim_h_frames", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_particles_anim_h_frames", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_particles_anim_v_frames", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_particles_anim_v_frames", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_particles_anim_loop", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_particles_anim_loop", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_heightmap_deep_parallax", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "is_heightmap_deep_parallax_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_heightmap_deep_parallax_min_layers", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_heightmap_deep_parallax_min_layers", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_heightmap_deep_parallax_max_layers", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_heightmap_deep_parallax_max_layers", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_heightmap_deep_parallax_flip_tangent", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_heightmap_deep_parallax_flip_tangent", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_heightmap_deep_parallax_flip_binormal", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_heightmap_deep_parallax_flip_binormal", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_grow", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_grow", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_emission_operator", 3825128922i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_emission_operator", 974205018i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_ao_light_affect", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_ao_light_affect", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_alpha_scissor_threshold", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_alpha_scissor_threshold", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_alpha_hash_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_alpha_hash_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_grow_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "is_grow_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_metallic_texture_channel", 744167988i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_metallic_texture_channel", 568133867i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_roughness_texture_channel", 744167988i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_roughness_texture_channel", 568133867i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_ao_texture_channel", 744167988i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_ao_texture_channel", 568133867i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_refraction_texture_channel", 744167988i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_refraction_texture_channel", 568133867i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_proximity_fade_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "is_proximity_fade_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_proximity_fade_distance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_proximity_fade_distance", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_msdf_pixel_range", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_msdf_pixel_range", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_msdf_outline_size", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_msdf_outline_size", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_distance_fade", 1379478617i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_distance_fade", 2694575734i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_distance_fade_max_distance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_distance_fade_max_distance", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_distance_fade_min_distance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_distance_fade_min_distance", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_z_clip_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_z_clip_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_fov_override", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_fov_override", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_stencil_mode", 2272367200i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_stencil_mode", 2908443456i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_stencil_flags", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_stencil_flags", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_stencil_compare", 3741726481i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_stencil_compare", 2824600492i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_stencil_reference", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_stencil_reference", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_stencil_effect_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_stencil_effect_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "set_stencil_effect_outline_thickness", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BaseMaterial3D), "BaseMaterial3D", "get_stencil_effect_outline_thickness", 1740695150i64),);
    
}
fn load_BitMap_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_BitMap = string_names.fetch("BitMap");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BitMap), "BitMap", "create", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BitMap), "BitMap", "create_from_image_alpha", 106271684i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BitMap), "BitMap", "set_bitv", 4153096796i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BitMap), "BitMap", "set_bit", 1383440665i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BitMap), "BitMap", "get_bitv", 3900751641i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BitMap), "BitMap", "get_bit", 2522259332i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BitMap), "BitMap", "set_bit_rect", 472162941i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BitMap), "BitMap", "get_true_bit_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BitMap), "BitMap", "get_size", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BitMap), "BitMap", "resize", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BitMap), "BitMap", "grow_mask", 3317281434i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BitMap), "BitMap", "convert_to_image", 4190603485i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BitMap), "BitMap", "opaque_to_polygons", 48478126i64),);
    
}
fn load_Bone2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Bone2D = string_names.fetch("Bone2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Bone2D), "Bone2D", "set_rest", 2761652528i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Bone2D), "Bone2D", "get_rest", 3814499831i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Bone2D), "Bone2D", "apply_rest", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Bone2D), "Bone2D", "get_skeleton_rest", 3814499831i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Bone2D), "Bone2D", "get_index_in_skeleton", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Bone2D), "Bone2D", "set_autocalculate_length_and_angle", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Bone2D), "Bone2D", "get_autocalculate_length_and_angle", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Bone2D), "Bone2D", "set_length", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Bone2D), "Bone2D", "get_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Bone2D), "Bone2D", "set_bone_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Bone2D), "Bone2D", "get_bone_angle", 1740695150i64),);
    
}
fn load_BoneAttachment3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_BoneAttachment3D = string_names.fetch("BoneAttachment3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneAttachment3D), "BoneAttachment3D", "get_skeleton", 1814733083i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneAttachment3D), "BoneAttachment3D", "set_bone_name", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneAttachment3D), "BoneAttachment3D", "get_bone_name", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneAttachment3D), "BoneAttachment3D", "set_bone_idx", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneAttachment3D), "BoneAttachment3D", "get_bone_idx", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneAttachment3D), "BoneAttachment3D", "on_skeleton_update", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneAttachment3D), "BoneAttachment3D", "set_override_pose", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneAttachment3D), "BoneAttachment3D", "get_override_pose", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneAttachment3D), "BoneAttachment3D", "set_use_external_skeleton", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneAttachment3D), "BoneAttachment3D", "get_use_external_skeleton", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneAttachment3D), "BoneAttachment3D", "set_external_skeleton", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneAttachment3D), "BoneAttachment3D", "get_external_skeleton", 4075236667i64),);
    
}
fn load_BoneConstraint3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_BoneConstraint3D = string_names.fetch("BoneConstraint3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneConstraint3D), "BoneConstraint3D", "set_amount", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneConstraint3D), "BoneConstraint3D", "get_amount", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneConstraint3D), "BoneConstraint3D", "set_apply_bone_name", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneConstraint3D), "BoneConstraint3D", "get_apply_bone_name", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneConstraint3D), "BoneConstraint3D", "set_apply_bone", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneConstraint3D), "BoneConstraint3D", "get_apply_bone", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneConstraint3D), "BoneConstraint3D", "set_reference_bone_name", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneConstraint3D), "BoneConstraint3D", "get_reference_bone_name", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneConstraint3D), "BoneConstraint3D", "set_reference_bone", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneConstraint3D), "BoneConstraint3D", "get_reference_bone", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneConstraint3D), "BoneConstraint3D", "set_setting_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneConstraint3D), "BoneConstraint3D", "get_setting_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneConstraint3D), "BoneConstraint3D", "clear_setting", 3218959716i64),);
    
}
fn load_BoneMap_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_BoneMap = string_names.fetch("BoneMap");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneMap), "BoneMap", "get_profile", 4291782652i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneMap), "BoneMap", "set_profile", 3870374136i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneMap), "BoneMap", "get_skeleton_bone_name", 1965194235i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneMap), "BoneMap", "set_skeleton_bone_name", 3740211285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoneMap), "BoneMap", "find_profile_bone_name", 1965194235i64),);
    
}
fn load_BoxContainer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_BoxContainer = string_names.fetch("BoxContainer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoxContainer), "BoxContainer", "add_spacer", 1326660695i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoxContainer), "BoxContainer", "set_alignment", 2456745134i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoxContainer), "BoxContainer", "get_alignment", 1915476527i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoxContainer), "BoxContainer", "set_vertical", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoxContainer), "BoxContainer", "is_vertical", 36873697i64),);
    
}
fn load_BoxMesh_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_BoxMesh = string_names.fetch("BoxMesh");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoxMesh), "BoxMesh", "set_size", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoxMesh), "BoxMesh", "get_size", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoxMesh), "BoxMesh", "set_subdivide_width", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoxMesh), "BoxMesh", "get_subdivide_width", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoxMesh), "BoxMesh", "set_subdivide_height", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoxMesh), "BoxMesh", "get_subdivide_height", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoxMesh), "BoxMesh", "set_subdivide_depth", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoxMesh), "BoxMesh", "get_subdivide_depth", 3905245786i64),);
    
}
fn load_BoxOccluder3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_BoxOccluder3D = string_names.fetch("BoxOccluder3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoxOccluder3D), "BoxOccluder3D", "set_size", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoxOccluder3D), "BoxOccluder3D", "get_size", 3360562783i64),);
    
}
fn load_BoxShape3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_BoxShape3D = string_names.fetch("BoxShape3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoxShape3D), "BoxShape3D", "set_size", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_BoxShape3D), "BoxShape3D", "get_size", 3360562783i64),);
    
}
fn load_Button_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Button = string_names.fetch("Button");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "set_text", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "get_text", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "set_text_overrun_behavior", 1008890932i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "get_text_overrun_behavior", 3779142101i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "set_autowrap_mode", 3289138044i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "get_autowrap_mode", 1549071663i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "set_autowrap_trim_flags", 2809697122i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "get_autowrap_trim_flags", 2340632602i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "set_text_direction", 119160795i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "get_text_direction", 797257663i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "set_language", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "get_language", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "set_button_icon", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "get_button_icon", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "set_flat", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "is_flat", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "set_clip_text", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "get_clip_text", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "set_text_alignment", 2312603777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "get_text_alignment", 341400642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "set_icon_alignment", 2312603777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "get_icon_alignment", 341400642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "set_vertical_icon_alignment", 1796458609i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "get_vertical_icon_alignment", 3274884059i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "set_expand_icon", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Button), "Button", "is_expand_icon", 36873697i64),);
    
}
fn load_ButtonGroup_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ButtonGroup = string_names.fetch("ButtonGroup");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ButtonGroup), "ButtonGroup", "get_pressed_button", 3886434893i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ButtonGroup), "ButtonGroup", "get_buttons", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ButtonGroup), "ButtonGroup", "set_allow_unpress", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ButtonGroup), "ButtonGroup", "is_allow_unpress", 2240911060i64),);
    
}
fn load_CPUParticles2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CPUParticles2D = string_names.fetch("CPUParticles2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_emitting", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_amount", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_lifetime", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_one_shot", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_pre_process_time", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_explosiveness_ratio", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_randomness_ratio", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_lifetime_randomness", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_use_local_coordinates", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_fixed_fps", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_fractional_delta", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_speed_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "request_particles_process", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "is_emitting", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_amount", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_lifetime", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_one_shot", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_pre_process_time", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_explosiveness_ratio", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_randomness_ratio", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_lifetime_randomness", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_use_local_coordinates", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_fixed_fps", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_fractional_delta", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_speed_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_use_fixed_seed", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_use_fixed_seed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_seed", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_seed", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_draw_order", 4183193490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_draw_order", 1668655735i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_texture", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "restart", 107499316i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_direction", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_direction", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_spread", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_spread", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_param_min", 3320615296i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_param_min", 2038050600i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_param_max", 3320615296i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_param_max", 2038050600i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_param_curve", 2959350143i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_param_curve", 2603158474i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_color_ramp", 2756054477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_color_ramp", 132272999i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_color_initial_ramp", 2756054477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_color_initial_ramp", 132272999i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_particle_flag", 4178137949i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_particle_flag", 2829976507i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_emission_shape", 393763892i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_emission_shape", 1740246024i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_emission_sphere_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_emission_sphere_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_emission_rect_extents", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_emission_rect_extents", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_emission_points", 1509147220i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_emission_points", 2961356807i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_emission_normals", 1509147220i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_emission_normals", 2961356807i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_emission_colors", 3546319833i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_emission_colors", 1392750486i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_gravity", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_gravity", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_split_scale", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_split_scale", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_scale_curve_x", 2460114913i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_scale_curve_x", 270443179i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "get_scale_curve_y", 2460114913i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "set_scale_curve_y", 270443179i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles2D), "CPUParticles2D", "convert_from_particles", 1078189570i64),);
    
}
fn load_CPUParticles3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CPUParticles3D = string_names.fetch("CPUParticles3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_emitting", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_amount", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_lifetime", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_one_shot", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_pre_process_time", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_explosiveness_ratio", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_randomness_ratio", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_visibility_aabb", 259215842i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_lifetime_randomness", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_use_local_coordinates", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_fixed_fps", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_fractional_delta", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_speed_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "is_emitting", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_amount", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_lifetime", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_one_shot", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_pre_process_time", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_explosiveness_ratio", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_randomness_ratio", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_visibility_aabb", 1068685055i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_lifetime_randomness", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_use_local_coordinates", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_fixed_fps", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_fractional_delta", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_speed_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_draw_order", 1427401774i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_draw_order", 1321900776i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_mesh", 194775623i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_mesh", 1808005922i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_use_fixed_seed", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_use_fixed_seed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_seed", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_seed", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "restart", 107499316i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "request_particles_process", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "capture_aabb", 1068685055i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_direction", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_direction", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_spread", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_spread", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_flatness", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_flatness", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_param_min", 557936109i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_param_min", 597646162i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_param_max", 557936109i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_param_max", 597646162i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_param_curve", 4044142537i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_param_curve", 4132790277i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_color_ramp", 2756054477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_color_ramp", 132272999i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_color_initial_ramp", 2756054477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_color_initial_ramp", 132272999i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_particle_flag", 3515406498i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_particle_flag", 2845201987i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_emission_shape", 491823814i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_emission_shape", 2961454842i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_emission_sphere_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_emission_sphere_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_emission_box_extents", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_emission_box_extents", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_emission_points", 334873810i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_emission_points", 497664490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_emission_normals", 334873810i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_emission_normals", 497664490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_emission_colors", 3546319833i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_emission_colors", 1392750486i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_emission_ring_axis", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_emission_ring_axis", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_emission_ring_height", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_emission_ring_height", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_emission_ring_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_emission_ring_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_emission_ring_inner_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_emission_ring_inner_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_emission_ring_cone_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_emission_ring_cone_angle", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_gravity", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_gravity", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_split_scale", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_split_scale", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_scale_curve_x", 2460114913i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_scale_curve_x", 270443179i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_scale_curve_y", 2460114913i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_scale_curve_y", 270443179i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "get_scale_curve_z", 2460114913i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "set_scale_curve_z", 270443179i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CPUParticles3D), "CPUParticles3D", "convert_from_particles", 1078189570i64),);
    
}
fn load_CSGBox3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CSGBox3D = string_names.fetch("CSGBox3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGBox3D), "CSGBox3D", "set_size", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGBox3D), "CSGBox3D", "get_size", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGBox3D), "CSGBox3D", "set_material", 2757459619i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGBox3D), "CSGBox3D", "get_material", 5934680i64),);
    
}
fn load_CSGCylinder3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CSGCylinder3D = string_names.fetch("CSGCylinder3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGCylinder3D), "CSGCylinder3D", "set_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGCylinder3D), "CSGCylinder3D", "get_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGCylinder3D), "CSGCylinder3D", "set_height", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGCylinder3D), "CSGCylinder3D", "get_height", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGCylinder3D), "CSGCylinder3D", "set_sides", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGCylinder3D), "CSGCylinder3D", "get_sides", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGCylinder3D), "CSGCylinder3D", "set_cone", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGCylinder3D), "CSGCylinder3D", "is_cone", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGCylinder3D), "CSGCylinder3D", "set_material", 2757459619i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGCylinder3D), "CSGCylinder3D", "get_material", 5934680i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGCylinder3D), "CSGCylinder3D", "set_smooth_faces", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGCylinder3D), "CSGCylinder3D", "get_smooth_faces", 36873697i64),);
    
}
fn load_CSGMesh3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CSGMesh3D = string_names.fetch("CSGMesh3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGMesh3D), "CSGMesh3D", "set_mesh", 194775623i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGMesh3D), "CSGMesh3D", "get_mesh", 4081188045i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGMesh3D), "CSGMesh3D", "set_material", 2757459619i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGMesh3D), "CSGMesh3D", "get_material", 5934680i64),);
    
}
fn load_CSGPolygon3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CSGPolygon3D = string_names.fetch("CSGPolygon3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "set_polygon", 1509147220i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "get_polygon", 2961356807i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "set_mode", 3158377035i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "get_mode", 1201612222i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "set_depth", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "get_depth", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "set_spin_degrees", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "get_spin_degrees", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "set_spin_sides", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "get_spin_sides", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "set_path_node", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "get_path_node", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "set_path_interval_type", 3744240707i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "get_path_interval_type", 3434618397i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "set_path_interval", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "get_path_interval", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "set_path_simplify_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "get_path_simplify_angle", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "set_path_rotation", 1412947288i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "get_path_rotation", 647219346i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "set_path_rotation_accurate", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "get_path_rotation_accurate", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "set_path_local", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "is_path_local", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "set_path_continuous_u", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "is_path_continuous_u", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "set_path_u_distance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "get_path_u_distance", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "set_path_joined", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "is_path_joined", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "set_material", 2757459619i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "get_material", 5934680i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "set_smooth_faces", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPolygon3D), "CSGPolygon3D", "get_smooth_faces", 36873697i64),);
    
}
fn load_CSGPrimitive3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CSGPrimitive3D = string_names.fetch("CSGPrimitive3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPrimitive3D), "CSGPrimitive3D", "set_flip_faces", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGPrimitive3D), "CSGPrimitive3D", "get_flip_faces", 2240911060i64),);
    
}
fn load_CSGShape3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CSGShape3D = string_names.fetch("CSGShape3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGShape3D), "CSGShape3D", "is_root_shape", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGShape3D), "CSGShape3D", "set_operation", 811425055i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGShape3D), "CSGShape3D", "get_operation", 2662425879i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGShape3D), "CSGShape3D", "set_snap", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGShape3D), "CSGShape3D", "get_snap", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGShape3D), "CSGShape3D", "set_use_collision", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGShape3D), "CSGShape3D", "is_using_collision", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGShape3D), "CSGShape3D", "set_collision_layer", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGShape3D), "CSGShape3D", "get_collision_layer", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGShape3D), "CSGShape3D", "set_collision_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGShape3D), "CSGShape3D", "get_collision_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGShape3D), "CSGShape3D", "set_collision_mask_value", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGShape3D), "CSGShape3D", "get_collision_mask_value", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGShape3D), "CSGShape3D", "set_collision_layer_value", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGShape3D), "CSGShape3D", "get_collision_layer_value", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGShape3D), "CSGShape3D", "set_collision_priority", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGShape3D), "CSGShape3D", "get_collision_priority", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGShape3D), "CSGShape3D", "bake_collision_shape", 36102322i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGShape3D), "CSGShape3D", "set_calculate_tangents", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGShape3D), "CSGShape3D", "is_calculating_tangents", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGShape3D), "CSGShape3D", "get_meshes", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGShape3D), "CSGShape3D", "bake_static_mesh", 1605880883i64),);
    
}
fn load_CSGSphere3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CSGSphere3D = string_names.fetch("CSGSphere3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGSphere3D), "CSGSphere3D", "set_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGSphere3D), "CSGSphere3D", "get_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGSphere3D), "CSGSphere3D", "set_radial_segments", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGSphere3D), "CSGSphere3D", "get_radial_segments", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGSphere3D), "CSGSphere3D", "set_rings", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGSphere3D), "CSGSphere3D", "get_rings", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGSphere3D), "CSGSphere3D", "set_smooth_faces", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGSphere3D), "CSGSphere3D", "get_smooth_faces", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGSphere3D), "CSGSphere3D", "set_material", 2757459619i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGSphere3D), "CSGSphere3D", "get_material", 5934680i64),);
    
}
fn load_CSGTorus3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CSGTorus3D = string_names.fetch("CSGTorus3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGTorus3D), "CSGTorus3D", "set_inner_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGTorus3D), "CSGTorus3D", "get_inner_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGTorus3D), "CSGTorus3D", "set_outer_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGTorus3D), "CSGTorus3D", "get_outer_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGTorus3D), "CSGTorus3D", "set_sides", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGTorus3D), "CSGTorus3D", "get_sides", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGTorus3D), "CSGTorus3D", "set_ring_sides", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGTorus3D), "CSGTorus3D", "get_ring_sides", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGTorus3D), "CSGTorus3D", "set_material", 2757459619i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGTorus3D), "CSGTorus3D", "get_material", 5934680i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGTorus3D), "CSGTorus3D", "set_smooth_faces", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CSGTorus3D), "CSGTorus3D", "get_smooth_faces", 36873697i64),);
    
}
fn load_CallbackTweener_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CallbackTweener = string_names.fetch("CallbackTweener");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CallbackTweener), "CallbackTweener", "set_delay", 3008182292i64),);
    
}
fn load_Camera2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Camera2D = string_names.fetch("Camera2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "set_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "get_offset", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "set_anchor_mode", 2050398218i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "get_anchor_mode", 155978067i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "set_ignore_rotation", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "is_ignoring_rotation", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "set_process_callback", 4201947462i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "get_process_callback", 2325344499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "set_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "is_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "make_current", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "is_current", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "set_limit_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "is_limit_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "set_limit", 437707142i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "get_limit", 1983885014i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "set_limit_smoothing_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "is_limit_smoothing_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "set_drag_vertical_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "is_drag_vertical_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "set_drag_horizontal_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "is_drag_horizontal_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "set_drag_vertical_offset", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "get_drag_vertical_offset", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "set_drag_horizontal_offset", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "get_drag_horizontal_offset", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "set_drag_margin", 4290182280i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "get_drag_margin", 2869120046i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "get_target_position", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "get_screen_center_position", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "get_screen_rotation", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "set_zoom", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "get_zoom", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "set_custom_viewport", 1078189570i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "get_custom_viewport", 3160264692i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "set_position_smoothing_speed", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "get_position_smoothing_speed", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "set_position_smoothing_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "is_position_smoothing_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "set_rotation_smoothing_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "is_rotation_smoothing_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "set_rotation_smoothing_speed", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "get_rotation_smoothing_speed", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "force_update_scroll", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "reset_smoothing", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "align", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "set_screen_drawing_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "is_screen_drawing_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "set_limit_drawing_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "is_limit_drawing_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "set_margin_drawing_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera2D), "Camera2D", "is_margin_drawing_enabled", 36873697i64),);
    
}
fn load_Camera3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Camera3D = string_names.fetch("Camera3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "project_ray_normal", 1718073306i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "project_local_ray_normal", 1718073306i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "project_ray_origin", 1718073306i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "unproject_position", 3758901831i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "is_position_behind", 3108956480i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "project_position", 2171975744i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "set_perspective", 2385087082i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "set_orthogonal", 2385087082i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "set_frustum", 354890663i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "make_current", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "clear_current", 3216645846i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "set_current", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "is_current", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "get_camera_transform", 3229777777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "get_camera_projection", 2910717950i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "get_fov", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "get_frustum_offset", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "get_size", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "get_far", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "get_near", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "set_fov", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "set_frustum_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "set_size", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "set_far", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "set_near", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "get_projection", 2624185235i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "set_projection", 4218540108i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "set_h_offset", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "get_h_offset", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "set_v_offset", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "get_v_offset", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "set_cull_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "get_cull_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "set_environment", 4143518816i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "get_environment", 3082064660i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "set_attributes", 2817810567i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "get_attributes", 3921283215i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "set_keep_aspect_mode", 1740651252i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "get_keep_aspect_mode", 2790278316i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "set_doppler_tracking", 3109431270i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "get_doppler_tracking", 1584483649i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "get_frustum", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "is_position_in_frustum", 3108956480i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "get_camera_rid", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "get_pyramid_shape_rid", 529393457i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "set_cull_mask_value", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Camera3D), "Camera3D", "get_cull_mask_value", 1116898809i64),);
    
}
fn load_CameraAttributes_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CameraAttributes = string_names.fetch("CameraAttributes");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributes), "CameraAttributes", "set_exposure_multiplier", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributes), "CameraAttributes", "get_exposure_multiplier", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributes), "CameraAttributes", "set_exposure_sensitivity", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributes), "CameraAttributes", "get_exposure_sensitivity", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributes), "CameraAttributes", "set_auto_exposure_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributes), "CameraAttributes", "is_auto_exposure_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributes), "CameraAttributes", "set_auto_exposure_speed", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributes), "CameraAttributes", "get_auto_exposure_speed", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributes), "CameraAttributes", "set_auto_exposure_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributes), "CameraAttributes", "get_auto_exposure_scale", 1740695150i64),);
    
}
fn load_CameraAttributesPhysical_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CameraAttributesPhysical = string_names.fetch("CameraAttributesPhysical");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPhysical), "CameraAttributesPhysical", "set_aperture", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPhysical), "CameraAttributesPhysical", "get_aperture", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPhysical), "CameraAttributesPhysical", "set_shutter_speed", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPhysical), "CameraAttributesPhysical", "get_shutter_speed", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPhysical), "CameraAttributesPhysical", "set_focal_length", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPhysical), "CameraAttributesPhysical", "get_focal_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPhysical), "CameraAttributesPhysical", "set_focus_distance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPhysical), "CameraAttributesPhysical", "get_focus_distance", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPhysical), "CameraAttributesPhysical", "set_near", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPhysical), "CameraAttributesPhysical", "get_near", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPhysical), "CameraAttributesPhysical", "set_far", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPhysical), "CameraAttributesPhysical", "get_far", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPhysical), "CameraAttributesPhysical", "get_fov", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPhysical), "CameraAttributesPhysical", "set_auto_exposure_max_exposure_value", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPhysical), "CameraAttributesPhysical", "get_auto_exposure_max_exposure_value", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPhysical), "CameraAttributesPhysical", "set_auto_exposure_min_exposure_value", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPhysical), "CameraAttributesPhysical", "get_auto_exposure_min_exposure_value", 1740695150i64),);
    
}
fn load_CameraAttributesPractical_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CameraAttributesPractical = string_names.fetch("CameraAttributesPractical");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPractical), "CameraAttributesPractical", "set_dof_blur_far_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPractical), "CameraAttributesPractical", "is_dof_blur_far_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPractical), "CameraAttributesPractical", "set_dof_blur_far_distance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPractical), "CameraAttributesPractical", "get_dof_blur_far_distance", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPractical), "CameraAttributesPractical", "set_dof_blur_far_transition", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPractical), "CameraAttributesPractical", "get_dof_blur_far_transition", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPractical), "CameraAttributesPractical", "set_dof_blur_near_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPractical), "CameraAttributesPractical", "is_dof_blur_near_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPractical), "CameraAttributesPractical", "set_dof_blur_near_distance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPractical), "CameraAttributesPractical", "get_dof_blur_near_distance", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPractical), "CameraAttributesPractical", "set_dof_blur_near_transition", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPractical), "CameraAttributesPractical", "get_dof_blur_near_transition", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPractical), "CameraAttributesPractical", "set_dof_blur_amount", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPractical), "CameraAttributesPractical", "get_dof_blur_amount", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPractical), "CameraAttributesPractical", "set_auto_exposure_max_sensitivity", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPractical), "CameraAttributesPractical", "get_auto_exposure_max_sensitivity", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPractical), "CameraAttributesPractical", "set_auto_exposure_min_sensitivity", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraAttributesPractical), "CameraAttributesPractical", "get_auto_exposure_min_sensitivity", 1740695150i64),);
    
}
fn load_CameraFeed_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CameraFeed = string_names.fetch("CameraFeed");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraFeed), "CameraFeed", "get_id", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraFeed), "CameraFeed", "is_active", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraFeed), "CameraFeed", "set_active", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraFeed), "CameraFeed", "get_name", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraFeed), "CameraFeed", "set_name", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraFeed), "CameraFeed", "get_position", 2711679033i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraFeed), "CameraFeed", "set_position", 611162623i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraFeed), "CameraFeed", "get_transform", 3814499831i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraFeed), "CameraFeed", "set_transform", 2761652528i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraFeed), "CameraFeed", "set_rgb_image", 532598488i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraFeed), "CameraFeed", "set_ycbcr_image", 532598488i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraFeed), "CameraFeed", "set_external", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraFeed), "CameraFeed", "get_texture_tex_id", 1135699418i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraFeed), "CameraFeed", "get_datatype", 1477782850i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraFeed), "CameraFeed", "get_formats", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraFeed), "CameraFeed", "set_format", 31872775i64),);
    
}
fn load_CameraTexture_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CameraTexture = string_names.fetch("CameraTexture");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraTexture), "CameraTexture", "set_camera_feed_id", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraTexture), "CameraTexture", "get_camera_feed_id", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraTexture), "CameraTexture", "set_which_feed", 1595299230i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraTexture), "CameraTexture", "get_which_feed", 91039457i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraTexture), "CameraTexture", "set_camera_active", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CameraTexture), "CameraTexture", "get_camera_active", 36873697i64),);
    
}
fn load_CanvasGroup_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CanvasGroup = string_names.fetch("CanvasGroup");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasGroup), "CanvasGroup", "set_fit_margin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasGroup), "CanvasGroup", "get_fit_margin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasGroup), "CanvasGroup", "set_clear_margin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasGroup), "CanvasGroup", "get_clear_margin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasGroup), "CanvasGroup", "set_use_mipmaps", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasGroup), "CanvasGroup", "is_using_mipmaps", 36873697i64),);
    
}
fn load_CanvasItem_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CanvasItem = string_names.fetch("CanvasItem");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_canvas_item", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "set_visible", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "is_visible", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "is_visible_in_tree", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "show", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "hide", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "queue_redraw", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "move_to_front", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "set_as_top_level", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "is_set_as_top_level", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "set_light_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_light_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "set_modulate", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_modulate", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "set_self_modulate", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_self_modulate", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "set_z_index", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_z_index", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "set_z_as_relative", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "is_z_relative", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "set_y_sort_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "is_y_sort_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "set_draw_behind_parent", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "is_draw_behind_parent_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_line", 1562330099i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_dashed_line", 3653831622i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_polyline", 3797364428i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_polyline_colors", 2311979562i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_arc", 4140652635i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_multiline", 3797364428i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_multiline_colors", 2311979562i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_rect", 2773573813i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_circle", 3153026596i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_texture", 520200117i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_texture_rect", 3832805018i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_texture_rect_region", 3883821411i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_msdf_texture_rect_region", 4219163252i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_lcd_texture_rect_region", 3212350954i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_style_box", 388176283i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_primitive", 3288481815i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_polygon", 974537912i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_colored_polygon", 15245644i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_string", 719605945i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_multiline_string", 2341488182i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_string_outline", 707403449i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_multiline_string_outline", 3050414441i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_char", 1336210142i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_char_outline", 1846384149i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_mesh", 153818295i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_multimesh", 937992368i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_set_transform", 288975085i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_set_transform_matrix", 2761652528i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_animation_slice", 3112831842i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "draw_end_animation", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_transform", 3814499831i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_global_transform", 3814499831i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_global_transform_with_canvas", 3814499831i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_viewport_transform", 3814499831i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_viewport_rect", 1639390495i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_canvas_transform", 3814499831i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_screen_transform", 3814499831i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_local_mouse_position", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_global_mouse_position", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_canvas", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_canvas_layer_node", 2602762519i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_world_2d", 2339128592i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "set_material", 2757459619i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_material", 5934680i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "set_instance_shader_parameter", 3776071444i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_instance_shader_parameter", 2760726917i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "set_use_parent_material", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_use_parent_material", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "set_notify_local_transform", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "is_local_transform_notification_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "set_notify_transform", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "is_transform_notification_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "force_update_transform", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "make_canvas_position_local", 2656412154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "make_input_local", 811130057i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "set_visibility_layer", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_visibility_layer", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "set_visibility_layer_bit", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_visibility_layer_bit", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "set_texture_filter", 1037999706i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_texture_filter", 121960042i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "set_texture_repeat", 1716472974i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_texture_repeat", 2667158319i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "set_clip_children_mode", 1319393776i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItem), "CanvasItem", "get_clip_children_mode", 3581808349i64),);
    
}
fn load_CanvasItemMaterial_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CanvasItemMaterial = string_names.fetch("CanvasItemMaterial");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItemMaterial), "CanvasItemMaterial", "set_blend_mode", 1786054936i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItemMaterial), "CanvasItemMaterial", "get_blend_mode", 3318684035i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItemMaterial), "CanvasItemMaterial", "set_light_mode", 628074070i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItemMaterial), "CanvasItemMaterial", "get_light_mode", 3863292382i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItemMaterial), "CanvasItemMaterial", "set_particles_animation", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItemMaterial), "CanvasItemMaterial", "get_particles_animation", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItemMaterial), "CanvasItemMaterial", "set_particles_anim_h_frames", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItemMaterial), "CanvasItemMaterial", "get_particles_anim_h_frames", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItemMaterial), "CanvasItemMaterial", "set_particles_anim_v_frames", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItemMaterial), "CanvasItemMaterial", "get_particles_anim_v_frames", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItemMaterial), "CanvasItemMaterial", "set_particles_anim_loop", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasItemMaterial), "CanvasItemMaterial", "get_particles_anim_loop", 36873697i64),);
    
}
fn load_CanvasLayer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CanvasLayer = string_names.fetch("CanvasLayer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasLayer), "CanvasLayer", "set_layer", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasLayer), "CanvasLayer", "get_layer", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasLayer), "CanvasLayer", "set_visible", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasLayer), "CanvasLayer", "is_visible", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasLayer), "CanvasLayer", "show", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasLayer), "CanvasLayer", "hide", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasLayer), "CanvasLayer", "set_transform", 2761652528i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasLayer), "CanvasLayer", "get_transform", 3814499831i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasLayer), "CanvasLayer", "get_final_transform", 3814499831i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasLayer), "CanvasLayer", "set_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasLayer), "CanvasLayer", "get_offset", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasLayer), "CanvasLayer", "set_rotation", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasLayer), "CanvasLayer", "get_rotation", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasLayer), "CanvasLayer", "set_scale", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasLayer), "CanvasLayer", "get_scale", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasLayer), "CanvasLayer", "set_follow_viewport", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasLayer), "CanvasLayer", "is_following_viewport", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasLayer), "CanvasLayer", "set_follow_viewport_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasLayer), "CanvasLayer", "get_follow_viewport_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasLayer), "CanvasLayer", "set_custom_viewport", 1078189570i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasLayer), "CanvasLayer", "get_custom_viewport", 3160264692i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasLayer), "CanvasLayer", "get_canvas", 2944877500i64),);
    
}
fn load_CanvasModulate_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CanvasModulate = string_names.fetch("CanvasModulate");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasModulate), "CanvasModulate", "set_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasModulate), "CanvasModulate", "get_color", 3444240500i64),);
    
}
fn load_CanvasTexture_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CanvasTexture = string_names.fetch("CanvasTexture");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasTexture), "CanvasTexture", "set_diffuse_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasTexture), "CanvasTexture", "get_diffuse_texture", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasTexture), "CanvasTexture", "set_normal_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasTexture), "CanvasTexture", "get_normal_texture", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasTexture), "CanvasTexture", "set_specular_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasTexture), "CanvasTexture", "get_specular_texture", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasTexture), "CanvasTexture", "set_specular_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasTexture), "CanvasTexture", "get_specular_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasTexture), "CanvasTexture", "set_specular_shininess", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasTexture), "CanvasTexture", "get_specular_shininess", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasTexture), "CanvasTexture", "set_texture_filter", 1037999706i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasTexture), "CanvasTexture", "get_texture_filter", 121960042i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasTexture), "CanvasTexture", "set_texture_repeat", 1716472974i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CanvasTexture), "CanvasTexture", "get_texture_repeat", 2667158319i64),);
    
}
fn load_CapsuleMesh_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CapsuleMesh = string_names.fetch("CapsuleMesh");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CapsuleMesh), "CapsuleMesh", "set_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CapsuleMesh), "CapsuleMesh", "get_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CapsuleMesh), "CapsuleMesh", "set_height", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CapsuleMesh), "CapsuleMesh", "get_height", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CapsuleMesh), "CapsuleMesh", "set_radial_segments", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CapsuleMesh), "CapsuleMesh", "get_radial_segments", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CapsuleMesh), "CapsuleMesh", "set_rings", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CapsuleMesh), "CapsuleMesh", "get_rings", 3905245786i64),);
    
}
fn load_CapsuleShape2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CapsuleShape2D = string_names.fetch("CapsuleShape2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CapsuleShape2D), "CapsuleShape2D", "set_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CapsuleShape2D), "CapsuleShape2D", "get_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CapsuleShape2D), "CapsuleShape2D", "set_height", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CapsuleShape2D), "CapsuleShape2D", "get_height", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CapsuleShape2D), "CapsuleShape2D", "set_mid_height", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CapsuleShape2D), "CapsuleShape2D", "get_mid_height", 1740695150i64),);
    
}
fn load_CapsuleShape3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CapsuleShape3D = string_names.fetch("CapsuleShape3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CapsuleShape3D), "CapsuleShape3D", "set_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CapsuleShape3D), "CapsuleShape3D", "get_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CapsuleShape3D), "CapsuleShape3D", "set_height", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CapsuleShape3D), "CapsuleShape3D", "get_height", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CapsuleShape3D), "CapsuleShape3D", "set_mid_height", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CapsuleShape3D), "CapsuleShape3D", "get_mid_height", 1740695150i64),);
    
}
fn load_CenterContainer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CenterContainer = string_names.fetch("CenterContainer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CenterContainer), "CenterContainer", "set_use_top_left", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CenterContainer), "CenterContainer", "is_using_top_left", 36873697i64),);
    
}
fn load_CharFXTransform_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CharFXTransform = string_names.fetch("CharFXTransform");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "get_transform", 3761352769i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "set_transform", 2761652528i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "get_range", 2741790807i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "set_range", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "get_elapsed_time", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "set_elapsed_time", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "is_visible", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "set_visibility", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "is_outline", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "set_outline", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "get_offset", 1497962370i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "set_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "get_color", 3200896285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "set_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "get_environment", 2382534195i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "set_environment", 4155329257i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "get_glyph_index", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "set_glyph_index", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "get_relative_index", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "set_relative_index", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "get_glyph_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "set_glyph_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "get_glyph_flags", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "set_glyph_flags", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "get_font", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharFXTransform), "CharFXTransform", "set_font", 2722037293i64),);
    
}
fn load_CharacterBody2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CharacterBody2D = string_names.fetch("CharacterBody2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "move_and_slide", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "apply_floor_snap", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "set_velocity", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "get_velocity", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "set_safe_margin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "get_safe_margin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "is_floor_stop_on_slope_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "set_floor_stop_on_slope_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "set_floor_constant_speed_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "is_floor_constant_speed_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "set_floor_block_on_wall_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "is_floor_block_on_wall_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "set_slide_on_ceiling_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "is_slide_on_ceiling_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "set_platform_floor_layers", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "get_platform_floor_layers", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "set_platform_wall_layers", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "get_platform_wall_layers", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "get_max_slides", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "set_max_slides", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "get_floor_max_angle", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "set_floor_max_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "get_floor_snap_length", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "set_floor_snap_length", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "get_wall_min_slide_angle", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "set_wall_min_slide_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "get_up_direction", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "set_up_direction", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "set_motion_mode", 1224392233i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "get_motion_mode", 1160151236i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "set_platform_on_leave", 2423324375i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "get_platform_on_leave", 4054324341i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "is_on_floor", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "is_on_floor_only", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "is_on_ceiling", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "is_on_ceiling_only", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "is_on_wall", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "is_on_wall_only", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "get_floor_normal", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "get_wall_normal", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "get_last_motion", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "get_position_delta", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "get_real_velocity", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "get_floor_angle", 2841063350i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "get_platform_velocity", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "get_slide_collision_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "get_slide_collision", 860659811i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody2D), "CharacterBody2D", "get_last_slide_collision", 2161834755i64),);
    
}
fn load_CharacterBody3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CharacterBody3D = string_names.fetch("CharacterBody3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "move_and_slide", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "apply_floor_snap", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "set_velocity", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "get_velocity", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "set_safe_margin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "get_safe_margin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "is_floor_stop_on_slope_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "set_floor_stop_on_slope_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "set_floor_constant_speed_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "is_floor_constant_speed_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "set_floor_block_on_wall_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "is_floor_block_on_wall_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "set_slide_on_ceiling_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "is_slide_on_ceiling_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "set_platform_floor_layers", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "get_platform_floor_layers", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "set_platform_wall_layers", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "get_platform_wall_layers", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "get_max_slides", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "set_max_slides", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "get_floor_max_angle", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "set_floor_max_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "get_floor_snap_length", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "set_floor_snap_length", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "get_wall_min_slide_angle", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "set_wall_min_slide_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "get_up_direction", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "set_up_direction", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "set_motion_mode", 2690739026i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "get_motion_mode", 3529553604i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "set_platform_on_leave", 1459986142i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "get_platform_on_leave", 996491171i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "is_on_floor", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "is_on_floor_only", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "is_on_ceiling", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "is_on_ceiling_only", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "is_on_wall", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "is_on_wall_only", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "get_floor_normal", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "get_wall_normal", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "get_last_motion", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "get_position_delta", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "get_real_velocity", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "get_floor_angle", 2906300789i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "get_platform_velocity", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "get_platform_angular_velocity", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "get_slide_collision_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "get_slide_collision", 107003663i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CharacterBody3D), "CharacterBody3D", "get_last_slide_collision", 186875014i64),);
    
}
fn load_CircleShape2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CircleShape2D = string_names.fetch("CircleShape2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CircleShape2D), "CircleShape2D", "set_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CircleShape2D), "CircleShape2D", "get_radius", 1740695150i64),);
    
}
fn load_ClassDB_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ClassDB = string_names.fetch("ClassDB");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "get_class_list", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "get_inheriters_from_class", 1761182771i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "get_parent_class", 1965194235i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "class_exists", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "is_parent_class", 471820014i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "can_instantiate", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "instantiate", 2760726917i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "class_get_api_type", 2475317043i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "class_has_signal", 471820014i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "class_get_signal", 3061114238i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "class_get_signal_list", 3504980660i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "class_get_property_list", 3504980660i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "class_get_property_getter", 3770832642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "class_get_property_setter", 3770832642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "class_get_property", 2498641674i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "class_set_property", 1690314931i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "class_get_property_default_value", 2718203076i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "class_has_method", 3860701026i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "class_get_method_argument_count", 3885694822i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "class_get_method_list", 3504980660i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "class_call_static", 3344196419i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "class_get_integer_constant_list", 3031669221i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "class_has_integer_constant", 471820014i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "class_get_integer_constant", 2419549490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "class_has_enum", 3860701026i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "class_get_enum_list", 3031669221i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "class_get_enum_constants", 661528303i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "class_get_integer_constant_enum", 2457504236i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "is_class_enum_bitfield", 3860701026i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ClassDB), "ClassDB", "is_class_enabled", 2619796661i64),);
    
}
fn load_CodeEdit_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CodeEdit = string_names.fetch("CodeEdit");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_indent_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_indent_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_indent_using_spaces", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "is_indent_using_spaces", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_auto_indent_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "is_auto_indent_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_auto_indent_prefixes", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_auto_indent_prefixes", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "do_indent", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "indent_lines", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "unindent_lines", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "convert_indent", 423910286i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_auto_brace_completion_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "is_auto_brace_completion_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_highlight_matching_braces_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "is_highlight_matching_braces_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "add_auto_brace_completion_pair", 3186203200i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_auto_brace_completion_pairs", 4155329257i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_auto_brace_completion_pairs", 3102165223i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "has_auto_brace_completion_open_key", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "has_auto_brace_completion_close_key", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_auto_brace_completion_close_key", 3135753539i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_draw_breakpoints_gutter", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "is_drawing_breakpoints_gutter", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_draw_bookmarks_gutter", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "is_drawing_bookmarks_gutter", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_draw_executing_lines_gutter", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "is_drawing_executing_lines_gutter", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_line_as_breakpoint", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "is_line_breakpointed", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "clear_breakpointed_lines", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_breakpointed_lines", 1930428628i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_line_as_bookmarked", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "is_line_bookmarked", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "clear_bookmarked_lines", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_bookmarked_lines", 1930428628i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_line_as_executing", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "is_line_executing", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "clear_executing_lines", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_executing_lines", 1930428628i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_draw_line_numbers", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "is_draw_line_numbers_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_line_numbers_zero_padded", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "is_line_numbers_zero_padded", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_draw_fold_gutter", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "is_drawing_fold_gutter", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_line_folding_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "is_line_folding_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "can_fold_line", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "fold_line", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "unfold_line", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "fold_all_lines", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "unfold_all_lines", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "toggle_foldable_line", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "toggle_foldable_lines_at_carets", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "is_line_folded", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_folded_lines", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "create_code_region", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_code_region_start_tag", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_code_region_end_tag", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_code_region_tags", 708800718i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "is_line_code_region_start", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "is_line_code_region_end", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "add_string_delimiter", 3146098955i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "remove_string_delimiter", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "has_string_delimiter", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_string_delimiters", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "clear_string_delimiters", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_string_delimiters", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "is_in_string", 688195400i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "add_comment_delimiter", 3146098955i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "remove_comment_delimiter", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "has_comment_delimiter", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_comment_delimiters", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "clear_comment_delimiters", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_comment_delimiters", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "is_in_comment", 688195400i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_delimiter_start_key", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_delimiter_end_key", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_delimiter_start_position", 3016396712i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_delimiter_end_position", 3016396712i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_code_hint", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_code_hint_draw_below", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_text_for_code_completion", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "request_code_completion", 107499316i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "add_code_completion_option", 3944379502i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "update_code_completion_options", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_code_completion_options", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_code_completion_option", 3485342025i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_code_completion_selected_index", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_code_completion_selected_index", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "confirm_code_completion", 107499316i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "cancel_code_completion", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_code_completion_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "is_code_completion_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_code_completion_prefixes", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_code_completion_prefixes", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_line_length_guidelines", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_line_length_guidelines", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_symbol_lookup_on_click_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "is_symbol_lookup_on_click_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_text_for_symbol_lookup", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "get_text_with_cursor_char", 1391810591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_symbol_lookup_word_as_valid", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "set_symbol_tooltip_on_hover_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "is_symbol_tooltip_on_hover_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "move_lines_up", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "move_lines_down", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "delete_lines", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "duplicate_selection", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeEdit), "CodeEdit", "duplicate_lines", 3218959716i64),);
    
}
fn load_CodeHighlighter_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CodeHighlighter = string_names.fetch("CodeHighlighter");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "add_keyword_color", 1636512886i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "remove_keyword_color", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "has_keyword_color", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "get_keyword_color", 3855908743i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "set_keyword_colors", 4155329257i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "clear_keyword_colors", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "get_keyword_colors", 3102165223i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "add_member_keyword_color", 1636512886i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "remove_member_keyword_color", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "has_member_keyword_color", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "get_member_keyword_color", 3855908743i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "set_member_keyword_colors", 4155329257i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "clear_member_keyword_colors", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "get_member_keyword_colors", 3102165223i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "add_color_region", 2924977451i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "remove_color_region", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "has_color_region", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "set_color_regions", 4155329257i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "clear_color_regions", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "get_color_regions", 3102165223i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "set_function_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "get_function_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "set_number_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "get_number_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "set_symbol_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "get_symbol_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "set_member_variable_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CodeHighlighter), "CodeHighlighter", "get_member_variable_color", 3444240500i64),);
    
}
fn load_CollisionObject2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CollisionObject2D = string_names.fetch("CollisionObject2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "get_rid", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "set_collision_layer", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "get_collision_layer", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "set_collision_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "get_collision_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "set_collision_layer_value", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "get_collision_layer_value", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "set_collision_mask_value", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "get_collision_mask_value", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "set_collision_priority", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "get_collision_priority", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "set_disable_mode", 1919204045i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "get_disable_mode", 3172846349i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "set_pickable", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "is_pickable", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "create_shape_owner", 3429307534i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "remove_shape_owner", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "get_shape_owners", 969006518i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "shape_owner_set_transform", 30160968i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "shape_owner_get_transform", 3836996910i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "shape_owner_get_owner", 3332903315i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "shape_owner_set_disabled", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "is_shape_owner_disabled", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "shape_owner_set_one_way_collision", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "is_shape_owner_one_way_collision_enabled", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "shape_owner_set_one_way_collision_margin", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "get_shape_owner_one_way_collision_margin", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "shape_owner_add_shape", 2077425081i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "shape_owner_get_shape_count", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "shape_owner_get_shape", 3106725749i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "shape_owner_get_shape_index", 3175239445i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "shape_owner_remove_shape", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "shape_owner_clear_shapes", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject2D), "CollisionObject2D", "shape_find_owner", 923996154i64),);
    
}
fn load_CollisionObject3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CollisionObject3D = string_names.fetch("CollisionObject3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "set_collision_layer", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "get_collision_layer", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "set_collision_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "get_collision_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "set_collision_layer_value", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "get_collision_layer_value", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "set_collision_mask_value", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "get_collision_mask_value", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "set_collision_priority", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "get_collision_priority", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "set_disable_mode", 1623620376i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "get_disable_mode", 410164780i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "set_ray_pickable", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "is_ray_pickable", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "set_capture_input_on_drag", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "get_capture_input_on_drag", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "get_rid", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "create_shape_owner", 3429307534i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "remove_shape_owner", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "get_shape_owners", 969006518i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "shape_owner_set_transform", 3616898986i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "shape_owner_get_transform", 1965739696i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "shape_owner_get_owner", 3332903315i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "shape_owner_set_disabled", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "is_shape_owner_disabled", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "shape_owner_add_shape", 2566676345i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "shape_owner_get_shape_count", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "shape_owner_get_shape", 4015519174i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "shape_owner_get_shape_index", 3175239445i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "shape_owner_remove_shape", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "shape_owner_clear_shapes", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionObject3D), "CollisionObject3D", "shape_find_owner", 923996154i64),);
    
}
fn load_CollisionPolygon2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CollisionPolygon2D = string_names.fetch("CollisionPolygon2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionPolygon2D), "CollisionPolygon2D", "set_polygon", 1509147220i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionPolygon2D), "CollisionPolygon2D", "get_polygon", 2961356807i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionPolygon2D), "CollisionPolygon2D", "set_build_mode", 2780803135i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionPolygon2D), "CollisionPolygon2D", "get_build_mode", 3044948800i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionPolygon2D), "CollisionPolygon2D", "set_disabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionPolygon2D), "CollisionPolygon2D", "is_disabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionPolygon2D), "CollisionPolygon2D", "set_one_way_collision", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionPolygon2D), "CollisionPolygon2D", "is_one_way_collision_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionPolygon2D), "CollisionPolygon2D", "set_one_way_collision_margin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionPolygon2D), "CollisionPolygon2D", "get_one_way_collision_margin", 1740695150i64),);
    
}
fn load_CollisionPolygon3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CollisionPolygon3D = string_names.fetch("CollisionPolygon3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionPolygon3D), "CollisionPolygon3D", "set_depth", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionPolygon3D), "CollisionPolygon3D", "get_depth", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionPolygon3D), "CollisionPolygon3D", "set_polygon", 1509147220i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionPolygon3D), "CollisionPolygon3D", "get_polygon", 2961356807i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionPolygon3D), "CollisionPolygon3D", "set_disabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionPolygon3D), "CollisionPolygon3D", "is_disabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionPolygon3D), "CollisionPolygon3D", "set_debug_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionPolygon3D), "CollisionPolygon3D", "get_debug_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionPolygon3D), "CollisionPolygon3D", "set_enable_debug_fill", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionPolygon3D), "CollisionPolygon3D", "get_enable_debug_fill", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionPolygon3D), "CollisionPolygon3D", "set_margin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionPolygon3D), "CollisionPolygon3D", "get_margin", 1740695150i64),);
    
}
fn load_CollisionShape2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CollisionShape2D = string_names.fetch("CollisionShape2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionShape2D), "CollisionShape2D", "set_shape", 771364740i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionShape2D), "CollisionShape2D", "get_shape", 522005891i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionShape2D), "CollisionShape2D", "set_disabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionShape2D), "CollisionShape2D", "is_disabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionShape2D), "CollisionShape2D", "set_one_way_collision", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionShape2D), "CollisionShape2D", "is_one_way_collision_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionShape2D), "CollisionShape2D", "set_one_way_collision_margin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionShape2D), "CollisionShape2D", "get_one_way_collision_margin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionShape2D), "CollisionShape2D", "set_debug_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionShape2D), "CollisionShape2D", "get_debug_color", 3444240500i64),);
    
}
fn load_CollisionShape3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CollisionShape3D = string_names.fetch("CollisionShape3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionShape3D), "CollisionShape3D", "resource_changed", 968641751i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionShape3D), "CollisionShape3D", "set_shape", 1549710052i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionShape3D), "CollisionShape3D", "get_shape", 3214262478i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionShape3D), "CollisionShape3D", "set_disabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionShape3D), "CollisionShape3D", "is_disabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionShape3D), "CollisionShape3D", "make_convex_from_siblings", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionShape3D), "CollisionShape3D", "set_debug_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionShape3D), "CollisionShape3D", "get_debug_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionShape3D), "CollisionShape3D", "set_enable_debug_fill", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CollisionShape3D), "CollisionShape3D", "get_enable_debug_fill", 36873697i64),);
    
}
fn load_ColorPalette_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ColorPalette = string_names.fetch("ColorPalette");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPalette), "ColorPalette", "set_colors", 3546319833i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPalette), "ColorPalette", "get_colors", 1392750486i64),);
    
}
fn load_ColorPicker_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ColorPicker = string_names.fetch("ColorPicker");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "set_pick_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "get_pick_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "set_deferred_mode", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "is_deferred_mode", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "set_color_mode", 1579114136i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "get_color_mode", 392907674i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "set_edit_alpha", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "is_editing_alpha", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "set_edit_intensity", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "is_editing_intensity", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "set_can_add_swatches", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "are_swatches_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "set_presets_visible", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "are_presets_visible", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "set_modes_visible", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "are_modes_visible", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "set_sampler_visible", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "is_sampler_visible", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "set_sliders_visible", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "are_sliders_visible", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "set_hex_visible", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "is_hex_visible", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "add_preset", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "erase_preset", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "get_presets", 1392750486i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "add_recent_preset", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "erase_recent_preset", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "get_recent_presets", 1392750486i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "set_picker_shape", 3981373861i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPicker), "ColorPicker", "get_picker_shape", 1143229889i64),);
    
}
fn load_ColorPickerButton_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ColorPickerButton = string_names.fetch("ColorPickerButton");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPickerButton), "ColorPickerButton", "set_pick_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPickerButton), "ColorPickerButton", "get_pick_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPickerButton), "ColorPickerButton", "get_picker", 331835996i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPickerButton), "ColorPickerButton", "get_popup", 1322440207i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPickerButton), "ColorPickerButton", "set_edit_alpha", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPickerButton), "ColorPickerButton", "is_editing_alpha", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPickerButton), "ColorPickerButton", "set_edit_intensity", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorPickerButton), "ColorPickerButton", "is_editing_intensity", 36873697i64),);
    
}
fn load_ColorRect_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ColorRect = string_names.fetch("ColorRect");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorRect), "ColorRect", "set_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ColorRect), "ColorRect", "get_color", 3444240500i64),);
    
}
fn load_CompressedTexture2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CompressedTexture2D = string_names.fetch("CompressedTexture2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CompressedTexture2D), "CompressedTexture2D", "load", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CompressedTexture2D), "CompressedTexture2D", "get_load_path", 201670096i64),);
    
}
fn load_CompressedTexture3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CompressedTexture3D = string_names.fetch("CompressedTexture3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CompressedTexture3D), "CompressedTexture3D", "load", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CompressedTexture3D), "CompressedTexture3D", "get_load_path", 201670096i64),);
    
}
fn load_CompressedTextureLayered_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CompressedTextureLayered = string_names.fetch("CompressedTextureLayered");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CompressedTextureLayered), "CompressedTextureLayered", "load", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CompressedTextureLayered), "CompressedTextureLayered", "get_load_path", 201670096i64),);
    
}
fn load_ConcavePolygonShape2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ConcavePolygonShape2D = string_names.fetch("ConcavePolygonShape2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConcavePolygonShape2D), "ConcavePolygonShape2D", "set_segments", 1509147220i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConcavePolygonShape2D), "ConcavePolygonShape2D", "get_segments", 2961356807i64),);
    
}
fn load_ConcavePolygonShape3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ConcavePolygonShape3D = string_names.fetch("ConcavePolygonShape3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConcavePolygonShape3D), "ConcavePolygonShape3D", "set_faces", 334873810i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConcavePolygonShape3D), "ConcavePolygonShape3D", "get_faces", 497664490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConcavePolygonShape3D), "ConcavePolygonShape3D", "set_backface_collision_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConcavePolygonShape3D), "ConcavePolygonShape3D", "is_backface_collision_enabled", 36873697i64),);
    
}
fn load_ConeTwistJoint3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ConeTwistJoint3D = string_names.fetch("ConeTwistJoint3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConeTwistJoint3D), "ConeTwistJoint3D", "set_param", 1062470226i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConeTwistJoint3D), "ConeTwistJoint3D", "get_param", 2928790850i64),);
    
}
fn load_ConfigFile_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ConfigFile = string_names.fetch("ConfigFile");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConfigFile), "ConfigFile", "set_value", 2504492430i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConfigFile), "ConfigFile", "get_value", 89809366i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConfigFile), "ConfigFile", "has_section", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConfigFile), "ConfigFile", "has_section_key", 820780508i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConfigFile), "ConfigFile", "get_sections", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConfigFile), "ConfigFile", "get_section_keys", 4291131558i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConfigFile), "ConfigFile", "erase_section", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConfigFile), "ConfigFile", "erase_section_key", 3186203200i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConfigFile), "ConfigFile", "load", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConfigFile), "ConfigFile", "parse", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConfigFile), "ConfigFile", "save", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConfigFile), "ConfigFile", "encode_to_text", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConfigFile), "ConfigFile", "load_encrypted", 887037711i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConfigFile), "ConfigFile", "load_encrypted_pass", 852856452i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConfigFile), "ConfigFile", "save_encrypted", 887037711i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConfigFile), "ConfigFile", "save_encrypted_pass", 852856452i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConfigFile), "ConfigFile", "clear", 3218959716i64),);
    
}
fn load_ConfirmationDialog_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ConfirmationDialog = string_names.fetch("ConfirmationDialog");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConfirmationDialog), "ConfirmationDialog", "get_cancel_button", 1856205918i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConfirmationDialog), "ConfirmationDialog", "set_cancel_button_text", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConfirmationDialog), "ConfirmationDialog", "get_cancel_button_text", 201670096i64),);
    
}
fn load_Container_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Container = string_names.fetch("Container");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Container), "Container", "queue_sort", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Container), "Container", "fit_child_in_rect", 1993438598i64),);
    
}
fn load_Control_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Control = string_names.fetch("Control");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "accept_event", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_minimum_size", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_combined_minimum_size", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_anchors_preset", 509135270i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_offsets_preset", 3724524307i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_anchors_and_offsets_preset", 3724524307i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_anchor", 2302782885i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_anchor", 2869120046i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_offset", 4290182280i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_offset", 2869120046i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_anchor_and_offset", 4031722181i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_begin", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_end", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_position", 2436320129i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_size", 2436320129i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "reset_size", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_custom_minimum_size", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_global_position", 2436320129i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_rotation", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_rotation_degrees", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_scale", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_pivot_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_begin", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_end", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_position", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_size", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_rotation", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_rotation_degrees", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_scale", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_pivot_offset", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_custom_minimum_size", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_parent_area_size", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_global_position", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_screen_position", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_rect", 1639390495i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_global_rect", 1639390495i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_focus_mode", 3232914922i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_focus_mode", 2132829277i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_focus_mode_with_override", 2132829277i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_focus_behavior_recursive", 4256832521i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_focus_behavior_recursive", 2435707181i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "has_focus", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "grab_focus", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "release_focus", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "find_prev_valid_focus", 2783021301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "find_next_valid_focus", 2783021301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "find_valid_focus_neighbor", 1543910170i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_h_size_flags", 394851643i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_h_size_flags", 3781367401i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_stretch_ratio", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_stretch_ratio", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_v_size_flags", 394851643i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_v_size_flags", 3781367401i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_theme", 2326690814i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_theme", 3846893731i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_theme_type_variation", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_theme_type_variation", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "begin_bulk_theme_override", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "end_bulk_theme_override", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "add_theme_icon_override", 1373065600i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "add_theme_stylebox_override", 4188838905i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "add_theme_font_override", 3518018674i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "add_theme_font_size_override", 2415702435i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "add_theme_color_override", 4260178595i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "add_theme_constant_override", 2415702435i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "remove_theme_icon_override", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "remove_theme_stylebox_override", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "remove_theme_font_override", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "remove_theme_font_size_override", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "remove_theme_color_override", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "remove_theme_constant_override", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_theme_icon", 3163973443i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_theme_stylebox", 604739069i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_theme_font", 2826986490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_theme_font_size", 1327056374i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_theme_color", 2798751242i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_theme_constant", 1327056374i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "has_theme_icon_override", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "has_theme_stylebox_override", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "has_theme_font_override", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "has_theme_font_size_override", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "has_theme_color_override", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "has_theme_constant_override", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "has_theme_icon", 866386512i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "has_theme_stylebox", 866386512i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "has_theme_font", 866386512i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "has_theme_font_size", 866386512i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "has_theme_color", 866386512i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "has_theme_constant", 866386512i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_theme_default_base_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_theme_default_font", 3229501585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_theme_default_font_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_parent_control", 2783021301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_h_grow_direction", 2022385301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_h_grow_direction", 3635610155i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_v_grow_direction", 2022385301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_v_grow_direction", 3635610155i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_tooltip_auto_translate_mode", 776149714i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_tooltip_auto_translate_mode", 2498906432i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_tooltip_text", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_tooltip_text", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_tooltip", 2895288280i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_default_cursor_shape", 217062046i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_default_cursor_shape", 2359535750i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_cursor_shape", 1395773853i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_focus_neighbor", 2024461774i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_focus_neighbor", 2757935761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_focus_next", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_focus_next", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_focus_previous", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_focus_previous", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "force_drag", 3191844692i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "accessibility_drag", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "accessibility_drop", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_accessibility_name", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_accessibility_name", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_accessibility_description", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_accessibility_description", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_accessibility_live", 1720261470i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_accessibility_live", 3311037003i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_accessibility_controls_nodes", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_accessibility_controls_nodes", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_accessibility_described_by_nodes", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_accessibility_described_by_nodes", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_accessibility_labeled_by_nodes", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_accessibility_labeled_by_nodes", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_accessibility_flow_to_nodes", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_accessibility_flow_to_nodes", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_mouse_filter", 3891156122i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_mouse_filter", 1572545674i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_mouse_filter_with_override", 1572545674i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_mouse_behavior_recursive", 849284636i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_mouse_behavior_recursive", 3779367402i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_force_pass_scroll_events", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "is_force_pass_scroll_events", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_clip_contents", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "is_clipping_contents", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "grab_click_focus", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_drag_forwarding", 1076571380i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_drag_preview", 1496901182i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "is_drag_successful", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "warp_mouse", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_shortcut_context", 1078189570i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_shortcut_context", 3160264692i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "update_minimum_size", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_layout_direction", 3310692370i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "get_layout_direction", 1546772008i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "is_layout_rtl", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_auto_translate", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "is_auto_translating", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "set_localize_numeral_system", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Control), "Control", "is_localizing_numeral_system", 36873697i64),);
    
}
fn load_ConvertTransformModifier3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ConvertTransformModifier3D = string_names.fetch("ConvertTransformModifier3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvertTransformModifier3D), "ConvertTransformModifier3D", "set_apply_transform_mode", 1386463405i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvertTransformModifier3D), "ConvertTransformModifier3D", "get_apply_transform_mode", 3234663511i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvertTransformModifier3D), "ConvertTransformModifier3D", "set_apply_axis", 776736805i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvertTransformModifier3D), "ConvertTransformModifier3D", "get_apply_axis", 4131134770i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvertTransformModifier3D), "ConvertTransformModifier3D", "set_apply_range_min", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvertTransformModifier3D), "ConvertTransformModifier3D", "get_apply_range_min", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvertTransformModifier3D), "ConvertTransformModifier3D", "set_apply_range_max", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvertTransformModifier3D), "ConvertTransformModifier3D", "get_apply_range_max", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvertTransformModifier3D), "ConvertTransformModifier3D", "set_reference_transform_mode", 1386463405i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvertTransformModifier3D), "ConvertTransformModifier3D", "get_reference_transform_mode", 3234663511i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvertTransformModifier3D), "ConvertTransformModifier3D", "set_reference_axis", 776736805i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvertTransformModifier3D), "ConvertTransformModifier3D", "get_reference_axis", 4131134770i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvertTransformModifier3D), "ConvertTransformModifier3D", "set_reference_range_min", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvertTransformModifier3D), "ConvertTransformModifier3D", "get_reference_range_min", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvertTransformModifier3D), "ConvertTransformModifier3D", "set_reference_range_max", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvertTransformModifier3D), "ConvertTransformModifier3D", "get_reference_range_max", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvertTransformModifier3D), "ConvertTransformModifier3D", "set_relative", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvertTransformModifier3D), "ConvertTransformModifier3D", "is_relative", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvertTransformModifier3D), "ConvertTransformModifier3D", "set_additive", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvertTransformModifier3D), "ConvertTransformModifier3D", "is_additive", 1116898809i64),);
    
}
fn load_ConvexPolygonShape2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ConvexPolygonShape2D = string_names.fetch("ConvexPolygonShape2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvexPolygonShape2D), "ConvexPolygonShape2D", "set_point_cloud", 1509147220i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvexPolygonShape2D), "ConvexPolygonShape2D", "set_points", 1509147220i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvexPolygonShape2D), "ConvexPolygonShape2D", "get_points", 2961356807i64),);
    
}
fn load_ConvexPolygonShape3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ConvexPolygonShape3D = string_names.fetch("ConvexPolygonShape3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvexPolygonShape3D), "ConvexPolygonShape3D", "set_points", 334873810i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ConvexPolygonShape3D), "ConvexPolygonShape3D", "get_points", 497664490i64),);
    
}
fn load_CopyTransformModifier3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CopyTransformModifier3D = string_names.fetch("CopyTransformModifier3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "set_copy_flags", 2252507859i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "get_copy_flags", 1685185931i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "set_axis_flags", 2044211897i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "get_axis_flags", 992162046i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "set_invert_flags", 2044211897i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "get_invert_flags", 992162046i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "set_copy_position", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "is_position_copying", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "set_copy_rotation", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "is_rotation_copying", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "set_copy_scale", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "is_scale_copying", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "set_axis_x_enabled", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "is_axis_x_enabled", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "set_axis_y_enabled", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "is_axis_y_enabled", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "set_axis_z_enabled", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "is_axis_z_enabled", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "set_axis_x_inverted", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "is_axis_x_inverted", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "set_axis_y_inverted", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "is_axis_y_inverted", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "set_axis_z_inverted", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "is_axis_z_inverted", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "set_relative", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "is_relative", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "set_additive", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CopyTransformModifier3D), "CopyTransformModifier3D", "is_additive", 1116898809i64),);
    
}
fn load_Crypto_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Crypto = string_names.fetch("Crypto");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Crypto), "Crypto", "generate_random_bytes", 47165747i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Crypto), "Crypto", "generate_rsa", 1237515462i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Crypto), "Crypto", "generate_self_signed_certificate", 492266173i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Crypto), "Crypto", "sign", 1673662703i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Crypto), "Crypto", "verify", 2805902225i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Crypto), "Crypto", "encrypt", 2361793670i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Crypto), "Crypto", "decrypt", 2361793670i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Crypto), "Crypto", "hmac_digest", 2368951203i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Crypto), "Crypto", "constant_time_compare", 1024142237i64),);
    
}
fn load_CryptoKey_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CryptoKey = string_names.fetch("CryptoKey");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CryptoKey), "CryptoKey", "save", 885841341i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CryptoKey), "CryptoKey", "load", 885841341i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CryptoKey), "CryptoKey", "is_public_only", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CryptoKey), "CryptoKey", "save_to_string", 32795936i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CryptoKey), "CryptoKey", "load_from_string", 885841341i64),);
    
}
fn load_Cubemap_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Cubemap = string_names.fetch("Cubemap");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Cubemap), "Cubemap", "create_placeholder", 121922552i64),);
    
}
fn load_CubemapArray_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CubemapArray = string_names.fetch("CubemapArray");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CubemapArray), "CubemapArray", "create_placeholder", 121922552i64),);
    
}
fn load_Curve_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Curve = string_names.fetch("Curve");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "get_point_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "set_point_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "add_point", 434072736i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "remove_point", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "clear_points", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "get_point_position", 2299179447i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "set_point_value", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "set_point_offset", 3780573764i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "sample", 3919130443i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "sample_baked", 3919130443i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "get_point_left_tangent", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "get_point_right_tangent", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "get_point_left_mode", 426950354i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "get_point_right_mode", 426950354i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "set_point_left_tangent", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "set_point_right_tangent", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "set_point_left_mode", 1217242874i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "set_point_right_mode", 1217242874i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "get_min_value", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "set_min_value", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "get_max_value", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "set_max_value", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "get_value_range", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "get_min_domain", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "set_min_domain", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "get_max_domain", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "set_max_domain", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "get_domain_range", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "clean_dupes", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "bake", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "get_bake_resolution", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve), "Curve", "set_bake_resolution", 1286410249i64),);
    
}
fn load_Curve2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Curve2D = string_names.fetch("Curve2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "get_point_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "set_point_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "add_point", 4175465202i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "set_point_position", 163021252i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "get_point_position", 2299179447i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "set_point_in", 163021252i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "get_point_in", 2299179447i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "set_point_out", 163021252i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "get_point_out", 2299179447i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "remove_point", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "clear_points", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "sample", 26514310i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "samplef", 3588506812i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "set_bake_interval", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "get_bake_interval", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "get_baked_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "sample_baked", 3464257706i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "sample_baked_with_rotation", 3296056341i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "get_baked_points", 2961356807i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "get_closest_point", 2656412154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "get_closest_offset", 2276447920i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "tessellate", 958145977i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve2D), "Curve2D", "tessellate_even_length", 2319761637i64),);
    
}
fn load_Curve3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Curve3D = string_names.fetch("Curve3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "get_point_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "set_point_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "add_point", 2931053748i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "set_point_position", 1530502735i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "get_point_position", 711720468i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "set_point_tilt", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "get_point_tilt", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "set_point_in", 1530502735i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "get_point_in", 711720468i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "set_point_out", 1530502735i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "get_point_out", 711720468i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "remove_point", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "clear_points", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "sample", 3285246857i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "samplef", 2553580215i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "set_closed", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "is_closed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "set_bake_interval", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "get_bake_interval", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "set_up_vector_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "is_up_vector_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "get_baked_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "sample_baked", 1350085894i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "sample_baked_with_rotation", 1939359131i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "sample_baked_up_vector", 1362627031i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "get_baked_points", 497664490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "get_baked_tilts", 675695659i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "get_baked_up_vectors", 497664490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "get_closest_point", 192990374i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "get_closest_offset", 1109078154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "tessellate", 1519759391i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Curve3D), "Curve3D", "tessellate_even_length", 133237049i64),);
    
}
fn load_CurveTexture_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CurveTexture = string_names.fetch("CurveTexture");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CurveTexture), "CurveTexture", "set_width", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CurveTexture), "CurveTexture", "set_curve", 270443179i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CurveTexture), "CurveTexture", "get_curve", 2460114913i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CurveTexture), "CurveTexture", "set_texture_mode", 1321955367i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CurveTexture), "CurveTexture", "get_texture_mode", 715756376i64),);
    
}
fn load_CurveXYZTexture_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CurveXYZTexture = string_names.fetch("CurveXYZTexture");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CurveXYZTexture), "CurveXYZTexture", "set_width", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CurveXYZTexture), "CurveXYZTexture", "set_curve_x", 270443179i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CurveXYZTexture), "CurveXYZTexture", "get_curve_x", 2460114913i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CurveXYZTexture), "CurveXYZTexture", "set_curve_y", 270443179i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CurveXYZTexture), "CurveXYZTexture", "get_curve_y", 2460114913i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CurveXYZTexture), "CurveXYZTexture", "set_curve_z", 270443179i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CurveXYZTexture), "CurveXYZTexture", "get_curve_z", 2460114913i64),);
    
}
fn load_CylinderMesh_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CylinderMesh = string_names.fetch("CylinderMesh");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CylinderMesh), "CylinderMesh", "set_top_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CylinderMesh), "CylinderMesh", "get_top_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CylinderMesh), "CylinderMesh", "set_bottom_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CylinderMesh), "CylinderMesh", "get_bottom_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CylinderMesh), "CylinderMesh", "set_height", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CylinderMesh), "CylinderMesh", "get_height", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CylinderMesh), "CylinderMesh", "set_radial_segments", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CylinderMesh), "CylinderMesh", "get_radial_segments", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CylinderMesh), "CylinderMesh", "set_rings", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CylinderMesh), "CylinderMesh", "get_rings", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CylinderMesh), "CylinderMesh", "set_cap_top", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CylinderMesh), "CylinderMesh", "is_cap_top", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CylinderMesh), "CylinderMesh", "set_cap_bottom", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CylinderMesh), "CylinderMesh", "is_cap_bottom", 36873697i64),);
    
}
fn load_CylinderShape3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_CylinderShape3D = string_names.fetch("CylinderShape3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CylinderShape3D), "CylinderShape3D", "set_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CylinderShape3D), "CylinderShape3D", "get_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CylinderShape3D), "CylinderShape3D", "set_height", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_CylinderShape3D), "CylinderShape3D", "get_height", 1740695150i64),);
    
}
fn load_DPITexture_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_DPITexture = string_names.fetch("DPITexture");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DPITexture), "DPITexture", "create_from_string", 755140520i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DPITexture), "DPITexture", "set_source", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DPITexture), "DPITexture", "get_source", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DPITexture), "DPITexture", "set_base_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DPITexture), "DPITexture", "get_base_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DPITexture), "DPITexture", "set_saturation", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DPITexture), "DPITexture", "get_saturation", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DPITexture), "DPITexture", "set_color_map", 4155329257i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DPITexture), "DPITexture", "get_color_map", 3102165223i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DPITexture), "DPITexture", "set_size_override", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DPITexture), "DPITexture", "get_scaled_rid", 2944877500i64),);
    
}
fn load_DTLSServer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_DTLSServer = string_names.fetch("DTLSServer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DTLSServer), "DTLSServer", "setup", 1262296096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DTLSServer), "DTLSServer", "take_connection", 3946580474i64),);
    
}
fn load_DampedSpringJoint2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_DampedSpringJoint2D = string_names.fetch("DampedSpringJoint2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DampedSpringJoint2D), "DampedSpringJoint2D", "set_length", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DampedSpringJoint2D), "DampedSpringJoint2D", "get_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DampedSpringJoint2D), "DampedSpringJoint2D", "set_rest_length", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DampedSpringJoint2D), "DampedSpringJoint2D", "get_rest_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DampedSpringJoint2D), "DampedSpringJoint2D", "set_stiffness", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DampedSpringJoint2D), "DampedSpringJoint2D", "get_stiffness", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DampedSpringJoint2D), "DampedSpringJoint2D", "set_damping", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DampedSpringJoint2D), "DampedSpringJoint2D", "get_damping", 1740695150i64),);
    
}
fn load_Decal_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Decal = string_names.fetch("Decal");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "set_size", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "get_size", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "set_texture", 2086764391i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "get_texture", 3244119503i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "set_emission_energy", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "get_emission_energy", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "set_albedo_mix", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "get_albedo_mix", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "set_modulate", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "get_modulate", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "set_upper_fade", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "get_upper_fade", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "set_lower_fade", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "get_lower_fade", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "set_normal_fade", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "get_normal_fade", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "set_enable_distance_fade", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "is_distance_fade_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "set_distance_fade_begin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "get_distance_fade_begin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "set_distance_fade_length", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "get_distance_fade_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "set_cull_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Decal), "Decal", "get_cull_mask", 3905245786i64),);
    
}
fn load_DirAccess_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_DirAccess = string_names.fetch("DirAccess");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "open", 1923528528i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "get_open_error", 166280745i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "create_temp", 812913566i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "list_dir_begin", 166280745i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "get_next", 2841200299i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "current_is_dir", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "list_dir_end", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "get_files", 2981934095i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "get_files_at", 3538744774i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "get_directories", 2981934095i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "get_directories_at", 3538744774i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "get_drive_count", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "get_drive_name", 990163283i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "get_current_drive", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "change_dir", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "get_current_dir", 1287308131i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "make_dir", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "make_dir_absolute", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "make_dir_recursive", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "make_dir_recursive_absolute", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "file_exists", 2323990056i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "dir_exists", 2323990056i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "dir_exists_absolute", 2323990056i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "get_space_left", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "copy", 1063198817i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "copy_absolute", 1063198817i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "rename", 852856452i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "rename_absolute", 852856452i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "remove", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "remove_absolute", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "is_link", 2323990056i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "read_link", 1703090593i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "create_link", 852856452i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "is_bundle", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "set_include_navigational", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "get_include_navigational", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "set_include_hidden", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "get_include_hidden", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "get_filesystem_type", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "is_case_sensitive", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirAccess), "DirAccess", "is_equivalent", 820780508i64),);
    
}
fn load_DirectionalLight2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_DirectionalLight2D = string_names.fetch("DirectionalLight2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirectionalLight2D), "DirectionalLight2D", "set_max_distance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirectionalLight2D), "DirectionalLight2D", "get_max_distance", 1740695150i64),);
    
}
fn load_DirectionalLight3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_DirectionalLight3D = string_names.fetch("DirectionalLight3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirectionalLight3D), "DirectionalLight3D", "set_shadow_mode", 1261211726i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirectionalLight3D), "DirectionalLight3D", "get_shadow_mode", 2765228544i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirectionalLight3D), "DirectionalLight3D", "set_blend_splits", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirectionalLight3D), "DirectionalLight3D", "is_blend_splits_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirectionalLight3D), "DirectionalLight3D", "set_sky_mode", 2691194817i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_DirectionalLight3D), "DirectionalLight3D", "get_sky_mode", 3819982774i64),);
    
}
fn load_ENetConnection_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ENetConnection = string_names.fetch("ENetConnection");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetConnection), "ENetConnection", "create_host_bound", 1515002313i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetConnection), "ENetConnection", "create_host", 117198950i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetConnection), "ENetConnection", "destroy", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetConnection), "ENetConnection", "connect_to_host", 2171300490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetConnection), "ENetConnection", "service", 2402345344i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetConnection), "ENetConnection", "flush", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetConnection), "ENetConnection", "bandwidth_limit", 2302169788i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetConnection), "ENetConnection", "channel_limit", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetConnection), "ENetConnection", "broadcast", 2772371345i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetConnection), "ENetConnection", "compress", 2660215187i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetConnection), "ENetConnection", "dtls_server_setup", 1262296096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetConnection), "ENetConnection", "dtls_client_setup", 1966198364i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetConnection), "ENetConnection", "refuse_new_connections", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetConnection), "ENetConnection", "pop_statistic", 2166904170i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetConnection), "ENetConnection", "get_max_channels", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetConnection), "ENetConnection", "get_local_port", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetConnection), "ENetConnection", "get_peers", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetConnection), "ENetConnection", "socket_send", 1100646812i64),);
    
}
fn load_ENetMultiplayerPeer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ENetMultiplayerPeer = string_names.fetch("ENetMultiplayerPeer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetMultiplayerPeer), "ENetMultiplayerPeer", "create_server", 2917761309i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetMultiplayerPeer), "ENetMultiplayerPeer", "create_client", 2327163476i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetMultiplayerPeer), "ENetMultiplayerPeer", "create_mesh", 844576869i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetMultiplayerPeer), "ENetMultiplayerPeer", "add_mesh_peer", 1293458335i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetMultiplayerPeer), "ENetMultiplayerPeer", "set_bind_ip", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetMultiplayerPeer), "ENetMultiplayerPeer", "get_host", 4103238886i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetMultiplayerPeer), "ENetMultiplayerPeer", "get_peer", 3793311544i64),);
    
}
fn load_ENetPacketPeer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ENetPacketPeer = string_names.fetch("ENetPacketPeer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetPacketPeer), "ENetPacketPeer", "peer_disconnect", 1995695955i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetPacketPeer), "ENetPacketPeer", "peer_disconnect_later", 1995695955i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetPacketPeer), "ENetPacketPeer", "peer_disconnect_now", 1995695955i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetPacketPeer), "ENetPacketPeer", "ping", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetPacketPeer), "ENetPacketPeer", "ping_interval", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetPacketPeer), "ENetPacketPeer", "reset", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetPacketPeer), "ENetPacketPeer", "send", 120522849i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetPacketPeer), "ENetPacketPeer", "throttle_configure", 1649997291i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetPacketPeer), "ENetPacketPeer", "set_timeout", 1649997291i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetPacketPeer), "ENetPacketPeer", "get_packet_flags", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetPacketPeer), "ENetPacketPeer", "get_remote_address", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetPacketPeer), "ENetPacketPeer", "get_remote_port", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetPacketPeer), "ENetPacketPeer", "get_statistic", 1642578323i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetPacketPeer), "ENetPacketPeer", "get_state", 711068532i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetPacketPeer), "ENetPacketPeer", "get_channels", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ENetPacketPeer), "ENetPacketPeer", "is_active", 36873697i64),);
    
}
fn load_EncodedObjectAsID_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_EncodedObjectAsID = string_names.fetch("EncodedObjectAsID");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EncodedObjectAsID), "EncodedObjectAsID", "set_object_id", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EncodedObjectAsID), "EncodedObjectAsID", "get_object_id", 3905245786i64),);
    
}
fn load_EngineDebugger_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_EngineDebugger = string_names.fetch("EngineDebugger");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "is_active", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "register_profiler", 3651669560i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "unregister_profiler", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "is_profiling", 2041966384i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "has_profiler", 2041966384i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "profiler_add_frame_data", 1895267858i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "profiler_enable", 3192561009i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "register_message_capture", 1874754934i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "unregister_message_capture", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "has_capture", 2041966384i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "line_poll", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "send_message", 1209351045i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "debug", 2751962654i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "script_debug", 2442343672i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "set_lines_left", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "get_lines_left", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "set_depth", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "get_depth", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "is_breakpoint", 921227809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "is_skipping_breakpoints", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "insert_breakpoint", 3780747571i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "remove_breakpoint", 3780747571i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_EngineDebugger), "EngineDebugger", "clear_breakpoints", 3218959716i64),);
    
}
fn load_Environment_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Environment = string_names.fetch("Environment");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_background", 4071623990i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_background", 1843210413i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_sky", 3336722921i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_sky", 1177136966i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_sky_custom_fov", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_sky_custom_fov", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_sky_rotation", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_sky_rotation", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_bg_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_bg_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_bg_energy_multiplier", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_bg_energy_multiplier", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_bg_intensity", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_bg_intensity", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_canvas_max_layer", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_canvas_max_layer", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_camera_feed_id", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_camera_feed_id", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ambient_light_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_ambient_light_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ambient_source", 2607780160i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_ambient_source", 67453933i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ambient_light_energy", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_ambient_light_energy", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ambient_light_sky_contribution", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_ambient_light_sky_contribution", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_reflection_source", 299673197i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_reflection_source", 777700713i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_tonemapper", 1509116664i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_tonemapper", 2908408137i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_tonemap_exposure", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_tonemap_exposure", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_tonemap_white", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_tonemap_white", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ssr_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "is_ssr_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ssr_max_steps", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_ssr_max_steps", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ssr_fade_in", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_ssr_fade_in", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ssr_fade_out", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_ssr_fade_out", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ssr_depth_tolerance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_ssr_depth_tolerance", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ssao_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "is_ssao_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ssao_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_ssao_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ssao_intensity", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_ssao_intensity", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ssao_power", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_ssao_power", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ssao_detail", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_ssao_detail", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ssao_horizon", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_ssao_horizon", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ssao_sharpness", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_ssao_sharpness", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ssao_direct_light_affect", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_ssao_direct_light_affect", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ssao_ao_channel_affect", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_ssao_ao_channel_affect", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ssil_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "is_ssil_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ssil_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_ssil_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ssil_intensity", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_ssil_intensity", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ssil_sharpness", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_ssil_sharpness", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_ssil_normal_rejection", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_ssil_normal_rejection", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_sdfgi_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "is_sdfgi_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_sdfgi_cascades", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_sdfgi_cascades", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_sdfgi_min_cell_size", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_sdfgi_min_cell_size", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_sdfgi_max_distance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_sdfgi_max_distance", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_sdfgi_cascade0_distance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_sdfgi_cascade0_distance", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_sdfgi_y_scale", 3608608372i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_sdfgi_y_scale", 2568002245i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_sdfgi_use_occlusion", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "is_sdfgi_using_occlusion", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_sdfgi_bounce_feedback", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_sdfgi_bounce_feedback", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_sdfgi_read_sky_light", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "is_sdfgi_reading_sky_light", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_sdfgi_energy", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_sdfgi_energy", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_sdfgi_normal_bias", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_sdfgi_normal_bias", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_sdfgi_probe_bias", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_sdfgi_probe_bias", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_glow_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "is_glow_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_glow_level", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_glow_level", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_glow_normalized", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "is_glow_normalized", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_glow_intensity", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_glow_intensity", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_glow_strength", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_glow_strength", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_glow_mix", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_glow_mix", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_glow_bloom", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_glow_bloom", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_glow_blend_mode", 2561587761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_glow_blend_mode", 1529667332i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_glow_hdr_bleed_threshold", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_glow_hdr_bleed_threshold", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_glow_hdr_bleed_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_glow_hdr_bleed_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_glow_hdr_luminance_cap", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_glow_hdr_luminance_cap", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_glow_map_strength", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_glow_map_strength", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_glow_map", 1790811099i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_glow_map", 4037048985i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_fog_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "is_fog_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_fog_mode", 3059806579i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_fog_mode", 2456062483i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_fog_light_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_fog_light_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_fog_light_energy", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_fog_light_energy", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_fog_sun_scatter", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_fog_sun_scatter", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_fog_density", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_fog_density", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_fog_height", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_fog_height", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_fog_height_density", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_fog_height_density", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_fog_aerial_perspective", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_fog_aerial_perspective", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_fog_sky_affect", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_fog_sky_affect", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_fog_depth_curve", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_fog_depth_curve", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_fog_depth_begin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_fog_depth_begin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_fog_depth_end", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_fog_depth_end", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_volumetric_fog_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "is_volumetric_fog_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_volumetric_fog_emission", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_volumetric_fog_emission", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_volumetric_fog_albedo", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_volumetric_fog_albedo", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_volumetric_fog_density", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_volumetric_fog_density", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_volumetric_fog_emission_energy", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_volumetric_fog_emission_energy", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_volumetric_fog_anisotropy", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_volumetric_fog_anisotropy", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_volumetric_fog_length", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_volumetric_fog_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_volumetric_fog_detail_spread", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_volumetric_fog_detail_spread", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_volumetric_fog_gi_inject", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_volumetric_fog_gi_inject", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_volumetric_fog_ambient_inject", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_volumetric_fog_ambient_inject", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_volumetric_fog_sky_affect", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_volumetric_fog_sky_affect", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_volumetric_fog_temporal_reprojection_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "is_volumetric_fog_temporal_reprojection_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_volumetric_fog_temporal_reprojection_amount", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_volumetric_fog_temporal_reprojection_amount", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_adjustment_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "is_adjustment_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_adjustment_brightness", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_adjustment_brightness", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_adjustment_contrast", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_adjustment_contrast", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_adjustment_saturation", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_adjustment_saturation", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "set_adjustment_color_correction", 1790811099i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Environment), "Environment", "get_adjustment_color_correction", 4037048985i64),);
    
}
fn load_Expression_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Expression = string_names.fetch("Expression");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Expression), "Expression", "parse", 3069722906i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Expression), "Expression", "execute", 3712471238i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Expression), "Expression", "has_execute_failed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Expression), "Expression", "get_error_text", 201670096i64),);
    
}
fn load_ExternalTexture_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ExternalTexture = string_names.fetch("ExternalTexture");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ExternalTexture), "ExternalTexture", "set_size", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ExternalTexture), "ExternalTexture", "get_external_texture_id", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ExternalTexture), "ExternalTexture", "set_external_buffer_id", 1286410249i64),);
    
}
fn load_FBXState_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_FBXState = string_names.fetch("FBXState");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FBXState), "FBXState", "get_allow_geometry_helper_nodes", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FBXState), "FBXState", "set_allow_geometry_helper_nodes", 2586408642i64),);
    
}
fn load_FastNoiseLite_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_FastNoiseLite = string_names.fetch("FastNoiseLite");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "set_noise_type", 2624461392i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "get_noise_type", 1458108610i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "set_seed", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "get_seed", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "set_frequency", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "get_frequency", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "set_offset", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "get_offset", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "set_fractal_type", 4132731174i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "get_fractal_type", 1036889279i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "set_fractal_octaves", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "get_fractal_octaves", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "set_fractal_lacunarity", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "get_fractal_lacunarity", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "set_fractal_gain", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "get_fractal_gain", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "set_fractal_weighted_strength", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "get_fractal_weighted_strength", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "set_fractal_ping_pong_strength", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "get_fractal_ping_pong_strength", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "set_cellular_distance_function", 1006013267i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "get_cellular_distance_function", 2021274088i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "set_cellular_jitter", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "get_cellular_jitter", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "set_cellular_return_type", 2654169698i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "get_cellular_return_type", 3699796343i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "set_domain_warp_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "is_domain_warp_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "set_domain_warp_type", 3629692980i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "get_domain_warp_type", 2980162020i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "set_domain_warp_amplitude", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "get_domain_warp_amplitude", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "set_domain_warp_frequency", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "get_domain_warp_frequency", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "set_domain_warp_fractal_type", 3999408287i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "get_domain_warp_fractal_type", 407716934i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "set_domain_warp_fractal_octaves", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "get_domain_warp_fractal_octaves", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "set_domain_warp_fractal_lacunarity", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "get_domain_warp_fractal_lacunarity", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "set_domain_warp_fractal_gain", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FastNoiseLite), "FastNoiseLite", "get_domain_warp_fractal_gain", 1740695150i64),);
    
}
fn load_FileAccess_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_FileAccess = string_names.fetch("FileAccess");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "open", 1247358404i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "open_encrypted", 788003459i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "open_encrypted_with_pass", 790283377i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "open_compressed", 3686439335i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_open_error", 166280745i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "create_temp", 3075606245i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_file_as_bytes", 659035735i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_file_as_string", 1703090593i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "resize", 844576869i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "flush", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_path", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_path_absolute", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "is_open", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "seek", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "seek_end", 1995695955i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_position", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_length", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "eof_reached", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_8", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_16", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_32", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_64", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_half", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_float", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_double", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_real", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_buffer", 4131300905i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_line", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_csv_line", 2358116058i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_as_text", 1162154673i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_md5", 1703090593i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_sha256", 1703090593i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "is_big_endian", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "set_big_endian", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_error", 3185525595i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_var", 189129690i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "store_8", 3067735520i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "store_16", 3067735520i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "store_32", 3067735520i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "store_64", 3067735520i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "store_half", 330693286i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "store_float", 330693286i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "store_double", 330693286i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "store_real", 330693286i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "store_buffer", 114037665i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "store_line", 2323990056i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "store_csv_line", 1611473434i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "store_string", 2323990056i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "store_var", 117357437i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "store_pascal_string", 2323990056i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_pascal_string", 2841200299i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "close", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "file_exists", 2323990056i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_modified_time", 1597066294i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_access_time", 1597066294i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_size", 1597066294i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_unix_permissions", 524341837i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "set_unix_permissions", 846038644i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_hidden_attribute", 2323990056i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "set_hidden_attribute", 2892558115i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "set_read_only_attribute", 2892558115i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileAccess), "FileAccess", "get_read_only_attribute", 2323990056i64),);
    
}
fn load_FileDialog_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_FileDialog = string_names.fetch("FileDialog");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "clear_filters", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "add_filter", 3388804757i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "set_filters", 4015028928i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "get_filters", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "clear_filename_filter", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "set_filename_filter", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "get_filename_filter", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "get_option_name", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "get_option_values", 647634434i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "get_option_default", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "set_option_name", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "set_option_values", 3353661094i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "set_option_default", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "set_option_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "get_option_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "add_option", 149592325i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "get_selected_options", 3102165223i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "get_current_dir", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "get_current_file", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "get_current_path", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "set_current_dir", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "set_current_file", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "set_current_path", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "set_mode_overrides_title", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "is_mode_overriding_title", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "set_file_mode", 3654936397i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "get_file_mode", 4074825319i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "set_display_mode", 2692197101i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "get_display_mode", 1092104624i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "get_vbox", 915758477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "get_line_edit", 4071694264i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "set_access", 4104413466i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "get_access", 3344081076i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "set_root_subfolder", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "get_root_subfolder", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "set_show_hidden_files", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "is_showing_hidden_files", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "set_use_native_dialog", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "get_use_native_dialog", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "set_customization_flag_enabled", 3849177100i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "is_customization_flag_enabled", 3722277863i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "deselect_all", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FileDialog), "FileDialog", "invalidate", 3218959716i64),);
    
}
fn load_FlowContainer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_FlowContainer = string_names.fetch("FlowContainer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FlowContainer), "FlowContainer", "get_line_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FlowContainer), "FlowContainer", "set_alignment", 575250951i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FlowContainer), "FlowContainer", "get_alignment", 3749743559i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FlowContainer), "FlowContainer", "set_last_wrap_alignment", 2899697495i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FlowContainer), "FlowContainer", "get_last_wrap_alignment", 3743456014i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FlowContainer), "FlowContainer", "set_vertical", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FlowContainer), "FlowContainer", "is_vertical", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FlowContainer), "FlowContainer", "set_reverse_fill", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FlowContainer), "FlowContainer", "is_reverse_fill", 36873697i64),);
    
}
fn load_FogMaterial_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_FogMaterial = string_names.fetch("FogMaterial");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FogMaterial), "FogMaterial", "set_density", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FogMaterial), "FogMaterial", "get_density", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FogMaterial), "FogMaterial", "set_albedo", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FogMaterial), "FogMaterial", "get_albedo", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FogMaterial), "FogMaterial", "set_emission", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FogMaterial), "FogMaterial", "get_emission", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FogMaterial), "FogMaterial", "set_height_falloff", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FogMaterial), "FogMaterial", "get_height_falloff", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FogMaterial), "FogMaterial", "set_edge_fade", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FogMaterial), "FogMaterial", "get_edge_fade", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FogMaterial), "FogMaterial", "set_density_texture", 1188404210i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FogMaterial), "FogMaterial", "get_density_texture", 373985333i64),);
    
}
fn load_FogVolume_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_FogVolume = string_names.fetch("FogVolume");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FogVolume), "FogVolume", "set_size", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FogVolume), "FogVolume", "get_size", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FogVolume), "FogVolume", "set_shape", 1416323362i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FogVolume), "FogVolume", "get_shape", 3920334604i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FogVolume), "FogVolume", "set_material", 2757459619i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FogVolume), "FogVolume", "get_material", 5934680i64),);
    
}
fn load_FoldableContainer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_FoldableContainer = string_names.fetch("FoldableContainer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableContainer), "FoldableContainer", "fold", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableContainer), "FoldableContainer", "expand", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableContainer), "FoldableContainer", "set_folded", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableContainer), "FoldableContainer", "is_folded", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableContainer), "FoldableContainer", "set_foldable_group", 3001390597i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableContainer), "FoldableContainer", "get_foldable_group", 66499518i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableContainer), "FoldableContainer", "set_title", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableContainer), "FoldableContainer", "get_title", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableContainer), "FoldableContainer", "set_title_alignment", 2312603777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableContainer), "FoldableContainer", "get_title_alignment", 341400642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableContainer), "FoldableContainer", "set_language", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableContainer), "FoldableContainer", "get_language", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableContainer), "FoldableContainer", "set_title_text_direction", 119160795i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableContainer), "FoldableContainer", "get_title_text_direction", 797257663i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableContainer), "FoldableContainer", "set_title_text_overrun_behavior", 1008890932i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableContainer), "FoldableContainer", "get_title_text_overrun_behavior", 3779142101i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableContainer), "FoldableContainer", "set_title_position", 2276829442i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableContainer), "FoldableContainer", "get_title_position", 3028840207i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableContainer), "FoldableContainer", "add_title_bar_control", 1496901182i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableContainer), "FoldableContainer", "remove_title_bar_control", 1496901182i64),);
    
}
fn load_FoldableGroup_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_FoldableGroup = string_names.fetch("FoldableGroup");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableGroup), "FoldableGroup", "get_expanded_container", 1427441056i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableGroup), "FoldableGroup", "get_containers", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableGroup), "FoldableGroup", "set_allow_folding_all", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FoldableGroup), "FoldableGroup", "is_allow_folding_all", 36873697i64),);
    
}
fn load_Font_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Font = string_names.fetch("Font");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "set_fallbacks", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "get_fallbacks", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "find_variation", 2553855095i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "get_rids", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "get_height", 378113874i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "get_ascent", 378113874i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "get_descent", 378113874i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "get_underline_position", 378113874i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "get_underline_thickness", 378113874i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "get_font_name", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "get_font_style_name", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "get_ot_name_strings", 3102165223i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "get_font_style", 2520224254i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "get_font_weight", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "get_font_stretch", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "get_spacing", 1310880908i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "get_opentype_features", 3102165223i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "set_cache_capacity", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "get_string_size", 1868866121i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "get_multiline_string_size", 519636710i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "draw_string", 1976686372i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "draw_multiline_string", 2686601589i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "draw_string_outline", 701417663i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "draw_multiline_string_outline", 4147839237i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "get_char_size", 3016396712i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "draw_char", 3500170256i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "draw_char_outline", 1684114874i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "has_char", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "get_supported_chars", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "is_language_supported", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "is_script_supported", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "get_supported_feature_list", 3102165223i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "get_supported_variation_list", 3102165223i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Font), "Font", "get_face_count", 3905245786i64),);
    
}
fn load_FontFile_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_FontFile = string_names.fetch("FontFile");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "load_bitmap_font", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "load_dynamic_font", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_data", 2971499966i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_data", 2362200018i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_font_name", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_font_style_name", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_font_style", 918070724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_font_weight", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_font_stretch", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_antialiasing", 1669900i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_antialiasing", 4262718649i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_disable_embedded_bitmaps", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_disable_embedded_bitmaps", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_generate_mipmaps", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_generate_mipmaps", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_multichannel_signed_distance_field", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "is_multichannel_signed_distance_field", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_msdf_pixel_range", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_msdf_pixel_range", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_msdf_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_msdf_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_fixed_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_fixed_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_fixed_size_scale_mode", 1660989956i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_fixed_size_scale_mode", 753873478i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_allow_system_fallback", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "is_allow_system_fallback", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_force_autohinter", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "is_force_autohinter", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_modulate_color_glyphs", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "is_modulate_color_glyphs", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_hinting", 1827459492i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_hinting", 3683214614i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_subpixel_positioning", 4225742182i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_subpixel_positioning", 1069238588i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_keep_rounding_remainders", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_keep_rounding_remainders", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_oversampling", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_oversampling", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_cache_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "clear_cache", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "remove_cache", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_size_cache_list", 663333327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "clear_size_cache", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "remove_size_cache", 2311374912i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_variation_coordinates", 64545446i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_variation_coordinates", 3485342025i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_embolden", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_embolden", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_transform", 30160968i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_transform", 3836996910i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_extra_spacing", 62942285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_extra_spacing", 1924257185i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_extra_baseline_offset", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_extra_baseline_offset", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_face_index", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_face_index", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_cache_ascent", 3506521499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_cache_ascent", 3085491603i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_cache_descent", 3506521499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_cache_descent", 3085491603i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_cache_underline_position", 3506521499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_cache_underline_position", 3085491603i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_cache_underline_thickness", 3506521499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_cache_underline_thickness", 3085491603i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_cache_scale", 3506521499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_cache_scale", 3085491603i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_texture_count", 1987661582i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "clear_textures", 2311374912i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "remove_texture", 2328951467i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_texture_image", 4157974066i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_texture_image", 3878418953i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_texture_offsets", 2849993437i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_texture_offsets", 3703444828i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_glyph_list", 681709689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "clear_glyphs", 2311374912i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "remove_glyph", 2328951467i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_glyph_advance", 947991729i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_glyph_advance", 1601573536i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_glyph_offset", 921719850i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_glyph_offset", 3205412300i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_glyph_size", 921719850i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_glyph_size", 3205412300i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_glyph_uv_rect", 3821620992i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_glyph_uv_rect", 3927917900i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_glyph_texture_idx", 355564111i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_glyph_texture_idx", 1629411054i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_kerning_list", 2345056839i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "clear_kerning_map", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "remove_kerning", 3930204747i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_kerning", 3182200918i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_kerning", 1611912865i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "render_range", 355564111i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "render_glyph", 2328951467i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_language_support_override", 2678287736i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_language_support_override", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "remove_language_support_override", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_language_support_overrides", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_script_support_override", 2678287736i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_script_support_override", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "remove_script_support_override", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_script_support_overrides", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "set_opentype_feature_overrides", 4155329257i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_opentype_feature_overrides", 3102165223i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_glyph_index", 864943070i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontFile), "FontFile", "get_char_from_glyph_index", 3175239445i64),);
    
}
fn load_FontVariation_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_FontVariation = string_names.fetch("FontVariation");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontVariation), "FontVariation", "set_base_font", 1262170328i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontVariation), "FontVariation", "get_base_font", 3229501585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontVariation), "FontVariation", "set_variation_opentype", 4155329257i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontVariation), "FontVariation", "get_variation_opentype", 3102165223i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontVariation), "FontVariation", "set_variation_embolden", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontVariation), "FontVariation", "get_variation_embolden", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontVariation), "FontVariation", "set_variation_face_index", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontVariation), "FontVariation", "get_variation_face_index", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontVariation), "FontVariation", "set_variation_transform", 2761652528i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontVariation), "FontVariation", "get_variation_transform", 3814499831i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontVariation), "FontVariation", "set_opentype_features", 4155329257i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontVariation), "FontVariation", "set_spacing", 3122339690i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontVariation), "FontVariation", "set_baseline_offset", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FontVariation), "FontVariation", "get_baseline_offset", 1740695150i64),);
    
}
fn load_FramebufferCacheRD_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_FramebufferCacheRD = string_names.fetch("FramebufferCacheRD");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_FramebufferCacheRD), "FramebufferCacheRD", "get_cache_multipass", 3437881813i64),);
    
}
fn load_GDExtensionManager_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GDExtensionManager = string_names.fetch("GDExtensionManager");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GDExtensionManager), "GDExtensionManager", "load_extension", 4024158731i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GDExtensionManager), "GDExtensionManager", "reload_extension", 4024158731i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GDExtensionManager), "GDExtensionManager", "unload_extension", 4024158731i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GDExtensionManager), "GDExtensionManager", "is_extension_loaded", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GDExtensionManager), "GDExtensionManager", "get_loaded_extensions", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GDExtensionManager), "GDExtensionManager", "get_extension", 49743343i64),);
    
}
fn load_GDScript_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GDScript = string_names.fetch("GDScript");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GDScript), "GDScript", "new", 1545262638i64),);
    
}
fn load_GLTFAccessor_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GLTFAccessor = string_names.fetch("GLTFAccessor");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "get_buffer_view", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "set_buffer_view", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "get_byte_offset", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "set_byte_offset", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "get_component_type", 852227802i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "set_component_type", 1780020221i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "get_normalized", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "set_normalized", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "get_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "set_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "get_accessor_type", 1998183368i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "set_accessor_type", 2347728198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "get_type", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "set_type", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "get_min", 547233126i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "set_min", 2576592201i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "get_max", 547233126i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "set_max", 2576592201i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "get_sparse_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "set_sparse_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "get_sparse_indices_buffer_view", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "set_sparse_indices_buffer_view", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "get_sparse_indices_byte_offset", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "set_sparse_indices_byte_offset", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "get_sparse_indices_component_type", 852227802i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "set_sparse_indices_component_type", 1780020221i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "get_sparse_values_buffer_view", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "set_sparse_values_buffer_view", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "get_sparse_values_byte_offset", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAccessor), "GLTFAccessor", "set_sparse_values_byte_offset", 1286410249i64),);
    
}
fn load_GLTFAnimation_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GLTFAnimation = string_names.fetch("GLTFAnimation");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAnimation), "GLTFAnimation", "get_original_name", 2841200299i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAnimation), "GLTFAnimation", "set_original_name", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAnimation), "GLTFAnimation", "get_loop", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAnimation), "GLTFAnimation", "set_loop", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAnimation), "GLTFAnimation", "get_additional_data", 2138907829i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFAnimation), "GLTFAnimation", "set_additional_data", 3776071444i64),);
    
}
fn load_GLTFBufferView_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GLTFBufferView = string_names.fetch("GLTFBufferView");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFBufferView), "GLTFBufferView", "load_buffer_view_data", 3945446907i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFBufferView), "GLTFBufferView", "get_buffer", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFBufferView), "GLTFBufferView", "set_buffer", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFBufferView), "GLTFBufferView", "get_byte_offset", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFBufferView), "GLTFBufferView", "set_byte_offset", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFBufferView), "GLTFBufferView", "get_byte_length", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFBufferView), "GLTFBufferView", "set_byte_length", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFBufferView), "GLTFBufferView", "get_byte_stride", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFBufferView), "GLTFBufferView", "set_byte_stride", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFBufferView), "GLTFBufferView", "get_indices", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFBufferView), "GLTFBufferView", "set_indices", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFBufferView), "GLTFBufferView", "get_vertex_attributes", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFBufferView), "GLTFBufferView", "set_vertex_attributes", 2586408642i64),);
    
}
fn load_GLTFCamera_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GLTFCamera = string_names.fetch("GLTFCamera");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFCamera), "GLTFCamera", "from_node", 237784i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFCamera), "GLTFCamera", "to_node", 2285090890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFCamera), "GLTFCamera", "from_dictionary", 2495512509i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFCamera), "GLTFCamera", "to_dictionary", 3102165223i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFCamera), "GLTFCamera", "get_perspective", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFCamera), "GLTFCamera", "set_perspective", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFCamera), "GLTFCamera", "get_fov", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFCamera), "GLTFCamera", "set_fov", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFCamera), "GLTFCamera", "get_size_mag", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFCamera), "GLTFCamera", "set_size_mag", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFCamera), "GLTFCamera", "get_depth_far", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFCamera), "GLTFCamera", "set_depth_far", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFCamera), "GLTFCamera", "get_depth_near", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFCamera), "GLTFCamera", "set_depth_near", 373806689i64),);
    
}
fn load_GLTFDocument_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GLTFDocument = string_names.fetch("GLTFDocument");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "set_image_format", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "get_image_format", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "set_lossy_quality", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "get_lossy_quality", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "set_fallback_image_format", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "get_fallback_image_format", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "set_fallback_image_quality", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "get_fallback_image_quality", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "set_root_node_mode", 463633402i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "get_root_node_mode", 948057992i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "set_visibility_mode", 2803579218i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "get_visibility_mode", 3885445962i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "append_from_file", 866380864i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "append_from_buffer", 1616081266i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "append_from_scene", 1622574258i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "generate_scene", 596118388i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "generate_buffer", 741783455i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "write_to_filesystem", 1784551478i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "import_object_model_property", 1206708632i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "export_object_model_property", 314209806i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "register_gltf_document_extension", 3752678331i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "unregister_gltf_document_extension", 2684415758i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFDocument), "GLTFDocument", "get_supported_gltf_extensions", 2981934095i64),);
    
}
fn load_GLTFLight_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GLTFLight = string_names.fetch("GLTFLight");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFLight), "GLTFLight", "from_node", 3907677874i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFLight), "GLTFLight", "to_node", 2040811672i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFLight), "GLTFLight", "from_dictionary", 4057087208i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFLight), "GLTFLight", "to_dictionary", 3102165223i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFLight), "GLTFLight", "get_color", 3200896285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFLight), "GLTFLight", "set_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFLight), "GLTFLight", "get_intensity", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFLight), "GLTFLight", "set_intensity", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFLight), "GLTFLight", "get_light_type", 2841200299i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFLight), "GLTFLight", "set_light_type", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFLight), "GLTFLight", "get_range", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFLight), "GLTFLight", "set_range", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFLight), "GLTFLight", "get_inner_cone_angle", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFLight), "GLTFLight", "set_inner_cone_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFLight), "GLTFLight", "get_outer_cone_angle", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFLight), "GLTFLight", "set_outer_cone_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFLight), "GLTFLight", "get_additional_data", 2138907829i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFLight), "GLTFLight", "set_additional_data", 3776071444i64),);
    
}
fn load_GLTFMesh_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GLTFMesh = string_names.fetch("GLTFMesh");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFMesh), "GLTFMesh", "get_original_name", 2841200299i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFMesh), "GLTFMesh", "set_original_name", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFMesh), "GLTFMesh", "get_mesh", 3754628756i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFMesh), "GLTFMesh", "set_mesh", 2255166972i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFMesh), "GLTFMesh", "get_blend_weights", 2445143706i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFMesh), "GLTFMesh", "set_blend_weights", 2899603908i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFMesh), "GLTFMesh", "get_instance_materials", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFMesh), "GLTFMesh", "set_instance_materials", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFMesh), "GLTFMesh", "get_additional_data", 2138907829i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFMesh), "GLTFMesh", "set_additional_data", 3776071444i64),);
    
}
fn load_GLTFNode_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GLTFNode = string_names.fetch("GLTFNode");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "get_original_name", 2841200299i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "set_original_name", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "get_parent", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "set_parent", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "get_height", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "set_height", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "get_xform", 4183770049i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "set_xform", 2952846383i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "get_mesh", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "set_mesh", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "get_camera", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "set_camera", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "get_skin", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "set_skin", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "get_skeleton", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "set_skeleton", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "get_position", 3783033775i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "set_position", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "get_rotation", 2916281908i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "set_rotation", 1727505552i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "get_scale", 3783033775i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "set_scale", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "get_children", 969006518i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "set_children", 3614634198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "append_child_index", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "get_light", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "set_light", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "get_visible", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "set_visible", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "get_additional_data", 2138907829i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "set_additional_data", 3776071444i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFNode), "GLTFNode", "get_scene_node_path", 573359477i64),);
    
}
fn load_GLTFObjectModelProperty_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GLTFObjectModelProperty = string_names.fetch("GLTFObjectModelProperty");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFObjectModelProperty), "GLTFObjectModelProperty", "append_node_path", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFObjectModelProperty), "GLTFObjectModelProperty", "append_path_to_property", 1331931644i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFObjectModelProperty), "GLTFObjectModelProperty", "get_accessor_type", 1998183368i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFObjectModelProperty), "GLTFObjectModelProperty", "get_gltf_to_godot_expression", 2240072449i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFObjectModelProperty), "GLTFObjectModelProperty", "set_gltf_to_godot_expression", 1815845073i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFObjectModelProperty), "GLTFObjectModelProperty", "get_godot_to_gltf_expression", 2240072449i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFObjectModelProperty), "GLTFObjectModelProperty", "set_godot_to_gltf_expression", 1815845073i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFObjectModelProperty), "GLTFObjectModelProperty", "get_node_paths", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFObjectModelProperty), "GLTFObjectModelProperty", "has_node_paths", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFObjectModelProperty), "GLTFObjectModelProperty", "set_node_paths", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFObjectModelProperty), "GLTFObjectModelProperty", "get_object_model_type", 1094778507i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFObjectModelProperty), "GLTFObjectModelProperty", "set_object_model_type", 4108684086i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFObjectModelProperty), "GLTFObjectModelProperty", "get_json_pointers", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFObjectModelProperty), "GLTFObjectModelProperty", "has_json_pointers", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFObjectModelProperty), "GLTFObjectModelProperty", "set_json_pointers", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFObjectModelProperty), "GLTFObjectModelProperty", "get_variant_type", 3416842102i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFObjectModelProperty), "GLTFObjectModelProperty", "set_variant_type", 2887708385i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFObjectModelProperty), "GLTFObjectModelProperty", "set_types", 4150728237i64),);
    
}
fn load_GLTFPhysicsBody_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GLTFPhysicsBody = string_names.fetch("GLTFPhysicsBody");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsBody), "GLTFPhysicsBody", "from_node", 420544174i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsBody), "GLTFPhysicsBody", "to_node", 3224013656i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsBody), "GLTFPhysicsBody", "from_dictionary", 1177544336i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsBody), "GLTFPhysicsBody", "to_dictionary", 3102165223i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsBody), "GLTFPhysicsBody", "get_body_type", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsBody), "GLTFPhysicsBody", "set_body_type", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsBody), "GLTFPhysicsBody", "get_mass", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsBody), "GLTFPhysicsBody", "set_mass", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsBody), "GLTFPhysicsBody", "get_linear_velocity", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsBody), "GLTFPhysicsBody", "set_linear_velocity", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsBody), "GLTFPhysicsBody", "get_angular_velocity", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsBody), "GLTFPhysicsBody", "set_angular_velocity", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsBody), "GLTFPhysicsBody", "get_center_of_mass", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsBody), "GLTFPhysicsBody", "set_center_of_mass", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsBody), "GLTFPhysicsBody", "get_inertia_diagonal", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsBody), "GLTFPhysicsBody", "set_inertia_diagonal", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsBody), "GLTFPhysicsBody", "get_inertia_orientation", 1222331677i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsBody), "GLTFPhysicsBody", "set_inertia_orientation", 1727505552i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsBody), "GLTFPhysicsBody", "get_inertia_tensor", 2716978435i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsBody), "GLTFPhysicsBody", "set_inertia_tensor", 1055510324i64),);
    
}
fn load_GLTFPhysicsShape_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GLTFPhysicsShape = string_names.fetch("GLTFPhysicsShape");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsShape), "GLTFPhysicsShape", "from_node", 3613751275i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsShape), "GLTFPhysicsShape", "to_node", 563689933i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsShape), "GLTFPhysicsShape", "from_resource", 3845569786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsShape), "GLTFPhysicsShape", "to_resource", 1913542110i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsShape), "GLTFPhysicsShape", "from_dictionary", 2390691823i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsShape), "GLTFPhysicsShape", "to_dictionary", 3102165223i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsShape), "GLTFPhysicsShape", "get_shape_type", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsShape), "GLTFPhysicsShape", "set_shape_type", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsShape), "GLTFPhysicsShape", "get_size", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsShape), "GLTFPhysicsShape", "set_size", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsShape), "GLTFPhysicsShape", "get_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsShape), "GLTFPhysicsShape", "set_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsShape), "GLTFPhysicsShape", "get_height", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsShape), "GLTFPhysicsShape", "set_height", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsShape), "GLTFPhysicsShape", "get_is_trigger", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsShape), "GLTFPhysicsShape", "set_is_trigger", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsShape), "GLTFPhysicsShape", "get_mesh_index", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsShape), "GLTFPhysicsShape", "set_mesh_index", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsShape), "GLTFPhysicsShape", "get_importer_mesh", 3161779525i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFPhysicsShape), "GLTFPhysicsShape", "set_importer_mesh", 2255166972i64),);
    
}
fn load_GLTFSkeleton_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GLTFSkeleton = string_names.fetch("GLTFSkeleton");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkeleton), "GLTFSkeleton", "get_joints", 969006518i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkeleton), "GLTFSkeleton", "set_joints", 3614634198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkeleton), "GLTFSkeleton", "get_roots", 969006518i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkeleton), "GLTFSkeleton", "set_roots", 3614634198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkeleton), "GLTFSkeleton", "get_godot_skeleton", 1814733083i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkeleton), "GLTFSkeleton", "get_unique_names", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkeleton), "GLTFSkeleton", "set_unique_names", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkeleton), "GLTFSkeleton", "get_godot_bone_node", 2382534195i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkeleton), "GLTFSkeleton", "set_godot_bone_node", 4155329257i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkeleton), "GLTFSkeleton", "get_bone_attachment_count", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkeleton), "GLTFSkeleton", "get_bone_attachment", 945440495i64),);
    
}
fn load_GLTFSkin_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GLTFSkin = string_names.fetch("GLTFSkin");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkin), "GLTFSkin", "get_skin_root", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkin), "GLTFSkin", "set_skin_root", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkin), "GLTFSkin", "get_joints_original", 969006518i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkin), "GLTFSkin", "set_joints_original", 3614634198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkin), "GLTFSkin", "get_inverse_binds", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkin), "GLTFSkin", "set_inverse_binds", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkin), "GLTFSkin", "get_joints", 969006518i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkin), "GLTFSkin", "set_joints", 3614634198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkin), "GLTFSkin", "get_non_joints", 969006518i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkin), "GLTFSkin", "set_non_joints", 3614634198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkin), "GLTFSkin", "get_roots", 969006518i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkin), "GLTFSkin", "set_roots", 3614634198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkin), "GLTFSkin", "get_skeleton", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkin), "GLTFSkin", "set_skeleton", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkin), "GLTFSkin", "get_joint_i_to_bone_i", 2382534195i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkin), "GLTFSkin", "set_joint_i_to_bone_i", 4155329257i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkin), "GLTFSkin", "get_joint_i_to_name", 2382534195i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkin), "GLTFSkin", "set_joint_i_to_name", 4155329257i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkin), "GLTFSkin", "get_godot_skin", 1032037385i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSkin), "GLTFSkin", "set_godot_skin", 3971435618i64),);
    
}
fn load_GLTFSpecGloss_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GLTFSpecGloss = string_names.fetch("GLTFSpecGloss");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSpecGloss), "GLTFSpecGloss", "get_diffuse_img", 564927088i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSpecGloss), "GLTFSpecGloss", "set_diffuse_img", 532598488i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSpecGloss), "GLTFSpecGloss", "get_diffuse_factor", 3200896285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSpecGloss), "GLTFSpecGloss", "set_diffuse_factor", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSpecGloss), "GLTFSpecGloss", "get_gloss_factor", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSpecGloss), "GLTFSpecGloss", "set_gloss_factor", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSpecGloss), "GLTFSpecGloss", "get_specular_factor", 3200896285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSpecGloss), "GLTFSpecGloss", "set_specular_factor", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSpecGloss), "GLTFSpecGloss", "get_spec_gloss_img", 564927088i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFSpecGloss), "GLTFSpecGloss", "set_spec_gloss_img", 532598488i64),);
    
}
fn load_GLTFState_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GLTFState = string_names.fetch("GLTFState");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "add_used_extension", 2678287736i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "append_data_to_buffers", 1460416665i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "append_gltf_node", 3562288551i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_json", 2382534195i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_json", 4155329257i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_major_version", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_major_version", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_minor_version", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_minor_version", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_copyright", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_copyright", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_glb_data", 2115431945i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_glb_data", 2971499966i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_use_named_skin_binds", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_use_named_skin_binds", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_nodes", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_nodes", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_buffers", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_buffers", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_buffer_views", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_buffer_views", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_accessors", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_accessors", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_meshes", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_meshes", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_animation_players_count", 3744713108i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_animation_player", 925043400i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_materials", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_materials", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_scene_name", 2841200299i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_scene_name", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_base_path", 2841200299i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_base_path", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_filename", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_filename", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_root_nodes", 969006518i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_root_nodes", 3614634198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_textures", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_textures", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_texture_samplers", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_texture_samplers", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_images", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_images", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_skins", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_skins", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_cameras", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_cameras", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_lights", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_lights", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_unique_names", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_unique_names", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_unique_animation_names", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_unique_animation_names", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_skeletons", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_skeletons", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_create_animations", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_create_animations", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_import_as_skeleton_bones", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_import_as_skeleton_bones", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_animations", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_animations", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_scene_node", 4253421667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_node_index", 1205807060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_additional_data", 2138907829i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_additional_data", 3776071444i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_handle_binary_image", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_handle_binary_image", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "set_bake_fps", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFState), "GLTFState", "get_bake_fps", 1740695150i64),);
    
}
fn load_GLTFTexture_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GLTFTexture = string_names.fetch("GLTFTexture");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFTexture), "GLTFTexture", "get_src_image", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFTexture), "GLTFTexture", "set_src_image", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFTexture), "GLTFTexture", "get_sampler", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFTexture), "GLTFTexture", "set_sampler", 1286410249i64),);
    
}
fn load_GLTFTextureSampler_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GLTFTextureSampler = string_names.fetch("GLTFTextureSampler");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFTextureSampler), "GLTFTextureSampler", "get_mag_filter", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFTextureSampler), "GLTFTextureSampler", "set_mag_filter", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFTextureSampler), "GLTFTextureSampler", "get_min_filter", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFTextureSampler), "GLTFTextureSampler", "set_min_filter", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFTextureSampler), "GLTFTextureSampler", "get_wrap_s", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFTextureSampler), "GLTFTextureSampler", "set_wrap_s", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFTextureSampler), "GLTFTextureSampler", "get_wrap_t", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GLTFTextureSampler), "GLTFTextureSampler", "set_wrap_t", 1286410249i64),);
    
}
fn load_GPUParticles2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GPUParticles2D = string_names.fetch("GPUParticles2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_emitting", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_amount", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_lifetime", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_one_shot", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_pre_process_time", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_explosiveness_ratio", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_randomness_ratio", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_visibility_rect", 2046264180i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_use_local_coordinates", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_fixed_fps", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_fractional_delta", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_interpolate", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_process_material", 2757459619i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_speed_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_collision_base_size", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_interp_to_end", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "request_particles_process", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "is_emitting", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_amount", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_lifetime", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_one_shot", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_pre_process_time", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_explosiveness_ratio", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_randomness_ratio", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_visibility_rect", 1639390495i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_use_local_coordinates", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_fixed_fps", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_fractional_delta", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_interpolate", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_process_material", 5934680i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_speed_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_collision_base_size", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_interp_to_end", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_draw_order", 1939677959i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_draw_order", 941479095i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_texture", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "capture_rect", 1639390495i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "restart", 107499316i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_sub_emitter", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_sub_emitter", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "emit_particle", 2179202058i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_trail_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_trail_lifetime", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "is_trail_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_trail_lifetime", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_trail_sections", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_trail_sections", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_trail_section_subdivisions", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_trail_section_subdivisions", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "convert_from_particles", 1078189570i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_amount_ratio", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_amount_ratio", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_use_fixed_seed", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_use_fixed_seed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "set_seed", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles2D), "GPUParticles2D", "get_seed", 3905245786i64),);
    
}
fn load_GPUParticles3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GPUParticles3D = string_names.fetch("GPUParticles3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_emitting", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_amount", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_lifetime", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_one_shot", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_pre_process_time", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_explosiveness_ratio", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_randomness_ratio", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_visibility_aabb", 259215842i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_use_local_coordinates", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_fixed_fps", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_fractional_delta", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_interpolate", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_process_material", 2757459619i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_speed_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_collision_base_size", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_interp_to_end", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "is_emitting", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_amount", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_lifetime", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_one_shot", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_pre_process_time", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_explosiveness_ratio", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_randomness_ratio", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_visibility_aabb", 1068685055i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_use_local_coordinates", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_fixed_fps", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_fractional_delta", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_interpolate", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_process_material", 5934680i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_speed_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_collision_base_size", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_interp_to_end", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_use_fixed_seed", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_use_fixed_seed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_seed", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_seed", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_draw_order", 1208074815i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_draw_order", 3770381780i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_draw_passes", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_draw_pass_mesh", 969122797i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_draw_passes", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_draw_pass_mesh", 1576363275i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_skin", 3971435618i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_skin", 2074563878i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "restart", 107499316i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "capture_aabb", 1068685055i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_sub_emitter", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_sub_emitter", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "emit_particle", 992173727i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_trail_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_trail_lifetime", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "is_trail_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_trail_lifetime", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_transform_align", 3892425954i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_transform_align", 2100992166i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "convert_from_particles", 1078189570i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "set_amount_ratio", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "get_amount_ratio", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticles3D), "GPUParticles3D", "request_particles_process", 373806689i64),);
    
}
fn load_GPUParticlesAttractor3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GPUParticlesAttractor3D = string_names.fetch("GPUParticlesAttractor3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesAttractor3D), "GPUParticlesAttractor3D", "set_cull_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesAttractor3D), "GPUParticlesAttractor3D", "get_cull_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesAttractor3D), "GPUParticlesAttractor3D", "set_strength", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesAttractor3D), "GPUParticlesAttractor3D", "get_strength", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesAttractor3D), "GPUParticlesAttractor3D", "set_attenuation", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesAttractor3D), "GPUParticlesAttractor3D", "get_attenuation", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesAttractor3D), "GPUParticlesAttractor3D", "set_directionality", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesAttractor3D), "GPUParticlesAttractor3D", "get_directionality", 1740695150i64),);
    
}
fn load_GPUParticlesAttractorBox3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GPUParticlesAttractorBox3D = string_names.fetch("GPUParticlesAttractorBox3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesAttractorBox3D), "GPUParticlesAttractorBox3D", "set_size", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesAttractorBox3D), "GPUParticlesAttractorBox3D", "get_size", 3360562783i64),);
    
}
fn load_GPUParticlesAttractorSphere3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GPUParticlesAttractorSphere3D = string_names.fetch("GPUParticlesAttractorSphere3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesAttractorSphere3D), "GPUParticlesAttractorSphere3D", "set_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesAttractorSphere3D), "GPUParticlesAttractorSphere3D", "get_radius", 1740695150i64),);
    
}
fn load_GPUParticlesAttractorVectorField3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GPUParticlesAttractorVectorField3D = string_names.fetch("GPUParticlesAttractorVectorField3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesAttractorVectorField3D), "GPUParticlesAttractorVectorField3D", "set_size", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesAttractorVectorField3D), "GPUParticlesAttractorVectorField3D", "get_size", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesAttractorVectorField3D), "GPUParticlesAttractorVectorField3D", "set_texture", 1188404210i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesAttractorVectorField3D), "GPUParticlesAttractorVectorField3D", "get_texture", 373985333i64),);
    
}
fn load_GPUParticlesCollision3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GPUParticlesCollision3D = string_names.fetch("GPUParticlesCollision3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollision3D), "GPUParticlesCollision3D", "set_cull_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollision3D), "GPUParticlesCollision3D", "get_cull_mask", 3905245786i64),);
    
}
fn load_GPUParticlesCollisionBox3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GPUParticlesCollisionBox3D = string_names.fetch("GPUParticlesCollisionBox3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionBox3D), "GPUParticlesCollisionBox3D", "set_size", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionBox3D), "GPUParticlesCollisionBox3D", "get_size", 3360562783i64),);
    
}
fn load_GPUParticlesCollisionHeightField3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GPUParticlesCollisionHeightField3D = string_names.fetch("GPUParticlesCollisionHeightField3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionHeightField3D), "GPUParticlesCollisionHeightField3D", "set_size", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionHeightField3D), "GPUParticlesCollisionHeightField3D", "get_size", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionHeightField3D), "GPUParticlesCollisionHeightField3D", "set_resolution", 1009996517i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionHeightField3D), "GPUParticlesCollisionHeightField3D", "get_resolution", 1156065644i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionHeightField3D), "GPUParticlesCollisionHeightField3D", "set_update_mode", 673680859i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionHeightField3D), "GPUParticlesCollisionHeightField3D", "get_update_mode", 1998141380i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionHeightField3D), "GPUParticlesCollisionHeightField3D", "set_heightfield_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionHeightField3D), "GPUParticlesCollisionHeightField3D", "get_heightfield_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionHeightField3D), "GPUParticlesCollisionHeightField3D", "set_heightfield_mask_value", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionHeightField3D), "GPUParticlesCollisionHeightField3D", "get_heightfield_mask_value", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionHeightField3D), "GPUParticlesCollisionHeightField3D", "set_follow_camera_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionHeightField3D), "GPUParticlesCollisionHeightField3D", "is_follow_camera_enabled", 36873697i64),);
    
}
fn load_GPUParticlesCollisionSDF3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GPUParticlesCollisionSDF3D = string_names.fetch("GPUParticlesCollisionSDF3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionSDF3D), "GPUParticlesCollisionSDF3D", "set_size", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionSDF3D), "GPUParticlesCollisionSDF3D", "get_size", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionSDF3D), "GPUParticlesCollisionSDF3D", "set_resolution", 1155629297i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionSDF3D), "GPUParticlesCollisionSDF3D", "get_resolution", 2919555867i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionSDF3D), "GPUParticlesCollisionSDF3D", "set_texture", 1188404210i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionSDF3D), "GPUParticlesCollisionSDF3D", "get_texture", 373985333i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionSDF3D), "GPUParticlesCollisionSDF3D", "set_thickness", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionSDF3D), "GPUParticlesCollisionSDF3D", "get_thickness", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionSDF3D), "GPUParticlesCollisionSDF3D", "set_bake_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionSDF3D), "GPUParticlesCollisionSDF3D", "get_bake_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionSDF3D), "GPUParticlesCollisionSDF3D", "set_bake_mask_value", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionSDF3D), "GPUParticlesCollisionSDF3D", "get_bake_mask_value", 1116898809i64),);
    
}
fn load_GPUParticlesCollisionSphere3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GPUParticlesCollisionSphere3D = string_names.fetch("GPUParticlesCollisionSphere3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionSphere3D), "GPUParticlesCollisionSphere3D", "set_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GPUParticlesCollisionSphere3D), "GPUParticlesCollisionSphere3D", "get_radius", 1740695150i64),);
    
}
fn load_Generic6DOFJoint3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Generic6DOFJoint3D = string_names.fetch("Generic6DOFJoint3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Generic6DOFJoint3D), "Generic6DOFJoint3D", "set_param_x", 2018184242i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Generic6DOFJoint3D), "Generic6DOFJoint3D", "get_param_x", 2599835054i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Generic6DOFJoint3D), "Generic6DOFJoint3D", "set_param_y", 2018184242i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Generic6DOFJoint3D), "Generic6DOFJoint3D", "get_param_y", 2599835054i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Generic6DOFJoint3D), "Generic6DOFJoint3D", "set_param_z", 2018184242i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Generic6DOFJoint3D), "Generic6DOFJoint3D", "get_param_z", 2599835054i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Generic6DOFJoint3D), "Generic6DOFJoint3D", "set_flag_x", 2451594564i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Generic6DOFJoint3D), "Generic6DOFJoint3D", "get_flag_x", 2122427807i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Generic6DOFJoint3D), "Generic6DOFJoint3D", "set_flag_y", 2451594564i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Generic6DOFJoint3D), "Generic6DOFJoint3D", "get_flag_y", 2122427807i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Generic6DOFJoint3D), "Generic6DOFJoint3D", "set_flag_z", 2451594564i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Generic6DOFJoint3D), "Generic6DOFJoint3D", "get_flag_z", 2122427807i64),);
    
}
fn load_Geometry2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Geometry2D = string_names.fetch("Geometry2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "is_point_in_circle", 2929491703i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "segment_intersects_circle", 1356928167i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "segment_intersects_segment", 2058025344i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "line_intersects_line", 2058025344i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "get_closest_points_between_segments", 3344690961i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "get_closest_point_to_segment", 4172901909i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "get_closest_point_to_segment_uncapped", 4172901909i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "point_is_inside_triangle", 1025948137i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "is_polygon_clockwise", 1361156557i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "is_point_in_polygon", 738277916i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "triangulate_polygon", 1389921771i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "triangulate_delaunay", 1389921771i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "convex_hull", 2004331998i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "decompose_polygon_in_convex", 3982393695i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "merge_polygons", 3637387053i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "clip_polygons", 3637387053i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "intersect_polygons", 3637387053i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "exclude_polygons", 3637387053i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "clip_polyline_with_polygon", 3637387053i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "intersect_polyline_with_polygon", 3637387053i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "offset_polygon", 1275354010i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "offset_polyline", 2328231778i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "make_atlas", 1337682371i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry2D), "Geometry2D", "bresenham_line", 1989391000i64),);
    
}
fn load_Geometry3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Geometry3D = string_names.fetch("Geometry3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry3D), "Geometry3D", "compute_convex_mesh_points", 1936902142i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry3D), "Geometry3D", "build_box_planes", 3622277145i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry3D), "Geometry3D", "build_cylinder_planes", 449920067i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry3D), "Geometry3D", "build_capsule_planes", 2113592876i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry3D), "Geometry3D", "get_closest_points_between_segments", 1056373962i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry3D), "Geometry3D", "get_closest_point_to_segment", 2168193209i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry3D), "Geometry3D", "get_closest_point_to_segment_uncapped", 2168193209i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry3D), "Geometry3D", "get_triangle_barycentric_coords", 1362048029i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry3D), "Geometry3D", "ray_intersects_triangle", 1718655448i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry3D), "Geometry3D", "segment_intersects_triangle", 1718655448i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry3D), "Geometry3D", "segment_intersects_sphere", 4080141172i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry3D), "Geometry3D", "segment_intersects_cylinder", 2361316491i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry3D), "Geometry3D", "segment_intersects_convex", 537425332i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry3D), "Geometry3D", "clip_polygon", 2603188319i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Geometry3D), "Geometry3D", "tetrahedralize_delaunay", 1230191221i64),);
    
}
fn load_GeometryInstance3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GeometryInstance3D = string_names.fetch("GeometryInstance3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "set_material_override", 2757459619i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "get_material_override", 5934680i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "set_material_overlay", 2757459619i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "get_material_overlay", 5934680i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "set_cast_shadows_setting", 856677339i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "get_cast_shadows_setting", 3383019359i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "set_lod_bias", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "get_lod_bias", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "set_transparency", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "get_transparency", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "set_visibility_range_end_margin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "get_visibility_range_end_margin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "set_visibility_range_end", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "get_visibility_range_end", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "set_visibility_range_begin_margin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "get_visibility_range_begin_margin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "set_visibility_range_begin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "get_visibility_range_begin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "set_visibility_range_fade_mode", 1440117808i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "get_visibility_range_fade_mode", 2067221882i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "set_instance_shader_parameter", 3776071444i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "get_instance_shader_parameter", 2760726917i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "set_extra_cull_margin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "get_extra_cull_margin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "set_lightmap_texel_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "get_lightmap_texel_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "set_lightmap_scale", 2462696582i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "get_lightmap_scale", 798767852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "set_gi_mode", 2548557163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "get_gi_mode", 2188566509i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "set_ignore_occlusion_culling", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "is_ignoring_occlusion_culling", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "set_custom_aabb", 259215842i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GeometryInstance3D), "GeometryInstance3D", "get_custom_aabb", 1068685055i64),);
    
}
fn load_Gradient_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Gradient = string_names.fetch("Gradient");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Gradient), "Gradient", "add_point", 3629403827i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Gradient), "Gradient", "remove_point", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Gradient), "Gradient", "set_offset", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Gradient), "Gradient", "get_offset", 4025615559i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Gradient), "Gradient", "reverse", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Gradient), "Gradient", "set_color", 2878471219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Gradient), "Gradient", "get_color", 2624840992i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Gradient), "Gradient", "sample", 1250405064i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Gradient), "Gradient", "get_point_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Gradient), "Gradient", "set_offsets", 2899603908i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Gradient), "Gradient", "get_offsets", 675695659i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Gradient), "Gradient", "set_colors", 3546319833i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Gradient), "Gradient", "get_colors", 1392750486i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Gradient), "Gradient", "set_interpolation_mode", 1971444490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Gradient), "Gradient", "get_interpolation_mode", 3674172981i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Gradient), "Gradient", "set_interpolation_color_space", 3685995981i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Gradient), "Gradient", "get_interpolation_color_space", 1538296000i64),);
    
}
fn load_GradientTexture1D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GradientTexture1D = string_names.fetch("GradientTexture1D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GradientTexture1D), "GradientTexture1D", "set_gradient", 2756054477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GradientTexture1D), "GradientTexture1D", "get_gradient", 132272999i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GradientTexture1D), "GradientTexture1D", "set_width", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GradientTexture1D), "GradientTexture1D", "set_use_hdr", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GradientTexture1D), "GradientTexture1D", "is_using_hdr", 36873697i64),);
    
}
fn load_GradientTexture2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GradientTexture2D = string_names.fetch("GradientTexture2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GradientTexture2D), "GradientTexture2D", "set_gradient", 2756054477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GradientTexture2D), "GradientTexture2D", "get_gradient", 132272999i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GradientTexture2D), "GradientTexture2D", "set_width", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GradientTexture2D), "GradientTexture2D", "set_height", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GradientTexture2D), "GradientTexture2D", "set_use_hdr", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GradientTexture2D), "GradientTexture2D", "is_using_hdr", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GradientTexture2D), "GradientTexture2D", "set_fill", 3623927636i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GradientTexture2D), "GradientTexture2D", "get_fill", 1876227217i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GradientTexture2D), "GradientTexture2D", "set_fill_from", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GradientTexture2D), "GradientTexture2D", "get_fill_from", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GradientTexture2D), "GradientTexture2D", "set_fill_to", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GradientTexture2D), "GradientTexture2D", "get_fill_to", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GradientTexture2D), "GradientTexture2D", "set_repeat", 1357597002i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GradientTexture2D), "GradientTexture2D", "get_repeat", 3351758665i64),);
    
}
fn load_GridContainer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GridContainer = string_names.fetch("GridContainer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridContainer), "GridContainer", "set_columns", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridContainer), "GridContainer", "get_columns", 3905245786i64),);
    
}
fn load_GridMap_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GridMap = string_names.fetch("GridMap");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "set_collision_layer", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_collision_layer", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "set_collision_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_collision_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "set_collision_mask_value", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_collision_mask_value", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "set_collision_layer_value", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_collision_layer_value", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "set_collision_priority", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_collision_priority", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "set_physics_material", 1784508650i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_physics_material", 2521850424i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "set_bake_navigation", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "is_baking_navigation", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "set_navigation_map", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_navigation_map", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "set_mesh_library", 1488083439i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_mesh_library", 3350993772i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "set_cell_size", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_cell_size", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "set_cell_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_cell_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "set_octant_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_octant_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "set_cell_item", 3449088946i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_cell_item", 3724960147i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_cell_item_orientation", 3724960147i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_cell_item_basis", 3493604918i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_basis_with_orthogonal_index", 2816196998i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_orthogonal_index_from_basis", 4210359952i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "local_to_map", 1257687843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "map_to_local", 1088329196i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "resource_changed", 968641751i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "set_center_x", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_center_x", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "set_center_y", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_center_y", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "set_center_z", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_center_z", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_used_cells", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_used_cells_by_item", 663333327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_meshes", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_bake_meshes", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "get_bake_mesh_instance", 937000113i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "clear_baked_meshes", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GridMap), "GridMap", "make_baked_meshes", 3609286057i64),);
    
}
fn load_GrooveJoint2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_GrooveJoint2D = string_names.fetch("GrooveJoint2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GrooveJoint2D), "GrooveJoint2D", "set_length", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GrooveJoint2D), "GrooveJoint2D", "get_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GrooveJoint2D), "GrooveJoint2D", "set_initial_offset", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_GrooveJoint2D), "GrooveJoint2D", "get_initial_offset", 1740695150i64),);
    
}
fn load_HMACContext_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_HMACContext = string_names.fetch("HMACContext");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HMACContext), "HMACContext", "start", 3537364598i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HMACContext), "HMACContext", "update", 680677267i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HMACContext), "HMACContext", "finish", 2115431945i64),);
    
}
fn load_HTTPClient_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_HTTPClient = string_names.fetch("HTTPClient");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPClient), "HTTPClient", "connect_to_host", 504540374i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPClient), "HTTPClient", "set_connection", 3281897016i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPClient), "HTTPClient", "get_connection", 2741655269i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPClient), "HTTPClient", "request_raw", 540161961i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPClient), "HTTPClient", "request", 3778990155i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPClient), "HTTPClient", "close", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPClient), "HTTPClient", "has_response", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPClient), "HTTPClient", "is_response_chunked", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPClient), "HTTPClient", "get_response_code", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPClient), "HTTPClient", "get_response_headers", 2981934095i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPClient), "HTTPClient", "get_response_headers_as_dictionary", 2382534195i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPClient), "HTTPClient", "get_response_body_length", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPClient), "HTTPClient", "read_response_body_chunk", 2115431945i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPClient), "HTTPClient", "set_read_chunk_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPClient), "HTTPClient", "get_read_chunk_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPClient), "HTTPClient", "set_blocking_mode", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPClient), "HTTPClient", "is_blocking_mode_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPClient), "HTTPClient", "get_status", 1426656811i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPClient), "HTTPClient", "poll", 166280745i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPClient), "HTTPClient", "set_http_proxy", 2956805083i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPClient), "HTTPClient", "set_https_proxy", 2956805083i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPClient), "HTTPClient", "query_string_from_dict", 2538086567i64),);
    
}
fn load_HTTPRequest_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_HTTPRequest = string_names.fetch("HTTPRequest");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "request", 3215244323i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "request_raw", 2714829993i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "cancel_request", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "set_tls_options", 2210231844i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "get_http_client_status", 1426656811i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "set_use_threads", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "is_using_threads", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "set_accept_gzip", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "is_accepting_gzip", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "set_body_size_limit", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "get_body_size_limit", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "set_max_redirects", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "get_max_redirects", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "set_download_file", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "get_download_file", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "get_downloaded_bytes", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "get_body_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "set_timeout", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "get_timeout", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "set_download_chunk_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "get_download_chunk_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "set_http_proxy", 2956805083i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HTTPRequest), "HTTPRequest", "set_https_proxy", 2956805083i64),);
    
}
fn load_HashingContext_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_HashingContext = string_names.fetch("HashingContext");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HashingContext), "HashingContext", "start", 3940338335i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HashingContext), "HashingContext", "update", 680677267i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HashingContext), "HashingContext", "finish", 2115431945i64),);
    
}
fn load_HeightMapShape3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_HeightMapShape3D = string_names.fetch("HeightMapShape3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HeightMapShape3D), "HeightMapShape3D", "set_map_width", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HeightMapShape3D), "HeightMapShape3D", "get_map_width", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HeightMapShape3D), "HeightMapShape3D", "set_map_depth", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HeightMapShape3D), "HeightMapShape3D", "get_map_depth", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HeightMapShape3D), "HeightMapShape3D", "set_map_data", 2899603908i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HeightMapShape3D), "HeightMapShape3D", "get_map_data", 675695659i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HeightMapShape3D), "HeightMapShape3D", "get_min_height", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HeightMapShape3D), "HeightMapShape3D", "get_max_height", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HeightMapShape3D), "HeightMapShape3D", "update_map_data_from_image", 2636652979i64),);
    
}
fn load_HingeJoint3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_HingeJoint3D = string_names.fetch("HingeJoint3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HingeJoint3D), "HingeJoint3D", "set_param", 3082977519i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HingeJoint3D), "HingeJoint3D", "get_param", 4066002676i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HingeJoint3D), "HingeJoint3D", "set_flag", 1083494620i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_HingeJoint3D), "HingeJoint3D", "get_flag", 2841369610i64),);
    
}
fn load_IP_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_IP = string_names.fetch("IP");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_IP), "IP", "resolve_hostname", 4283295457i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_IP), "IP", "resolve_hostname_addresses", 773767525i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_IP), "IP", "resolve_hostname_queue_item", 1749894742i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_IP), "IP", "get_resolve_item_status", 3812250196i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_IP), "IP", "get_resolve_item_address", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_IP), "IP", "get_resolve_item_addresses", 663333327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_IP), "IP", "erase_resolve_item", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_IP), "IP", "get_local_addresses", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_IP), "IP", "get_local_interfaces", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_IP), "IP", "clear_cache", 3005725572i64),);
    
}
fn load_Image_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Image = string_names.fetch("Image");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "get_width", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "get_height", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "get_size", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "has_mipmaps", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "get_format", 3847873762i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "get_data", 2362200018i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "get_data_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "convert", 2120693146i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "get_mipmap_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "get_mipmap_offset", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "resize_to_po2", 4189212329i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "resize", 994498151i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "shrink_x2", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "crop", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "flip_x", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "flip_y", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "generate_mipmaps", 1633102583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "clear_mipmaps", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "create", 986942177i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "create_empty", 986942177i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "create_from_data", 299398494i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "set_data", 2740482212i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "is_empty", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "load", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "load_from_file", 736337515i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "save_png", 2113323047i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "save_png_to_buffer", 2362200018i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "save_jpg", 2800019068i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "save_jpg_to_buffer", 592235273i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "save_exr", 3108122999i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "save_exr_to_buffer", 3178917920i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "save_dds", 2113323047i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "save_dds_to_buffer", 2362200018i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "save_webp", 2781156876i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "save_webp_to_buffer", 1214628238i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "detect_alpha", 2030116505i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "is_invisible", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "detect_used_channels", 2703139984i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "compress", 2975424957i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "compress_from_channels", 4212890953i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "decompress", 166280745i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "is_compressed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "rotate_90", 1901204267i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "rotate_180", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "fix_alpha_edges", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "premultiply_alpha", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "srgb_to_linear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "linear_to_srgb", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "normal_map_to_xy", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "rgbe_to_srgb", 564927088i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "bump_map_to_normal_map", 3423495036i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "compute_image_metrics", 3080961247i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "blit_rect", 2903928755i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "blit_rect_mask", 3383581145i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "blend_rect", 2903928755i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "blend_rect_mask", 3383581145i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "fill", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "fill_rect", 514693913i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "get_used_rect", 410525958i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "get_region", 2601441065i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "copy_from", 532598488i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "get_pixelv", 1532707496i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "get_pixel", 2165839948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "set_pixelv", 287851464i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "set_pixel", 3733378741i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "adjust_bcs", 2385087082i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "load_png_from_buffer", 680677267i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "load_jpg_from_buffer", 680677267i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "load_webp_from_buffer", 680677267i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "load_tga_from_buffer", 680677267i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "load_bmp_from_buffer", 680677267i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "load_ktx_from_buffer", 680677267i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "load_dds_from_buffer", 680677267i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "load_svg_from_buffer", 311853421i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Image), "Image", "load_svg_from_string", 3254053600i64),);
    
}
fn load_ImageFormatLoaderExtension_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ImageFormatLoaderExtension = string_names.fetch("ImageFormatLoaderExtension");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImageFormatLoaderExtension), "ImageFormatLoaderExtension", "add_format_loader", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImageFormatLoaderExtension), "ImageFormatLoaderExtension", "remove_format_loader", 3218959716i64),);
    
}
fn load_ImageTexture_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ImageTexture = string_names.fetch("ImageTexture");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImageTexture), "ImageTexture", "create_from_image", 2775144163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImageTexture), "ImageTexture", "get_format", 3847873762i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImageTexture), "ImageTexture", "set_image", 532598488i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImageTexture), "ImageTexture", "update", 532598488i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImageTexture), "ImageTexture", "set_size_override", 1130785943i64),);
    
}
fn load_ImageTexture3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ImageTexture3D = string_names.fetch("ImageTexture3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImageTexture3D), "ImageTexture3D", "create", 1130379827i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImageTexture3D), "ImageTexture3D", "update", 381264803i64),);
    
}
fn load_ImageTextureLayered_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ImageTextureLayered = string_names.fetch("ImageTextureLayered");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImageTextureLayered), "ImageTextureLayered", "create_from_images", 2785773503i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImageTextureLayered), "ImageTextureLayered", "update_layer", 3331733361i64),);
    
}
fn load_ImmediateMesh_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ImmediateMesh = string_names.fetch("ImmediateMesh");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImmediateMesh), "ImmediateMesh", "surface_begin", 2794442543i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImmediateMesh), "ImmediateMesh", "surface_set_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImmediateMesh), "ImmediateMesh", "surface_set_normal", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImmediateMesh), "ImmediateMesh", "surface_set_tangent", 3505987427i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImmediateMesh), "ImmediateMesh", "surface_set_uv", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImmediateMesh), "ImmediateMesh", "surface_set_uv2", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImmediateMesh), "ImmediateMesh", "surface_add_vertex", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImmediateMesh), "ImmediateMesh", "surface_add_vertex_2d", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImmediateMesh), "ImmediateMesh", "surface_end", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImmediateMesh), "ImmediateMesh", "clear_surfaces", 3218959716i64),);
    
}
fn load_ImporterMesh_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ImporterMesh = string_names.fetch("ImporterMesh");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "add_blend_shape", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "get_blend_shape_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "get_blend_shape_name", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "set_blend_shape_mode", 227983991i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "get_blend_shape_mode", 836485024i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "add_surface", 1740448849i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "get_surface_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "get_surface_primitive_type", 3552571330i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "get_surface_name", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "get_surface_arrays", 663333327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "get_surface_blend_shape_arrays", 2345056839i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "get_surface_lod_count", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "get_surface_lod_size", 3085491603i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "get_surface_lod_indices", 1265128013i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "get_surface_material", 2897466400i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "get_surface_format", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "set_surface_name", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "set_surface_material", 3671737478i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "generate_lods", 2491878677i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "get_mesh", 1457573577i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "set_lightmap_size_hint", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMesh), "ImporterMesh", "get_lightmap_size_hint", 3690982128i64),);
    
}
fn load_ImporterMeshInstance3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ImporterMeshInstance3D = string_names.fetch("ImporterMeshInstance3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMeshInstance3D), "ImporterMeshInstance3D", "set_mesh", 2255166972i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMeshInstance3D), "ImporterMeshInstance3D", "get_mesh", 3161779525i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMeshInstance3D), "ImporterMeshInstance3D", "set_skin", 3971435618i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMeshInstance3D), "ImporterMeshInstance3D", "get_skin", 2074563878i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMeshInstance3D), "ImporterMeshInstance3D", "set_skeleton_path", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMeshInstance3D), "ImporterMeshInstance3D", "get_skeleton_path", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMeshInstance3D), "ImporterMeshInstance3D", "set_layer_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMeshInstance3D), "ImporterMeshInstance3D", "get_layer_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMeshInstance3D), "ImporterMeshInstance3D", "set_cast_shadows_setting", 856677339i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMeshInstance3D), "ImporterMeshInstance3D", "get_cast_shadows_setting", 3383019359i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMeshInstance3D), "ImporterMeshInstance3D", "set_visibility_range_end_margin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMeshInstance3D), "ImporterMeshInstance3D", "get_visibility_range_end_margin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMeshInstance3D), "ImporterMeshInstance3D", "set_visibility_range_end", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMeshInstance3D), "ImporterMeshInstance3D", "get_visibility_range_end", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMeshInstance3D), "ImporterMeshInstance3D", "set_visibility_range_begin_margin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMeshInstance3D), "ImporterMeshInstance3D", "get_visibility_range_begin_margin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMeshInstance3D), "ImporterMeshInstance3D", "set_visibility_range_begin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMeshInstance3D), "ImporterMeshInstance3D", "get_visibility_range_begin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMeshInstance3D), "ImporterMeshInstance3D", "set_visibility_range_fade_mode", 1440117808i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ImporterMeshInstance3D), "ImporterMeshInstance3D", "get_visibility_range_fade_mode", 2067221882i64),);
    
}
fn load_Input_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Input = string_names.fetch("Input");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "is_anything_pressed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "is_key_pressed", 1938909964i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "is_physical_key_pressed", 1938909964i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "is_key_label_pressed", 1938909964i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "is_mouse_button_pressed", 1821097125i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "is_joy_button_pressed", 787208542i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "is_action_pressed", 1558498928i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "is_action_just_pressed", 1558498928i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "is_action_just_released", 1558498928i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "is_action_just_pressed_by_event", 551972873i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "is_action_just_released_by_event", 551972873i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "get_action_strength", 801543509i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "get_action_raw_strength", 801543509i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "get_axis", 1958752504i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "get_vector", 2479607902i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "add_joy_mapping", 1168363258i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "remove_joy_mapping", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "is_joy_known", 3067735520i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "get_joy_axis", 4063175957i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "get_joy_name", 990163283i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "get_joy_guid", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "get_joy_info", 3485342025i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "should_ignore_device", 2522259332i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "get_connected_joypads", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "get_joy_vibration_strength", 3114997196i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "get_joy_vibration_duration", 4025615559i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "start_joy_vibration", 2576575033i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "stop_joy_vibration", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "vibrate_handheld", 544894297i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "get_gravity", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "get_accelerometer", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "get_magnetometer", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "get_gyroscope", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "set_gravity", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "set_accelerometer", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "set_magnetometer", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "set_gyroscope", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "get_last_mouse_velocity", 1497962370i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "get_last_mouse_screen_velocity", 1497962370i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "get_mouse_button_mask", 2512161324i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "set_mouse_mode", 2228490894i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "get_mouse_mode", 965286182i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "warp_mouse", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "action_press", 1713091165i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "action_release", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "set_default_cursor_shape", 2124816902i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "get_current_cursor_shape", 3455658929i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "set_custom_mouse_cursor", 703945977i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "parse_input_event", 3754044979i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "set_use_accumulated_input", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "is_using_accumulated_input", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "flush_buffered_events", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "set_emulate_mouse_from_touch", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "is_emulating_mouse_from_touch", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "set_emulate_touch_from_mouse", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Input), "Input", "is_emulating_touch_from_mouse", 36873697i64),);
    
}
fn load_InputEvent_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_InputEvent = string_names.fetch("InputEvent");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEvent), "InputEvent", "set_device", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEvent), "InputEvent", "get_device", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEvent), "InputEvent", "is_action", 1558498928i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEvent), "InputEvent", "is_action_pressed", 1631499404i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEvent), "InputEvent", "is_action_released", 1558498928i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEvent), "InputEvent", "get_action_strength", 801543509i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEvent), "InputEvent", "is_canceled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEvent), "InputEvent", "is_pressed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEvent), "InputEvent", "is_released", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEvent), "InputEvent", "is_echo", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEvent), "InputEvent", "as_text", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEvent), "InputEvent", "is_match", 1754951977i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEvent), "InputEvent", "is_action_type", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEvent), "InputEvent", "accumulate", 1062211774i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEvent), "InputEvent", "xformed_by", 1282766827i64),);
    
}
fn load_InputEventAction_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_InputEventAction = string_names.fetch("InputEventAction");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventAction), "InputEventAction", "set_action", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventAction), "InputEventAction", "get_action", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventAction), "InputEventAction", "set_pressed", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventAction), "InputEventAction", "set_strength", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventAction), "InputEventAction", "get_strength", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventAction), "InputEventAction", "set_event_index", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventAction), "InputEventAction", "get_event_index", 3905245786i64),);
    
}
fn load_InputEventFromWindow_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_InputEventFromWindow = string_names.fetch("InputEventFromWindow");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventFromWindow), "InputEventFromWindow", "set_window_id", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventFromWindow), "InputEventFromWindow", "get_window_id", 3905245786i64),);
    
}
fn load_InputEventGesture_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_InputEventGesture = string_names.fetch("InputEventGesture");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventGesture), "InputEventGesture", "set_position", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventGesture), "InputEventGesture", "get_position", 3341600327i64),);
    
}
fn load_InputEventJoypadButton_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_InputEventJoypadButton = string_names.fetch("InputEventJoypadButton");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventJoypadButton), "InputEventJoypadButton", "set_button_index", 1466368136i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventJoypadButton), "InputEventJoypadButton", "get_button_index", 595588182i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventJoypadButton), "InputEventJoypadButton", "set_pressure", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventJoypadButton), "InputEventJoypadButton", "get_pressure", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventJoypadButton), "InputEventJoypadButton", "set_pressed", 2586408642i64),);
    
}
fn load_InputEventJoypadMotion_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_InputEventJoypadMotion = string_names.fetch("InputEventJoypadMotion");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventJoypadMotion), "InputEventJoypadMotion", "set_axis", 1332685170i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventJoypadMotion), "InputEventJoypadMotion", "get_axis", 4019121683i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventJoypadMotion), "InputEventJoypadMotion", "set_axis_value", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventJoypadMotion), "InputEventJoypadMotion", "get_axis_value", 1740695150i64),);
    
}
fn load_InputEventKey_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_InputEventKey = string_names.fetch("InputEventKey");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventKey), "InputEventKey", "set_pressed", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventKey), "InputEventKey", "set_keycode", 888074362i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventKey), "InputEventKey", "get_keycode", 1585896689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventKey), "InputEventKey", "set_physical_keycode", 888074362i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventKey), "InputEventKey", "get_physical_keycode", 1585896689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventKey), "InputEventKey", "set_key_label", 888074362i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventKey), "InputEventKey", "get_key_label", 1585896689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventKey), "InputEventKey", "set_unicode", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventKey), "InputEventKey", "get_unicode", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventKey), "InputEventKey", "set_location", 634453155i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventKey), "InputEventKey", "get_location", 211810873i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventKey), "InputEventKey", "set_echo", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventKey), "InputEventKey", "get_keycode_with_modifiers", 1585896689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventKey), "InputEventKey", "get_physical_keycode_with_modifiers", 1585896689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventKey), "InputEventKey", "get_key_label_with_modifiers", 1585896689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventKey), "InputEventKey", "as_text_keycode", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventKey), "InputEventKey", "as_text_physical_keycode", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventKey), "InputEventKey", "as_text_key_label", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventKey), "InputEventKey", "as_text_location", 201670096i64),);
    
}
fn load_InputEventMIDI_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_InputEventMIDI = string_names.fetch("InputEventMIDI");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMIDI), "InputEventMIDI", "set_channel", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMIDI), "InputEventMIDI", "get_channel", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMIDI), "InputEventMIDI", "set_message", 1064271510i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMIDI), "InputEventMIDI", "get_message", 1936512097i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMIDI), "InputEventMIDI", "set_pitch", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMIDI), "InputEventMIDI", "get_pitch", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMIDI), "InputEventMIDI", "set_velocity", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMIDI), "InputEventMIDI", "get_velocity", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMIDI), "InputEventMIDI", "set_instrument", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMIDI), "InputEventMIDI", "get_instrument", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMIDI), "InputEventMIDI", "set_pressure", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMIDI), "InputEventMIDI", "get_pressure", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMIDI), "InputEventMIDI", "set_controller_number", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMIDI), "InputEventMIDI", "get_controller_number", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMIDI), "InputEventMIDI", "set_controller_value", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMIDI), "InputEventMIDI", "get_controller_value", 3905245786i64),);
    
}
fn load_InputEventMagnifyGesture_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_InputEventMagnifyGesture = string_names.fetch("InputEventMagnifyGesture");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMagnifyGesture), "InputEventMagnifyGesture", "set_factor", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMagnifyGesture), "InputEventMagnifyGesture", "get_factor", 1740695150i64),);
    
}
fn load_InputEventMouse_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_InputEventMouse = string_names.fetch("InputEventMouse");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouse), "InputEventMouse", "set_button_mask", 3950145251i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouse), "InputEventMouse", "get_button_mask", 2512161324i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouse), "InputEventMouse", "set_position", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouse), "InputEventMouse", "get_position", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouse), "InputEventMouse", "set_global_position", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouse), "InputEventMouse", "get_global_position", 3341600327i64),);
    
}
fn load_InputEventMouseButton_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_InputEventMouseButton = string_names.fetch("InputEventMouseButton");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouseButton), "InputEventMouseButton", "set_factor", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouseButton), "InputEventMouseButton", "get_factor", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouseButton), "InputEventMouseButton", "set_button_index", 3624991109i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouseButton), "InputEventMouseButton", "get_button_index", 1132662608i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouseButton), "InputEventMouseButton", "set_pressed", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouseButton), "InputEventMouseButton", "set_canceled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouseButton), "InputEventMouseButton", "set_double_click", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouseButton), "InputEventMouseButton", "is_double_click", 36873697i64),);
    
}
fn load_InputEventMouseMotion_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_InputEventMouseMotion = string_names.fetch("InputEventMouseMotion");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouseMotion), "InputEventMouseMotion", "set_tilt", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouseMotion), "InputEventMouseMotion", "get_tilt", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouseMotion), "InputEventMouseMotion", "set_pressure", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouseMotion), "InputEventMouseMotion", "get_pressure", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouseMotion), "InputEventMouseMotion", "set_pen_inverted", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouseMotion), "InputEventMouseMotion", "get_pen_inverted", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouseMotion), "InputEventMouseMotion", "set_relative", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouseMotion), "InputEventMouseMotion", "get_relative", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouseMotion), "InputEventMouseMotion", "set_screen_relative", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouseMotion), "InputEventMouseMotion", "get_screen_relative", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouseMotion), "InputEventMouseMotion", "set_velocity", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouseMotion), "InputEventMouseMotion", "get_velocity", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouseMotion), "InputEventMouseMotion", "set_screen_velocity", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventMouseMotion), "InputEventMouseMotion", "get_screen_velocity", 3341600327i64),);
    
}
fn load_InputEventPanGesture_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_InputEventPanGesture = string_names.fetch("InputEventPanGesture");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventPanGesture), "InputEventPanGesture", "set_delta", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventPanGesture), "InputEventPanGesture", "get_delta", 3341600327i64),);
    
}
fn load_InputEventScreenDrag_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_InputEventScreenDrag = string_names.fetch("InputEventScreenDrag");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenDrag), "InputEventScreenDrag", "set_index", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenDrag), "InputEventScreenDrag", "get_index", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenDrag), "InputEventScreenDrag", "set_tilt", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenDrag), "InputEventScreenDrag", "get_tilt", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenDrag), "InputEventScreenDrag", "set_pressure", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenDrag), "InputEventScreenDrag", "get_pressure", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenDrag), "InputEventScreenDrag", "set_pen_inverted", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenDrag), "InputEventScreenDrag", "get_pen_inverted", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenDrag), "InputEventScreenDrag", "set_position", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenDrag), "InputEventScreenDrag", "get_position", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenDrag), "InputEventScreenDrag", "set_relative", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenDrag), "InputEventScreenDrag", "get_relative", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenDrag), "InputEventScreenDrag", "set_screen_relative", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenDrag), "InputEventScreenDrag", "get_screen_relative", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenDrag), "InputEventScreenDrag", "set_velocity", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenDrag), "InputEventScreenDrag", "get_velocity", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenDrag), "InputEventScreenDrag", "set_screen_velocity", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenDrag), "InputEventScreenDrag", "get_screen_velocity", 3341600327i64),);
    
}
fn load_InputEventScreenTouch_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_InputEventScreenTouch = string_names.fetch("InputEventScreenTouch");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenTouch), "InputEventScreenTouch", "set_index", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenTouch), "InputEventScreenTouch", "get_index", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenTouch), "InputEventScreenTouch", "set_position", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenTouch), "InputEventScreenTouch", "get_position", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenTouch), "InputEventScreenTouch", "set_pressed", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenTouch), "InputEventScreenTouch", "set_canceled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenTouch), "InputEventScreenTouch", "set_double_tap", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventScreenTouch), "InputEventScreenTouch", "is_double_tap", 36873697i64),);
    
}
fn load_InputEventShortcut_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_InputEventShortcut = string_names.fetch("InputEventShortcut");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventShortcut), "InputEventShortcut", "set_shortcut", 857163497i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventShortcut), "InputEventShortcut", "get_shortcut", 3766804753i64),);
    
}
fn load_InputEventWithModifiers_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_InputEventWithModifiers = string_names.fetch("InputEventWithModifiers");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventWithModifiers), "InputEventWithModifiers", "set_command_or_control_autoremap", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventWithModifiers), "InputEventWithModifiers", "is_command_or_control_autoremap", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventWithModifiers), "InputEventWithModifiers", "is_command_or_control_pressed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventWithModifiers), "InputEventWithModifiers", "set_alt_pressed", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventWithModifiers), "InputEventWithModifiers", "is_alt_pressed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventWithModifiers), "InputEventWithModifiers", "set_shift_pressed", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventWithModifiers), "InputEventWithModifiers", "is_shift_pressed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventWithModifiers), "InputEventWithModifiers", "set_ctrl_pressed", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventWithModifiers), "InputEventWithModifiers", "is_ctrl_pressed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventWithModifiers), "InputEventWithModifiers", "set_meta_pressed", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventWithModifiers), "InputEventWithModifiers", "is_meta_pressed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputEventWithModifiers), "InputEventWithModifiers", "get_modifiers_mask", 1258259499i64),);
    
}
fn load_InputMap_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_InputMap = string_names.fetch("InputMap");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputMap), "InputMap", "has_action", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputMap), "InputMap", "get_actions", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputMap), "InputMap", "add_action", 1195233573i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputMap), "InputMap", "erase_action", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputMap), "InputMap", "get_action_description", 957595536i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputMap), "InputMap", "action_set_deadzone", 4135858297i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputMap), "InputMap", "action_get_deadzone", 1391627649i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputMap), "InputMap", "action_add_event", 518302593i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputMap), "InputMap", "action_has_event", 1185871985i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputMap), "InputMap", "action_erase_event", 518302593i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputMap), "InputMap", "action_erase_events", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputMap), "InputMap", "action_get_events", 689397652i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputMap), "InputMap", "event_is_action", 3193353650i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InputMap), "InputMap", "load_from_project_settings", 3218959716i64),);
    
}
fn load_InstancePlaceholder_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_InstancePlaceholder = string_names.fetch("InstancePlaceholder");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InstancePlaceholder), "InstancePlaceholder", "get_stored_values", 2230153369i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InstancePlaceholder), "InstancePlaceholder", "create_instance", 3794612210i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_InstancePlaceholder), "InstancePlaceholder", "get_instance_path", 201670096i64),);
    
}
fn load_ItemList_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ItemList = string_names.fetch("ItemList");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "add_item", 359861678i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "add_icon_item", 4256579627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_item_text", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_item_text", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_item_icon", 666127730i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_item_icon", 3536238170i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_item_text_direction", 1707680378i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_item_text_direction", 4235602388i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_item_language", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_item_language", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_item_auto_translate_mode", 287402019i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_item_auto_translate_mode", 906302372i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_item_icon_transposed", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "is_item_icon_transposed", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_item_icon_region", 1356297692i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_item_icon_region", 3327874267i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_item_icon_modulate", 2878471219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_item_icon_modulate", 3457211756i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_item_selectable", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "is_item_selectable", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_item_disabled", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "is_item_disabled", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_item_metadata", 2152698145i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_item_metadata", 4227898402i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_item_custom_bg_color", 2878471219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_item_custom_bg_color", 3457211756i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_item_custom_fg_color", 2878471219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_item_custom_fg_color", 3457211756i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_item_rect", 159227807i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_item_tooltip_enabled", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "is_item_tooltip_enabled", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_item_tooltip", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_item_tooltip", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "select", 972357352i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "deselect", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "deselect_all", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "is_selected", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_selected_items", 969006518i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "move_item", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_item_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_item_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "remove_item", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "sort_items_by_text", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_fixed_column_width", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_fixed_column_width", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_same_column_width", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "is_same_column_width", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_max_text_lines", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_max_text_lines", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_max_columns", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_max_columns", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_select_mode", 928267388i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_select_mode", 1191945842i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_icon_mode", 2025053633i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_icon_mode", 3353929232i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_fixed_icon_size", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_fixed_icon_size", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_icon_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_icon_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_allow_rmb_select", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_allow_rmb_select", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_allow_reselect", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_allow_reselect", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_allow_search", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_allow_search", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_auto_width", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "has_auto_width", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_auto_height", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "has_auto_height", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "is_anything_selected", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_item_at_position", 2300324924i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "ensure_current_is_visible", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_v_scroll_bar", 2630340773i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_h_scroll_bar", 4004517983i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_text_overrun_behavior", 1008890932i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "get_text_overrun_behavior", 3779142101i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "set_wraparound_items", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "has_wraparound_items", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ItemList), "ItemList", "force_update_list_size", 3218959716i64),);
    
}
fn load_JSON_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_JSON = string_names.fetch("JSON");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_JSON), "JSON", "stringify", 462733549i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_JSON), "JSON", "parse_string", 309047738i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_JSON), "JSON", "parse", 885841341i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_JSON), "JSON", "get_data", 1214101251i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_JSON), "JSON", "set_data", 1114965689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_JSON), "JSON", "get_parsed_text", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_JSON), "JSON", "get_error_line", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_JSON), "JSON", "get_error_message", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_JSON), "JSON", "from_native", 2963479484i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_JSON), "JSON", "to_native", 2963479484i64),);
    
}
fn load_JSONRPC_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_JSONRPC = string_names.fetch("JSONRPC");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_JSONRPC), "JSONRPC", "set_method", 2137474292i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_JSONRPC), "JSONRPC", "process_action", 2963479484i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_JSONRPC), "JSONRPC", "process_string", 1703090593i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_JSONRPC), "JSONRPC", "make_request", 3423508980i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_JSONRPC), "JSONRPC", "make_response", 5053918i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_JSONRPC), "JSONRPC", "make_notification", 2949127017i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_JSONRPC), "JSONRPC", "make_response_error", 928596297i64),);
    
}
fn load_Joint2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Joint2D = string_names.fetch("Joint2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Joint2D), "Joint2D", "set_node_a", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Joint2D), "Joint2D", "get_node_a", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Joint2D), "Joint2D", "set_node_b", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Joint2D), "Joint2D", "get_node_b", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Joint2D), "Joint2D", "set_bias", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Joint2D), "Joint2D", "get_bias", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Joint2D), "Joint2D", "set_exclude_nodes_from_collision", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Joint2D), "Joint2D", "get_exclude_nodes_from_collision", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Joint2D), "Joint2D", "get_rid", 2944877500i64),);
    
}
fn load_Joint3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Joint3D = string_names.fetch("Joint3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Joint3D), "Joint3D", "set_node_a", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Joint3D), "Joint3D", "get_node_a", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Joint3D), "Joint3D", "set_node_b", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Joint3D), "Joint3D", "get_node_b", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Joint3D), "Joint3D", "set_solver_priority", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Joint3D), "Joint3D", "get_solver_priority", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Joint3D), "Joint3D", "set_exclude_nodes_from_collision", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Joint3D), "Joint3D", "get_exclude_nodes_from_collision", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Joint3D), "Joint3D", "get_rid", 2944877500i64),);
    
}
fn load_KinematicCollision2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_KinematicCollision2D = string_names.fetch("KinematicCollision2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision2D), "KinematicCollision2D", "get_position", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision2D), "KinematicCollision2D", "get_normal", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision2D), "KinematicCollision2D", "get_travel", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision2D), "KinematicCollision2D", "get_remainder", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision2D), "KinematicCollision2D", "get_angle", 2841063350i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision2D), "KinematicCollision2D", "get_depth", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision2D), "KinematicCollision2D", "get_local_shape", 1981248198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision2D), "KinematicCollision2D", "get_collider", 1981248198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision2D), "KinematicCollision2D", "get_collider_id", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision2D), "KinematicCollision2D", "get_collider_rid", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision2D), "KinematicCollision2D", "get_collider_shape", 1981248198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision2D), "KinematicCollision2D", "get_collider_shape_index", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision2D), "KinematicCollision2D", "get_collider_velocity", 3341600327i64),);
    
}
fn load_KinematicCollision3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_KinematicCollision3D = string_names.fetch("KinematicCollision3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision3D), "KinematicCollision3D", "get_travel", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision3D), "KinematicCollision3D", "get_remainder", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision3D), "KinematicCollision3D", "get_depth", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision3D), "KinematicCollision3D", "get_collision_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision3D), "KinematicCollision3D", "get_position", 1914908202i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision3D), "KinematicCollision3D", "get_normal", 1914908202i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision3D), "KinematicCollision3D", "get_angle", 1242741860i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision3D), "KinematicCollision3D", "get_local_shape", 2639523548i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision3D), "KinematicCollision3D", "get_collider", 2639523548i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision3D), "KinematicCollision3D", "get_collider_id", 1591665591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision3D), "KinematicCollision3D", "get_collider_rid", 1231817359i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision3D), "KinematicCollision3D", "get_collider_shape", 2639523548i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision3D), "KinematicCollision3D", "get_collider_shape_index", 1591665591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_KinematicCollision3D), "KinematicCollision3D", "get_collider_velocity", 1914908202i64),);
    
}
fn load_Label_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Label = string_names.fetch("Label");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "set_horizontal_alignment", 2312603777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_horizontal_alignment", 341400642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "set_vertical_alignment", 1796458609i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_vertical_alignment", 3274884059i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "set_text", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_text", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "set_label_settings", 1030653839i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_label_settings", 826676056i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "set_text_direction", 119160795i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_text_direction", 797257663i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "set_language", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_language", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "set_paragraph_separator", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_paragraph_separator", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "set_autowrap_mode", 3289138044i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_autowrap_mode", 1549071663i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "set_autowrap_trim_flags", 2809697122i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_autowrap_trim_flags", 2340632602i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "set_justification_flags", 2877345813i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_justification_flags", 1583363614i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "set_clip_text", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "is_clipping_text", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "set_tab_stops", 2899603908i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_tab_stops", 675695659i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "set_text_overrun_behavior", 1008890932i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_text_overrun_behavior", 3779142101i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "set_ellipsis_char", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_ellipsis_char", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "set_uppercase", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "is_uppercase", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_line_height", 181039630i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_line_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_visible_line_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_total_character_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "set_visible_characters", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_visible_characters", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_visible_characters_behavior", 258789322i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "set_visible_characters_behavior", 3383839701i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "set_visible_ratio", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_visible_ratio", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "set_lines_skipped", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_lines_skipped", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "set_max_lines_visible", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_max_lines_visible", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "set_structured_text_bidi_override", 55961453i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_structured_text_bidi_override", 3385126229i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "set_structured_text_bidi_override_options", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_structured_text_bidi_override_options", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label), "Label", "get_character_bounds", 3327874267i64),);
    
}
fn load_Label3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Label3D = string_names.fetch("Label3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_horizontal_alignment", 2312603777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_horizontal_alignment", 341400642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_vertical_alignment", 1796458609i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_vertical_alignment", 3274884059i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_modulate", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_modulate", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_outline_modulate", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_outline_modulate", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_text", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_text", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_text_direction", 1418190634i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_text_direction", 2516697328i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_language", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_language", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_structured_text_bidi_override", 55961453i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_structured_text_bidi_override", 3385126229i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_structured_text_bidi_override_options", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_structured_text_bidi_override_options", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_uppercase", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "is_uppercase", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_render_priority", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_render_priority", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_outline_render_priority", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_outline_render_priority", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_font", 1262170328i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_font", 3229501585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_font_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_font_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_outline_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_outline_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_line_spacing", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_line_spacing", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_autowrap_mode", 3289138044i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_autowrap_mode", 1549071663i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_autowrap_trim_flags", 2809697122i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_autowrap_trim_flags", 2340632602i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_justification_flags", 2877345813i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_justification_flags", 1583363614i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_width", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_width", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_pixel_size", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_pixel_size", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_offset", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_draw_flag", 1285833066i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_draw_flag", 259226453i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_billboard_mode", 4202036497i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_billboard_mode", 1283840139i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_alpha_cut_mode", 2549142916i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_alpha_cut_mode", 219468601i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_alpha_scissor_threshold", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_alpha_scissor_threshold", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_alpha_hash_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_alpha_hash_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_alpha_antialiasing", 3212649852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_alpha_antialiasing", 2889939400i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_alpha_antialiasing_edge", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_alpha_antialiasing_edge", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "set_texture_filter", 22904437i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "get_texture_filter", 3289213076i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Label3D), "Label3D", "generate_triangle_mesh", 3476533166i64),);
    
}
fn load_LabelSettings_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_LabelSettings = string_names.fetch("LabelSettings");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "set_line_spacing", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "get_line_spacing", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "set_paragraph_spacing", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "get_paragraph_spacing", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "set_font", 1262170328i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "get_font", 3229501585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "set_font_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "get_font_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "set_font_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "get_font_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "set_outline_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "get_outline_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "set_outline_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "get_outline_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "set_shadow_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "get_shadow_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "set_shadow_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "get_shadow_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "set_shadow_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "get_shadow_offset", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "get_stacked_outline_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "set_stacked_outline_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "add_stacked_outline", 1025054187i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "move_stacked_outline", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "remove_stacked_outline", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "set_stacked_outline_size", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "get_stacked_outline_size", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "set_stacked_outline_color", 2878471219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "get_stacked_outline_color", 3457211756i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "get_stacked_shadow_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "set_stacked_shadow_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "add_stacked_shadow", 1025054187i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "move_stacked_shadow", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "remove_stacked_shadow", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "set_stacked_shadow_offset", 163021252i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "get_stacked_shadow_offset", 2299179447i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "set_stacked_shadow_color", 2878471219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "get_stacked_shadow_color", 3457211756i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "set_stacked_shadow_outline_size", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LabelSettings), "LabelSettings", "get_stacked_shadow_outline_size", 923996154i64),);
    
}
fn load_Light2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Light2D = string_names.fetch("Light2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "set_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "is_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "set_editor_only", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "is_editor_only", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "set_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "get_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "set_energy", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "get_energy", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "set_z_range_min", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "get_z_range_min", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "set_z_range_max", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "get_z_range_max", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "set_layer_range_min", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "get_layer_range_min", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "set_layer_range_max", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "get_layer_range_max", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "set_item_cull_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "get_item_cull_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "set_item_shadow_cull_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "get_item_shadow_cull_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "set_shadow_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "is_shadow_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "set_shadow_smooth", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "get_shadow_smooth", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "set_shadow_filter", 3209356555i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "get_shadow_filter", 1973619177i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "set_shadow_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "get_shadow_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "set_blend_mode", 2916638796i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "get_blend_mode", 936255250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "set_height", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light2D), "Light2D", "get_height", 1740695150i64),);
    
}
fn load_Light3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Light3D = string_names.fetch("Light3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "set_editor_only", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "is_editor_only", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "set_param", 1722734213i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "get_param", 1844084987i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "set_shadow", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "has_shadow", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "set_negative", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "is_negative", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "set_cull_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "get_cull_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "set_enable_distance_fade", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "is_distance_fade_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "set_distance_fade_begin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "get_distance_fade_begin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "set_distance_fade_shadow", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "get_distance_fade_shadow", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "set_distance_fade_length", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "get_distance_fade_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "set_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "get_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "set_shadow_reverse_cull_face", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "get_shadow_reverse_cull_face", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "set_shadow_caster_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "get_shadow_caster_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "set_bake_mode", 37739303i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "get_bake_mode", 371737608i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "set_projector", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "get_projector", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "set_temperature", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "get_temperature", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Light3D), "Light3D", "get_correlated_color", 3444240500i64),);
    
}
fn load_LightOccluder2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_LightOccluder2D = string_names.fetch("LightOccluder2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightOccluder2D), "LightOccluder2D", "set_occluder_polygon", 3258315893i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightOccluder2D), "LightOccluder2D", "get_occluder_polygon", 3962317075i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightOccluder2D), "LightOccluder2D", "set_occluder_light_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightOccluder2D), "LightOccluder2D", "get_occluder_light_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightOccluder2D), "LightOccluder2D", "set_as_sdf_collision", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightOccluder2D), "LightOccluder2D", "is_set_as_sdf_collision", 36873697i64),);
    
}
fn load_LightmapGI_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_LightmapGI = string_names.fetch("LightmapGI");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "set_light_data", 1790597277i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "get_light_data", 290354153i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "set_bake_quality", 1192215803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "get_bake_quality", 688832735i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "set_bounces", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "get_bounces", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "set_bounce_indirect_energy", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "get_bounce_indirect_energy", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "set_generate_probes", 549981046i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "get_generate_probes", 3930596226i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "set_bias", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "get_bias", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "set_environment_mode", 2282650285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "get_environment_mode", 4128646479i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "set_environment_custom_sky", 3336722921i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "get_environment_custom_sky", 1177136966i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "set_environment_custom_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "get_environment_custom_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "set_environment_custom_energy", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "get_environment_custom_energy", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "set_texel_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "get_texel_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "set_max_texture_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "get_max_texture_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "set_supersampling_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "is_supersampling_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "set_supersampling_factor", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "get_supersampling_factor", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "set_use_denoiser", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "is_using_denoiser", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "set_denoiser_strength", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "get_denoiser_strength", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "set_denoiser_range", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "get_denoiser_range", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "set_interior", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "is_interior", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "set_directional", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "is_directional", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "set_shadowmask_mode", 3451066572i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "get_shadowmask_mode", 785478560i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "set_use_texture_for_bounces", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "is_using_texture_for_bounces", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "set_camera_attributes", 2817810567i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGI), "LightmapGI", "get_camera_attributes", 3921283215i64),);
    
}
fn load_LightmapGIData_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_LightmapGIData = string_names.fetch("LightmapGIData");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGIData), "LightmapGIData", "set_lightmap_textures", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGIData), "LightmapGIData", "get_lightmap_textures", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGIData), "LightmapGIData", "set_shadowmask_textures", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGIData), "LightmapGIData", "get_shadowmask_textures", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGIData), "LightmapGIData", "set_uses_spherical_harmonics", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGIData), "LightmapGIData", "is_using_spherical_harmonics", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGIData), "LightmapGIData", "add_user", 4272570515i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGIData), "LightmapGIData", "get_user_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGIData), "LightmapGIData", "get_user_path", 408788394i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGIData), "LightmapGIData", "clear_users", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGIData), "LightmapGIData", "set_light_texture", 1278366092i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LightmapGIData), "LightmapGIData", "get_light_texture", 3984243839i64),);
    
}
fn load_Line2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Line2D = string_names.fetch("Line2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "set_points", 1509147220i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "get_points", 2961356807i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "set_point_position", 163021252i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "get_point_position", 2299179447i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "get_point_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "add_point", 2654014372i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "remove_point", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "clear_points", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "set_closed", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "is_closed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "set_width", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "get_width", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "set_curve", 270443179i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "get_curve", 2460114913i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "set_default_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "get_default_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "set_gradient", 2756054477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "get_gradient", 132272999i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "set_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "get_texture", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "set_texture_mode", 1952559516i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "get_texture_mode", 2341040722i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "set_joint_mode", 604292979i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "get_joint_mode", 2546544037i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "set_begin_cap_mode", 1669024546i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "get_begin_cap_mode", 1107511441i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "set_end_cap_mode", 1669024546i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "get_end_cap_mode", 1107511441i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "set_sharp_limit", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "get_sharp_limit", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "set_round_precision", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "get_round_precision", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "set_antialiased", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Line2D), "Line2D", "get_antialiased", 36873697i64),);
    
}
fn load_LineEdit_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_LineEdit = string_names.fetch("LineEdit");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "has_ime_text", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "cancel_ime", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "apply_ime", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_horizontal_alignment", 2312603777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "get_horizontal_alignment", 341400642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "edit", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "unedit", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "is_editing", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_keep_editing_on_text_submit", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "is_editing_kept_on_text_submit", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "select", 1328111411i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "select_all", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "deselect", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "has_undo", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "has_redo", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "has_selection", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "get_selected_text", 2841200299i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "get_selection_from_column", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "get_selection_to_column", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_text", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "get_text", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "get_draw_control_chars", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_draw_control_chars", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_text_direction", 119160795i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "get_text_direction", 797257663i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_language", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "get_language", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_structured_text_bidi_override", 55961453i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "get_structured_text_bidi_override", 3385126229i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_structured_text_bidi_override_options", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "get_structured_text_bidi_override_options", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_placeholder", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "get_placeholder", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_caret_column", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "get_caret_column", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "get_next_composite_character_column", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "get_previous_composite_character_column", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "get_scroll_offset", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_expand_to_text_length_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "is_expand_to_text_length_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_caret_blink_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "is_caret_blink_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_caret_mid_grapheme_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "is_caret_mid_grapheme_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_caret_force_displayed", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "is_caret_force_displayed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_caret_blink_interval", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "get_caret_blink_interval", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_max_length", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "get_max_length", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "insert_text_at_caret", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "delete_char_at_caret", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "delete_text", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_editable", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "is_editable", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_secret", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "is_secret", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_secret_character", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "get_secret_character", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "menu_option", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "get_menu", 229722558i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "is_menu_visible", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_context_menu_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "is_context_menu_enabled", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_emoji_menu_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "is_emoji_menu_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_backspace_deletes_composite_character_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "is_backspace_deletes_composite_character_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_virtual_keyboard_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "is_virtual_keyboard_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_virtual_keyboard_show_on_focus", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "get_virtual_keyboard_show_on_focus", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_virtual_keyboard_type", 2696893573i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "get_virtual_keyboard_type", 1928699316i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_clear_button_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "is_clear_button_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_shortcut_keys_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "is_shortcut_keys_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_middle_mouse_paste_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "is_middle_mouse_paste_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_selecting_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "is_selecting_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_deselect_on_focus_loss_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "is_deselect_on_focus_loss_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_drag_and_drop_selection_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "is_drag_and_drop_selection_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_right_icon", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "get_right_icon", 255860311i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_flat", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "is_flat", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "set_select_all_on_focus", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LineEdit), "LineEdit", "is_select_all_on_focus", 36873697i64),);
    
}
fn load_LinkButton_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_LinkButton = string_names.fetch("LinkButton");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LinkButton), "LinkButton", "set_text", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LinkButton), "LinkButton", "get_text", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LinkButton), "LinkButton", "set_text_direction", 119160795i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LinkButton), "LinkButton", "get_text_direction", 797257663i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LinkButton), "LinkButton", "set_language", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LinkButton), "LinkButton", "get_language", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LinkButton), "LinkButton", "set_uri", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LinkButton), "LinkButton", "get_uri", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LinkButton), "LinkButton", "set_underline_mode", 4032947085i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LinkButton), "LinkButton", "get_underline_mode", 568343738i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LinkButton), "LinkButton", "set_structured_text_bidi_override", 55961453i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LinkButton), "LinkButton", "get_structured_text_bidi_override", 3385126229i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LinkButton), "LinkButton", "set_structured_text_bidi_override_options", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LinkButton), "LinkButton", "get_structured_text_bidi_override_options", 3995934104i64),);
    
}
fn load_LookAtModifier3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_LookAtModifier3D = string_names.fetch("LookAtModifier3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_target_node", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_target_node", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_bone_name", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_bone_name", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_bone", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_bone", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_forward_axis", 3199955933i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_forward_axis", 4076020284i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_primary_rotation_axis", 1144690656i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_primary_rotation_axis", 3050976882i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_use_secondary_rotation", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "is_using_secondary_rotation", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_origin_safe_margin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_origin_safe_margin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_origin_from", 4254695669i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_origin_from", 4057166297i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_origin_bone_name", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_origin_bone_name", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_origin_bone", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_origin_bone", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_origin_external_node", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_origin_external_node", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_origin_offset", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_origin_offset", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_duration", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_duration", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_transition_type", 1058637742i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_transition_type", 3842314528i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_ease_type", 1208105857i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_ease_type", 631880200i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_use_angle_limitation", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "is_using_angle_limitation", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_symmetry_limitation", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "is_limitation_symmetry", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_primary_limit_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_primary_limit_angle", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_primary_damp_threshold", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_primary_damp_threshold", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_primary_positive_limit_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_primary_positive_limit_angle", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_primary_positive_damp_threshold", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_primary_positive_damp_threshold", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_primary_negative_limit_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_primary_negative_limit_angle", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_primary_negative_damp_threshold", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_primary_negative_damp_threshold", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_secondary_limit_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_secondary_limit_angle", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_secondary_damp_threshold", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_secondary_damp_threshold", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_secondary_positive_limit_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_secondary_positive_limit_angle", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_secondary_positive_damp_threshold", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_secondary_positive_damp_threshold", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_secondary_negative_limit_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_secondary_negative_limit_angle", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "set_secondary_negative_damp_threshold", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_secondary_negative_damp_threshold", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "get_interpolation_remaining", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "is_interpolating", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_LookAtModifier3D), "LookAtModifier3D", "is_target_within_limitation", 36873697i64),);
    
}
fn load_Marker2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Marker2D = string_names.fetch("Marker2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Marker2D), "Marker2D", "set_gizmo_extents", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Marker2D), "Marker2D", "get_gizmo_extents", 1740695150i64),);
    
}
fn load_Marker3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Marker3D = string_names.fetch("Marker3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Marker3D), "Marker3D", "set_gizmo_extents", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Marker3D), "Marker3D", "get_gizmo_extents", 1740695150i64),);
    
}
fn load_Marshalls_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Marshalls = string_names.fetch("Marshalls");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Marshalls), "Marshalls", "variant_to_base64", 3876248563i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Marshalls), "Marshalls", "base64_to_variant", 218087648i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Marshalls), "Marshalls", "raw_to_base64", 3999417757i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Marshalls), "Marshalls", "base64_to_raw", 659035735i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Marshalls), "Marshalls", "utf8_to_base64", 1703090593i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Marshalls), "Marshalls", "base64_to_utf8", 1703090593i64),);
    
}
fn load_Material_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Material = string_names.fetch("Material");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Material), "Material", "set_next_pass", 2757459619i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Material), "Material", "get_next_pass", 5934680i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Material), "Material", "set_render_priority", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Material), "Material", "get_render_priority", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Material), "Material", "inspect_native_shader_code", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Material), "Material", "create_placeholder", 121922552i64),);
    
}
fn load_MenuBar_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_MenuBar = string_names.fetch("MenuBar");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "set_switch_on_hover", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "is_switch_on_hover", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "set_disable_shortcuts", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "set_prefer_global_menu", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "is_prefer_global_menu", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "is_native_menu", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "get_menu_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "set_text_direction", 119160795i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "get_text_direction", 797257663i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "set_language", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "get_language", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "set_flat", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "is_flat", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "set_start_index", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "get_start_index", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "set_menu_title", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "get_menu_title", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "set_menu_tooltip", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "get_menu_tooltip", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "set_menu_disabled", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "is_menu_disabled", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "set_menu_hidden", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "is_menu_hidden", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuBar), "MenuBar", "get_menu_popup", 2100501353i64),);
    
}
fn load_MenuButton_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_MenuButton = string_names.fetch("MenuButton");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuButton), "MenuButton", "get_popup", 229722558i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuButton), "MenuButton", "show_popup", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuButton), "MenuButton", "set_switch_on_hover", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuButton), "MenuButton", "is_switch_on_hover", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuButton), "MenuButton", "set_disable_shortcuts", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuButton), "MenuButton", "set_item_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MenuButton), "MenuButton", "get_item_count", 3905245786i64),);
    
}
fn load_Mesh_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Mesh = string_names.fetch("Mesh");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Mesh), "Mesh", "set_lightmap_size_hint", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Mesh), "Mesh", "get_lightmap_size_hint", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Mesh), "Mesh", "get_aabb", 1068685055i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Mesh), "Mesh", "get_faces", 497664490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Mesh), "Mesh", "get_surface_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Mesh), "Mesh", "surface_get_arrays", 663333327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Mesh), "Mesh", "surface_get_blend_shape_arrays", 663333327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Mesh), "Mesh", "surface_set_material", 3671737478i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Mesh), "Mesh", "surface_get_material", 2897466400i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Mesh), "Mesh", "create_placeholder", 121922552i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Mesh), "Mesh", "create_trimesh_shape", 4160111210i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Mesh), "Mesh", "create_convex_shape", 2529984628i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Mesh), "Mesh", "create_outline", 1208642001i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Mesh), "Mesh", "generate_triangle_mesh", 3476533166i64),);
    
}
fn load_MeshConvexDecompositionSettings_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_MeshConvexDecompositionSettings = string_names.fetch("MeshConvexDecompositionSettings");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "set_max_concavity", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "get_max_concavity", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "set_symmetry_planes_clipping_bias", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "get_symmetry_planes_clipping_bias", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "set_revolution_axes_clipping_bias", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "get_revolution_axes_clipping_bias", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "set_min_volume_per_convex_hull", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "get_min_volume_per_convex_hull", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "set_resolution", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "get_resolution", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "set_max_num_vertices_per_convex_hull", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "get_max_num_vertices_per_convex_hull", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "set_plane_downsampling", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "get_plane_downsampling", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "set_convex_hull_downsampling", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "get_convex_hull_downsampling", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "set_normalize_mesh", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "get_normalize_mesh", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "set_mode", 1668072869i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "get_mode", 23479454i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "set_convex_hull_approximation", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "get_convex_hull_approximation", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "set_max_convex_hulls", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "get_max_convex_hulls", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "set_project_hull_vertices", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshConvexDecompositionSettings), "MeshConvexDecompositionSettings", "get_project_hull_vertices", 36873697i64),);
    
}
fn load_MeshDataTool_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_MeshDataTool = string_names.fetch("MeshDataTool");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "create_from_surface", 2727020678i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "commit_to_surface", 2021686445i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_format", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_vertex_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_edge_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_face_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "set_vertex", 1530502735i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_vertex", 711720468i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "set_vertex_normal", 1530502735i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_vertex_normal", 711720468i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "set_vertex_tangent", 1104099133i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_vertex_tangent", 1372055458i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "set_vertex_uv", 163021252i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_vertex_uv", 2299179447i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "set_vertex_uv2", 163021252i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_vertex_uv2", 2299179447i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "set_vertex_color", 2878471219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_vertex_color", 3457211756i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "set_vertex_bones", 3500328261i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_vertex_bones", 1706082319i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "set_vertex_weights", 1345852415i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_vertex_weights", 1542882410i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "set_vertex_meta", 2152698145i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_vertex_meta", 4227898402i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_vertex_edges", 1706082319i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_vertex_faces", 1706082319i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_edge_vertex", 3175239445i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_edge_faces", 1706082319i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "set_edge_meta", 2152698145i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_edge_meta", 4227898402i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_face_vertex", 3175239445i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_face_edge", 3175239445i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "set_face_meta", 2152698145i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_face_meta", 4227898402i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_face_normal", 711720468i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "set_material", 2757459619i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshDataTool), "MeshDataTool", "get_material", 5934680i64),);
    
}
fn load_MeshInstance2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_MeshInstance2D = string_names.fetch("MeshInstance2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance2D), "MeshInstance2D", "set_mesh", 194775623i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance2D), "MeshInstance2D", "get_mesh", 1808005922i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance2D), "MeshInstance2D", "set_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance2D), "MeshInstance2D", "get_texture", 3635182373i64),);
    
}
fn load_MeshInstance3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_MeshInstance3D = string_names.fetch("MeshInstance3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance3D), "MeshInstance3D", "set_mesh", 194775623i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance3D), "MeshInstance3D", "get_mesh", 1808005922i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance3D), "MeshInstance3D", "set_skeleton_path", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance3D), "MeshInstance3D", "get_skeleton_path", 277076166i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance3D), "MeshInstance3D", "set_skin", 3971435618i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance3D), "MeshInstance3D", "get_skin", 2074563878i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance3D), "MeshInstance3D", "get_skin_reference", 2060603409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance3D), "MeshInstance3D", "get_surface_override_material_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance3D), "MeshInstance3D", "set_surface_override_material", 3671737478i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance3D), "MeshInstance3D", "get_surface_override_material", 2897466400i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance3D), "MeshInstance3D", "get_active_material", 2897466400i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance3D), "MeshInstance3D", "create_trimesh_collision", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance3D), "MeshInstance3D", "create_convex_collision", 2751962654i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance3D), "MeshInstance3D", "create_multiple_convex_collisions", 628789669i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance3D), "MeshInstance3D", "get_blend_shape_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance3D), "MeshInstance3D", "find_blend_shape_by_name", 4150868206i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance3D), "MeshInstance3D", "get_blend_shape_value", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance3D), "MeshInstance3D", "set_blend_shape_value", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance3D), "MeshInstance3D", "create_debug_tangents", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance3D), "MeshInstance3D", "bake_mesh_from_current_blend_shape_mix", 1457573577i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshInstance3D), "MeshInstance3D", "bake_mesh_from_current_skeleton_pose", 1457573577i64),);
    
}
fn load_MeshLibrary_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_MeshLibrary = string_names.fetch("MeshLibrary");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshLibrary), "MeshLibrary", "create_item", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshLibrary), "MeshLibrary", "set_item_name", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshLibrary), "MeshLibrary", "set_item_mesh", 969122797i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshLibrary), "MeshLibrary", "set_item_mesh_transform", 3616898986i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshLibrary), "MeshLibrary", "set_item_mesh_cast_shadow", 3923400443i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshLibrary), "MeshLibrary", "set_item_navigation_mesh_transform", 3616898986i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshLibrary), "MeshLibrary", "set_item_navigation_layers", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshLibrary), "MeshLibrary", "set_item_shapes", 537221740i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshLibrary), "MeshLibrary", "set_item_preview", 666127730i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshLibrary), "MeshLibrary", "get_item_name", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshLibrary), "MeshLibrary", "get_item_mesh", 1576363275i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshLibrary), "MeshLibrary", "get_item_mesh_transform", 1965739696i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshLibrary), "MeshLibrary", "get_item_mesh_cast_shadow", 1841766007i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshLibrary), "MeshLibrary", "get_item_navigation_mesh_transform", 1965739696i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshLibrary), "MeshLibrary", "get_item_navigation_layers", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshLibrary), "MeshLibrary", "get_item_shapes", 663333327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshLibrary), "MeshLibrary", "get_item_preview", 3536238170i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshLibrary), "MeshLibrary", "remove_item", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshLibrary), "MeshLibrary", "find_item_by_name", 1321353865i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshLibrary), "MeshLibrary", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshLibrary), "MeshLibrary", "get_item_list", 1930428628i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshLibrary), "MeshLibrary", "get_last_unused_item_id", 3905245786i64),);
    
}
fn load_MeshTexture_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_MeshTexture = string_names.fetch("MeshTexture");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshTexture), "MeshTexture", "set_mesh", 194775623i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshTexture), "MeshTexture", "get_mesh", 1808005922i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshTexture), "MeshTexture", "set_image_size", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshTexture), "MeshTexture", "get_image_size", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshTexture), "MeshTexture", "set_base_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MeshTexture), "MeshTexture", "get_base_texture", 3635182373i64),);
    
}
fn load_MethodTweener_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_MethodTweener = string_names.fetch("MethodTweener");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MethodTweener), "MethodTweener", "set_delay", 266477812i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MethodTweener), "MethodTweener", "set_trans", 3740975367i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MethodTweener), "MethodTweener", "set_ease", 315540545i64),);
    
}
fn load_MissingNode_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_MissingNode = string_names.fetch("MissingNode");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MissingNode), "MissingNode", "set_original_class", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MissingNode), "MissingNode", "get_original_class", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MissingNode), "MissingNode", "set_original_scene", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MissingNode), "MissingNode", "get_original_scene", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MissingNode), "MissingNode", "set_recording_properties", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MissingNode), "MissingNode", "is_recording_properties", 36873697i64),);
    
}
fn load_MissingResource_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_MissingResource = string_names.fetch("MissingResource");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MissingResource), "MissingResource", "set_original_class", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MissingResource), "MissingResource", "get_original_class", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MissingResource), "MissingResource", "set_recording_properties", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MissingResource), "MissingResource", "is_recording_properties", 36873697i64),);
    
}
fn load_MobileVRInterface_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_MobileVRInterface = string_names.fetch("MobileVRInterface");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MobileVRInterface), "MobileVRInterface", "set_eye_height", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MobileVRInterface), "MobileVRInterface", "get_eye_height", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MobileVRInterface), "MobileVRInterface", "set_iod", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MobileVRInterface), "MobileVRInterface", "get_iod", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MobileVRInterface), "MobileVRInterface", "set_display_width", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MobileVRInterface), "MobileVRInterface", "get_display_width", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MobileVRInterface), "MobileVRInterface", "set_display_to_lens", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MobileVRInterface), "MobileVRInterface", "get_display_to_lens", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MobileVRInterface), "MobileVRInterface", "set_offset_rect", 2046264180i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MobileVRInterface), "MobileVRInterface", "get_offset_rect", 1639390495i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MobileVRInterface), "MobileVRInterface", "set_oversample", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MobileVRInterface), "MobileVRInterface", "get_oversample", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MobileVRInterface), "MobileVRInterface", "set_k1", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MobileVRInterface), "MobileVRInterface", "get_k1", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MobileVRInterface), "MobileVRInterface", "set_k2", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MobileVRInterface), "MobileVRInterface", "get_k2", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MobileVRInterface), "MobileVRInterface", "get_vrs_min_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MobileVRInterface), "MobileVRInterface", "set_vrs_min_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MobileVRInterface), "MobileVRInterface", "get_vrs_strength", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MobileVRInterface), "MobileVRInterface", "set_vrs_strength", 373806689i64),);
    
}
fn load_ModifierBoneTarget3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ModifierBoneTarget3D = string_names.fetch("ModifierBoneTarget3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ModifierBoneTarget3D), "ModifierBoneTarget3D", "set_bone_name", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ModifierBoneTarget3D), "ModifierBoneTarget3D", "get_bone_name", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ModifierBoneTarget3D), "ModifierBoneTarget3D", "set_bone", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ModifierBoneTarget3D), "ModifierBoneTarget3D", "get_bone", 3905245786i64),);
    
}
fn load_MovieWriter_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_MovieWriter = string_names.fetch("MovieWriter");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MovieWriter), "MovieWriter", "add_writer", 4023702871i64),);
    
}
fn load_MultiMesh_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_MultiMesh = string_names.fetch("MultiMesh");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "set_mesh", 194775623i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "get_mesh", 1808005922i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "set_use_colors", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "is_using_colors", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "set_use_custom_data", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "is_using_custom_data", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "set_transform_format", 2404750322i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "get_transform_format", 2444156481i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "set_instance_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "get_instance_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "set_visible_instance_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "get_visible_instance_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "set_physics_interpolation_quality", 1819488408i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "get_physics_interpolation_quality", 1465701882i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "set_instance_transform", 3616898986i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "set_instance_transform_2d", 30160968i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "get_instance_transform", 1965739696i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "get_instance_transform_2d", 3836996910i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "set_instance_color", 2878471219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "get_instance_color", 3457211756i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "set_instance_custom_data", 2878471219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "get_instance_custom_data", 3457211756i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "reset_instance_physics_interpolation", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "set_custom_aabb", 259215842i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "get_custom_aabb", 1068685055i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "get_aabb", 1068685055i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "get_buffer", 675695659i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "set_buffer", 2899603908i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMesh), "MultiMesh", "set_buffer_interpolated", 3514430332i64),);
    
}
fn load_MultiMeshInstance2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_MultiMeshInstance2D = string_names.fetch("MultiMeshInstance2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMeshInstance2D), "MultiMeshInstance2D", "set_multimesh", 2246127404i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMeshInstance2D), "MultiMeshInstance2D", "get_multimesh", 1385450523i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMeshInstance2D), "MultiMeshInstance2D", "set_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMeshInstance2D), "MultiMeshInstance2D", "get_texture", 3635182373i64),);
    
}
fn load_MultiMeshInstance3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_MultiMeshInstance3D = string_names.fetch("MultiMeshInstance3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMeshInstance3D), "MultiMeshInstance3D", "set_multimesh", 2246127404i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiMeshInstance3D), "MultiMeshInstance3D", "get_multimesh", 1385450523i64),);
    
}
fn load_MultiplayerAPI_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_MultiplayerAPI = string_names.fetch("MultiplayerAPI");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerAPI), "MultiplayerAPI", "has_multiplayer_peer", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerAPI), "MultiplayerAPI", "get_multiplayer_peer", 3223692825i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerAPI), "MultiplayerAPI", "set_multiplayer_peer", 3694835298i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerAPI), "MultiplayerAPI", "get_unique_id", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerAPI), "MultiplayerAPI", "is_server", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerAPI), "MultiplayerAPI", "get_remote_sender_id", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerAPI), "MultiplayerAPI", "poll", 166280745i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerAPI), "MultiplayerAPI", "rpc", 2077486355i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerAPI), "MultiplayerAPI", "object_configuration_add", 1171879464i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerAPI), "MultiplayerAPI", "object_configuration_remove", 1171879464i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerAPI), "MultiplayerAPI", "get_peers", 969006518i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerAPI), "MultiplayerAPI", "set_default_interface", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerAPI), "MultiplayerAPI", "get_default_interface", 2737447660i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerAPI), "MultiplayerAPI", "create_default_interface", 3294156723i64),);
    
}
fn load_MultiplayerPeer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_MultiplayerPeer = string_names.fetch("MultiplayerPeer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerPeer), "MultiplayerPeer", "set_transfer_channel", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerPeer), "MultiplayerPeer", "get_transfer_channel", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerPeer), "MultiplayerPeer", "set_transfer_mode", 950411049i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerPeer), "MultiplayerPeer", "get_transfer_mode", 3369852622i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerPeer), "MultiplayerPeer", "set_target_peer", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerPeer), "MultiplayerPeer", "get_packet_peer", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerPeer), "MultiplayerPeer", "get_packet_channel", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerPeer), "MultiplayerPeer", "get_packet_mode", 3369852622i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerPeer), "MultiplayerPeer", "poll", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerPeer), "MultiplayerPeer", "close", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerPeer), "MultiplayerPeer", "disconnect_peer", 4023243586i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerPeer), "MultiplayerPeer", "get_connection_status", 2147374275i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerPeer), "MultiplayerPeer", "get_unique_id", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerPeer), "MultiplayerPeer", "generate_unique_id", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerPeer), "MultiplayerPeer", "set_refuse_new_connections", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerPeer), "MultiplayerPeer", "is_refusing_new_connections", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerPeer), "MultiplayerPeer", "is_server_relay_supported", 36873697i64),);
    
}
fn load_MultiplayerSpawner_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_MultiplayerSpawner = string_names.fetch("MultiplayerSpawner");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSpawner), "MultiplayerSpawner", "add_spawnable_scene", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSpawner), "MultiplayerSpawner", "get_spawnable_scene_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSpawner), "MultiplayerSpawner", "get_spawnable_scene", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSpawner), "MultiplayerSpawner", "clear_spawnable_scenes", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSpawner), "MultiplayerSpawner", "spawn", 1991184589i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSpawner), "MultiplayerSpawner", "get_spawn_path", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSpawner), "MultiplayerSpawner", "set_spawn_path", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSpawner), "MultiplayerSpawner", "get_spawn_limit", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSpawner), "MultiplayerSpawner", "set_spawn_limit", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSpawner), "MultiplayerSpawner", "get_spawn_function", 1307783378i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSpawner), "MultiplayerSpawner", "set_spawn_function", 1611583062i64),);
    
}
fn load_MultiplayerSynchronizer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_MultiplayerSynchronizer = string_names.fetch("MultiplayerSynchronizer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSynchronizer), "MultiplayerSynchronizer", "set_root_path", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSynchronizer), "MultiplayerSynchronizer", "get_root_path", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSynchronizer), "MultiplayerSynchronizer", "set_replication_interval", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSynchronizer), "MultiplayerSynchronizer", "get_replication_interval", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSynchronizer), "MultiplayerSynchronizer", "set_delta_interval", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSynchronizer), "MultiplayerSynchronizer", "get_delta_interval", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSynchronizer), "MultiplayerSynchronizer", "set_replication_config", 3889206742i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSynchronizer), "MultiplayerSynchronizer", "get_replication_config", 3200254614i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSynchronizer), "MultiplayerSynchronizer", "set_visibility_update_mode", 3494860300i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSynchronizer), "MultiplayerSynchronizer", "get_visibility_update_mode", 3352241418i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSynchronizer), "MultiplayerSynchronizer", "update_visibility", 1995695955i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSynchronizer), "MultiplayerSynchronizer", "set_visibility_public", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSynchronizer), "MultiplayerSynchronizer", "is_visibility_public", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSynchronizer), "MultiplayerSynchronizer", "add_visibility_filter", 1611583062i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSynchronizer), "MultiplayerSynchronizer", "remove_visibility_filter", 1611583062i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSynchronizer), "MultiplayerSynchronizer", "set_visibility_for", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_MultiplayerSynchronizer), "MultiplayerSynchronizer", "get_visibility_for", 1116898809i64),);
    
}
fn load_NativeMenu_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_NativeMenu = string_names.fetch("NativeMenu");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "has_feature", 1708975490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "has_system_menu", 718213027i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "get_system_menu", 469707506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "get_system_menu_name", 1281499290i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "create_menu", 529393457i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "has_menu", 4155700596i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "free_menu", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "get_size", 2440833711i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "popup", 2450610377i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "set_interface_direction", 1265174801i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "set_popup_open_callback", 3379118538i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "get_popup_open_callback", 3170603026i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "set_popup_close_callback", 3379118538i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "get_popup_close_callback", 3170603026i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "set_minimum_width", 1794382983i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "get_minimum_width", 866169185i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "is_opened", 4155700596i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "add_submenu_item", 1002030223i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "add_item", 980552939i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "add_check_item", 980552939i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "add_icon_item", 1372188274i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "add_icon_check_item", 1372188274i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "add_radio_check_item", 980552939i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "add_icon_radio_check_item", 1372188274i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "add_multistate_item", 2674635658i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "add_separator", 448810126i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "find_item_index_with_text", 1362438794i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "find_item_index_with_tag", 1260085030i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "find_item_index_with_submenu", 893635918i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "is_item_checked", 3120086654i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "is_item_checkable", 3120086654i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "is_item_radio_checkable", 3120086654i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "get_item_callback", 1639989698i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "get_item_key_callback", 1639989698i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "get_item_tag", 4069510997i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "get_item_text", 1464764419i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "get_item_submenu", 1066463050i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "get_item_accelerator", 316800700i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "is_item_disabled", 3120086654i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "is_item_hidden", 3120086654i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "get_item_tooltip", 1464764419i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "get_item_state", 1120910005i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "get_item_max_states", 1120910005i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "get_item_icon", 3391850701i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "get_item_indentation_level", 1120910005i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "set_item_checked", 2658558584i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "set_item_checkable", 2658558584i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "set_item_radio_checkable", 2658558584i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "set_item_callback", 2779810226i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "set_item_hover_callbacks", 2779810226i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "set_item_key_callback", 2779810226i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "set_item_tag", 2706844827i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "set_item_text", 4153150897i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "set_item_submenu", 2310537182i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "set_item_accelerator", 786300043i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "set_item_disabled", 2658558584i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "set_item_hidden", 2658558584i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "set_item_tooltip", 4153150897i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "set_item_state", 4288446313i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "set_item_max_states", 4288446313i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "set_item_icon", 1388763257i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "set_item_indentation_level", 4288446313i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "get_item_count", 2198884583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "is_system_menu", 4155700596i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "remove_item", 3411492887i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NativeMenu), "NativeMenu", "clear", 2722037293i64),);
    
}
fn load_NinePatchRect_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_NinePatchRect = string_names.fetch("NinePatchRect");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NinePatchRect), "NinePatchRect", "set_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NinePatchRect), "NinePatchRect", "get_texture", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NinePatchRect), "NinePatchRect", "set_patch_margin", 437707142i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NinePatchRect), "NinePatchRect", "get_patch_margin", 1983885014i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NinePatchRect), "NinePatchRect", "set_region_rect", 2046264180i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NinePatchRect), "NinePatchRect", "get_region_rect", 1639390495i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NinePatchRect), "NinePatchRect", "set_draw_center", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NinePatchRect), "NinePatchRect", "is_draw_center_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NinePatchRect), "NinePatchRect", "set_h_axis_stretch_mode", 3219608417i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NinePatchRect), "NinePatchRect", "get_h_axis_stretch_mode", 3317113799i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NinePatchRect), "NinePatchRect", "set_v_axis_stretch_mode", 3219608417i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NinePatchRect), "NinePatchRect", "get_v_axis_stretch_mode", 3317113799i64),);
    
}
fn load_Node_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Node = string_names.fetch("Node");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "print_orphan_nodes", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_orphan_node_ids", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "add_sibling", 2570952461i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_name", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_name", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "add_child", 3863233950i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "remove_child", 1078189570i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "reparent", 3685795103i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_child_count", 894402480i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_children", 873284517i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_child", 541253412i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "has_node", 861721659i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_node_or_null", 2734337346i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_parent", 3160264692i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "find_child", 2008217037i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "find_children", 2560337219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "find_parent", 1140089439i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "has_node_and_resource", 861721659i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_node_and_resource", 502563882i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "is_inside_tree", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "is_part_of_edited_scene", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "is_ancestor_of", 3093956946i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "is_greater_than", 3093956946i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_path", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_path_to", 498846349i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "add_to_group", 3683006648i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "remove_from_group", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "is_in_group", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "move_child", 3315886247i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_groups", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_owner", 1078189570i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_owner", 3160264692i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_index", 894402480i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "print_tree", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "print_tree_pretty", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_tree_string", 2841200299i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_tree_string_pretty", 2841200299i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_scene_file_path", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_scene_file_path", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "propagate_notification", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "propagate_call", 1871007965i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_physics_process", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_physics_process_delta_time", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "is_physics_processing", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_process_delta_time", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_process", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_process_priority", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_process_priority", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_physics_process_priority", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_physics_process_priority", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "is_processing", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_process_input", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "is_processing_input", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_process_shortcut_input", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "is_processing_shortcut_input", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_process_unhandled_input", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "is_processing_unhandled_input", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_process_unhandled_key_input", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "is_processing_unhandled_key_input", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_process_mode", 1841290486i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_process_mode", 739966102i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "can_process", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_process_thread_group", 2275442745i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_process_thread_group", 1866404740i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_process_thread_messages", 1357280998i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_process_thread_messages", 4228993612i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_process_thread_group_order", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_process_thread_group_order", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "queue_accessibility_update", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_accessibility_element", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_display_folded", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "is_displayed_folded", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_process_internal", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "is_processing_internal", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_physics_process_internal", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "is_physics_processing_internal", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_physics_interpolation_mode", 3202404928i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_physics_interpolation_mode", 2920385216i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "is_physics_interpolated", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "is_physics_interpolated_and_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "reset_physics_interpolation", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_auto_translate_mode", 776149714i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_auto_translate_mode", 2498906432i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "can_auto_translate", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_translation_domain_inherited", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_window", 1757182445i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_last_exclusive_window", 1757182445i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_tree", 2958820483i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "create_tween", 3426978995i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "duplicate", 3511555459i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "replace_by", 2570952461i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_scene_instance_load_placeholder", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_scene_instance_load_placeholder", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_editable_instance", 2731852923i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "is_editable_instance", 3093956946i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_viewport", 3596683776i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "queue_free", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "request_ready", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "is_node_ready", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_multiplayer_authority", 972357352i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_multiplayer_authority", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "is_multiplayer_authority", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_multiplayer", 406750475i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "rpc_config", 3776071444i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_node_rpc_config", 1214101251i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_editor_description", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "get_editor_description", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_unique_name_in_owner", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "is_unique_name_in_owner", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "atr", 3344478075i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "atr_n", 259354841i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "rpc", 4047867050i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "rpc_id", 361499283i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "update_configuration_warnings", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "call_deferred_thread_group", 3400424181i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_deferred_thread_group", 3776071444i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "notify_deferred_thread_group", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "call_thread_safe", 3400424181i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "set_thread_safe", 3776071444i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node), "Node", "notify_thread_safe", 1286410249i64),);
    
}
fn load_Node2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Node2D = string_names.fetch("Node2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "set_position", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "set_rotation", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "set_rotation_degrees", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "set_skew", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "set_scale", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "get_position", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "get_rotation", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "get_rotation_degrees", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "get_skew", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "get_scale", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "rotate", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "move_local_x", 2087892650i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "move_local_y", 2087892650i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "translate", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "global_translate", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "apply_scale", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "set_global_position", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "get_global_position", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "set_global_rotation", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "set_global_rotation_degrees", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "get_global_rotation", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "get_global_rotation_degrees", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "set_global_skew", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "get_global_skew", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "set_global_scale", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "get_global_scale", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "set_transform", 2761652528i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "set_global_transform", 2761652528i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "look_at", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "get_angle_to", 2276447920i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "to_local", 2656412154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "to_global", 2656412154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node2D), "Node2D", "get_relative_transform_to_parent", 904556875i64),);
    
}
fn load_Node3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Node3D = string_names.fetch("Node3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_transform", 2952846383i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "get_transform", 3229777777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_position", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "get_position", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_rotation", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "get_rotation", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_rotation_degrees", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "get_rotation_degrees", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_rotation_order", 1820889989i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "get_rotation_order", 916939469i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_rotation_edit_mode", 141483330i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "get_rotation_edit_mode", 1572188370i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_scale", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "get_scale", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_quaternion", 1727505552i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "get_quaternion", 1222331677i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_basis", 1055510324i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "get_basis", 2716978435i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_global_transform", 2952846383i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "get_global_transform", 3229777777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "get_global_transform_interpolated", 4183770049i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_global_position", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "get_global_position", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_global_basis", 1055510324i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "get_global_basis", 2716978435i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_global_rotation", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "get_global_rotation", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_global_rotation_degrees", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "get_global_rotation_degrees", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "get_parent_node_3d", 151077316i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_ignore_transform_notification", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_as_top_level", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "is_set_as_top_level", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_disable_scale", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "is_scale_disabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "get_world_3d", 317588385i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "force_update_transform", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_visibility_parent", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "get_visibility_parent", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "update_gizmos", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "add_gizmo", 1544533845i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "get_gizmos", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "clear_gizmos", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_subgizmo_selection", 3317607635i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "clear_subgizmo_selection", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_visible", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "is_visible", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "is_visible_in_tree", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "show", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "hide", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_notify_local_transform", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "is_local_transform_notification_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_notify_transform", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "is_transform_notification_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "rotate", 3436291937i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "global_rotate", 3436291937i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "global_scale", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "global_translate", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "rotate_object_local", 3436291937i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "scale_object_local", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "translate_object_local", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "rotate_x", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "rotate_y", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "rotate_z", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "translate", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "orthonormalize", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "set_identity", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "look_at", 2882425029i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "look_at_from_position", 2086826090i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "to_local", 192990374i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Node3D), "Node3D", "to_global", 192990374i64),);
    
}
fn load_Noise_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Noise = string_names.fetch("Noise");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Noise), "Noise", "get_noise_1d", 3919130443i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Noise), "Noise", "get_noise_2d", 2753205203i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Noise), "Noise", "get_noise_2dv", 2276447920i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Noise), "Noise", "get_noise_3d", 973811851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Noise), "Noise", "get_noise_3dv", 1109078154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Noise), "Noise", "get_image", 3180683109i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Noise), "Noise", "get_seamless_image", 2770743602i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Noise), "Noise", "get_image_3d", 3977814329i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Noise), "Noise", "get_seamless_image_3d", 451006340i64),);
    
}
fn load_NoiseTexture2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_NoiseTexture2D = string_names.fetch("NoiseTexture2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture2D), "NoiseTexture2D", "set_width", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture2D), "NoiseTexture2D", "set_height", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture2D), "NoiseTexture2D", "set_generate_mipmaps", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture2D), "NoiseTexture2D", "is_generating_mipmaps", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture2D), "NoiseTexture2D", "set_noise", 4135492439i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture2D), "NoiseTexture2D", "get_noise", 185851837i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture2D), "NoiseTexture2D", "set_color_ramp", 2756054477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture2D), "NoiseTexture2D", "get_color_ramp", 132272999i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture2D), "NoiseTexture2D", "set_seamless", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture2D), "NoiseTexture2D", "get_seamless", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture2D), "NoiseTexture2D", "set_invert", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture2D), "NoiseTexture2D", "get_invert", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture2D), "NoiseTexture2D", "set_in_3d_space", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture2D), "NoiseTexture2D", "is_in_3d_space", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture2D), "NoiseTexture2D", "set_as_normal_map", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture2D), "NoiseTexture2D", "is_normal_map", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture2D), "NoiseTexture2D", "set_normalize", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture2D), "NoiseTexture2D", "is_normalized", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture2D), "NoiseTexture2D", "set_seamless_blend_skirt", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture2D), "NoiseTexture2D", "get_seamless_blend_skirt", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture2D), "NoiseTexture2D", "set_bump_strength", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture2D), "NoiseTexture2D", "get_bump_strength", 191475506i64),);
    
}
fn load_NoiseTexture3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_NoiseTexture3D = string_names.fetch("NoiseTexture3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture3D), "NoiseTexture3D", "set_width", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture3D), "NoiseTexture3D", "set_height", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture3D), "NoiseTexture3D", "set_depth", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture3D), "NoiseTexture3D", "set_noise", 4135492439i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture3D), "NoiseTexture3D", "get_noise", 185851837i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture3D), "NoiseTexture3D", "set_color_ramp", 2756054477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture3D), "NoiseTexture3D", "get_color_ramp", 132272999i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture3D), "NoiseTexture3D", "set_seamless", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture3D), "NoiseTexture3D", "get_seamless", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture3D), "NoiseTexture3D", "set_invert", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture3D), "NoiseTexture3D", "get_invert", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture3D), "NoiseTexture3D", "set_normalize", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture3D), "NoiseTexture3D", "is_normalized", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture3D), "NoiseTexture3D", "set_seamless_blend_skirt", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_NoiseTexture3D), "NoiseTexture3D", "get_seamless_blend_skirt", 191475506i64),);
    
}
fn load_Occluder3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Occluder3D = string_names.fetch("Occluder3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Occluder3D), "Occluder3D", "get_vertices", 497664490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Occluder3D), "Occluder3D", "get_indices", 1930428628i64),);
    
}
fn load_OccluderInstance3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OccluderInstance3D = string_names.fetch("OccluderInstance3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OccluderInstance3D), "OccluderInstance3D", "set_bake_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OccluderInstance3D), "OccluderInstance3D", "get_bake_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OccluderInstance3D), "OccluderInstance3D", "set_bake_mask_value", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OccluderInstance3D), "OccluderInstance3D", "get_bake_mask_value", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OccluderInstance3D), "OccluderInstance3D", "set_bake_simplification_distance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OccluderInstance3D), "OccluderInstance3D", "get_bake_simplification_distance", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OccluderInstance3D), "OccluderInstance3D", "set_occluder", 1664878165i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OccluderInstance3D), "OccluderInstance3D", "get_occluder", 1696836198i64),);
    
}
fn load_OccluderPolygon2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OccluderPolygon2D = string_names.fetch("OccluderPolygon2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OccluderPolygon2D), "OccluderPolygon2D", "set_closed", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OccluderPolygon2D), "OccluderPolygon2D", "is_closed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OccluderPolygon2D), "OccluderPolygon2D", "set_cull_mode", 3500863002i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OccluderPolygon2D), "OccluderPolygon2D", "get_cull_mode", 33931036i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OccluderPolygon2D), "OccluderPolygon2D", "set_polygon", 1509147220i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OccluderPolygon2D), "OccluderPolygon2D", "get_polygon", 2961356807i64),);
    
}
fn load_OggPacketSequence_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OggPacketSequence = string_names.fetch("OggPacketSequence");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OggPacketSequence), "OggPacketSequence", "set_packet_data", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OggPacketSequence), "OggPacketSequence", "get_packet_data", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OggPacketSequence), "OggPacketSequence", "set_packet_granule_positions", 3709968205i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OggPacketSequence), "OggPacketSequence", "get_packet_granule_positions", 235988956i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OggPacketSequence), "OggPacketSequence", "set_sampling_rate", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OggPacketSequence), "OggPacketSequence", "get_sampling_rate", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OggPacketSequence), "OggPacketSequence", "get_length", 1740695150i64),);
    
}
fn load_OmniLight3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OmniLight3D = string_names.fetch("OmniLight3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OmniLight3D), "OmniLight3D", "set_shadow_mode", 121862228i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OmniLight3D), "OmniLight3D", "get_shadow_mode", 4181586331i64),);
    
}
fn load_OpenXRAPIExtension_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OpenXRAPIExtension = string_names.fetch("OpenXRAPIExtension");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "get_instance", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "get_system_id", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "get_session", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "transform_from_pose", 2963875352i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "xr_result", 3886436197i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "openxr_is_enabled", 2703660260i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "get_instance_proc_addr", 1597066294i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "get_error_string", 990163283i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "get_swapchain_format_name", 990163283i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "set_object_name", 2285447957i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "begin_debug_label_region", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "end_debug_label_region", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "insert_debug_label", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "is_initialized", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "is_running", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "set_custom_play_space", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "get_play_space", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "get_predicted_display_time", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "get_next_frame_time", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "can_render", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "find_action", 4106179378i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "action_get_handle", 3917799429i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "get_hand_tracker", 3744713108i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "register_composition_layer_provider", 1477360496i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "unregister_composition_layer_provider", 1477360496i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "register_projection_views_extension", 1477360496i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "unregister_projection_views_extension", 1477360496i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "register_frame_info_extension", 1477360496i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "unregister_frame_info_extension", 1477360496i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "get_render_state_z_near", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "get_render_state_z_far", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "set_velocity_texture", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "set_velocity_depth_texture", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "set_velocity_target_size", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "get_supported_swapchain_formats", 3851388692i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "openxr_swapchain_create", 2162228999i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "openxr_swapchain_free", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "openxr_swapchain_get_swapchain", 3744713108i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "openxr_swapchain_acquire", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "openxr_swapchain_get_image", 937000113i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "openxr_swapchain_release", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "get_projection_layer", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "set_render_region", 1763793166i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "set_emulate_environment_blend_mode_alpha_blend", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAPIExtension), "OpenXRAPIExtension", "is_environment_blend_mode_alpha_supported", 1579290861i64),);
    
}
fn load_OpenXRAction_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OpenXRAction = string_names.fetch("OpenXRAction");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAction), "OpenXRAction", "set_localized_name", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAction), "OpenXRAction", "get_localized_name", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAction), "OpenXRAction", "set_action_type", 1675238366i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAction), "OpenXRAction", "get_action_type", 3536542431i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAction), "OpenXRAction", "set_toplevel_paths", 4015028928i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAction), "OpenXRAction", "get_toplevel_paths", 1139954409i64),);
    
}
fn load_OpenXRActionMap_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OpenXRActionMap = string_names.fetch("OpenXRActionMap");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionMap), "OpenXRActionMap", "set_action_sets", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionMap), "OpenXRActionMap", "get_action_sets", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionMap), "OpenXRActionMap", "get_action_set_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionMap), "OpenXRActionMap", "find_action_set", 1888809267i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionMap), "OpenXRActionMap", "get_action_set", 1789580336i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionMap), "OpenXRActionMap", "add_action_set", 2093310581i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionMap), "OpenXRActionMap", "remove_action_set", 2093310581i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionMap), "OpenXRActionMap", "set_interaction_profiles", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionMap), "OpenXRActionMap", "get_interaction_profiles", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionMap), "OpenXRActionMap", "get_interaction_profile_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionMap), "OpenXRActionMap", "find_interaction_profile", 3095875538i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionMap), "OpenXRActionMap", "get_interaction_profile", 2546151210i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionMap), "OpenXRActionMap", "add_interaction_profile", 2697953512i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionMap), "OpenXRActionMap", "remove_interaction_profile", 2697953512i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionMap), "OpenXRActionMap", "create_default_action_sets", 3218959716i64),);
    
}
fn load_OpenXRActionSet_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OpenXRActionSet = string_names.fetch("OpenXRActionSet");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionSet), "OpenXRActionSet", "set_localized_name", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionSet), "OpenXRActionSet", "get_localized_name", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionSet), "OpenXRActionSet", "set_priority", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionSet), "OpenXRActionSet", "get_priority", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionSet), "OpenXRActionSet", "get_action_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionSet), "OpenXRActionSet", "set_actions", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionSet), "OpenXRActionSet", "get_actions", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionSet), "OpenXRActionSet", "add_action", 349361333i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRActionSet), "OpenXRActionSet", "remove_action", 349361333i64),);
    
}
fn load_OpenXRAnalogThresholdModifier_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OpenXRAnalogThresholdModifier = string_names.fetch("OpenXRAnalogThresholdModifier");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAnalogThresholdModifier), "OpenXRAnalogThresholdModifier", "set_on_threshold", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAnalogThresholdModifier), "OpenXRAnalogThresholdModifier", "get_on_threshold", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAnalogThresholdModifier), "OpenXRAnalogThresholdModifier", "set_off_threshold", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAnalogThresholdModifier), "OpenXRAnalogThresholdModifier", "get_off_threshold", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAnalogThresholdModifier), "OpenXRAnalogThresholdModifier", "set_on_haptic", 2998020150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAnalogThresholdModifier), "OpenXRAnalogThresholdModifier", "get_on_haptic", 922310751i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAnalogThresholdModifier), "OpenXRAnalogThresholdModifier", "set_off_haptic", 2998020150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRAnalogThresholdModifier), "OpenXRAnalogThresholdModifier", "get_off_haptic", 922310751i64),);
    
}
fn load_OpenXRCompositionLayer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OpenXRCompositionLayer = string_names.fetch("OpenXRCompositionLayer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "set_layer_viewport", 3888077664i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "get_layer_viewport", 3750751911i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "set_use_android_surface", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "get_use_android_surface", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "set_android_surface_size", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "get_android_surface_size", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "set_enable_hole_punch", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "get_enable_hole_punch", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "set_sort_order", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "get_sort_order", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "set_alpha_blend", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "get_alpha_blend", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "is_natively_supported", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "set_min_filter", 3653437593i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "get_min_filter", 845677307i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "set_mag_filter", 3653437593i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "get_mag_filter", 845677307i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "set_mipmap_mode", 3271133183i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "get_mipmap_mode", 3962697095i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "set_horizontal_wrap", 15634990i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "get_horizontal_wrap", 2798816834i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "set_vertical_wrap", 15634990i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "get_vertical_wrap", 2798816834i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "set_red_swizzle", 741598951i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "get_red_swizzle", 2334776767i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "set_green_swizzle", 741598951i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "get_green_swizzle", 2334776767i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "set_blue_swizzle", 741598951i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "get_blue_swizzle", 2334776767i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "set_alpha_swizzle", 741598951i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "get_alpha_swizzle", 2334776767i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "set_max_anisotropy", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "get_max_anisotropy", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "set_border_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "get_border_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayer), "OpenXRCompositionLayer", "intersects_ray", 1091262597i64),);
    
}
fn load_OpenXRCompositionLayerCylinder_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OpenXRCompositionLayerCylinder = string_names.fetch("OpenXRCompositionLayerCylinder");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayerCylinder), "OpenXRCompositionLayerCylinder", "set_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayerCylinder), "OpenXRCompositionLayerCylinder", "get_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayerCylinder), "OpenXRCompositionLayerCylinder", "set_aspect_ratio", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayerCylinder), "OpenXRCompositionLayerCylinder", "get_aspect_ratio", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayerCylinder), "OpenXRCompositionLayerCylinder", "set_central_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayerCylinder), "OpenXRCompositionLayerCylinder", "get_central_angle", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayerCylinder), "OpenXRCompositionLayerCylinder", "set_fallback_segments", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayerCylinder), "OpenXRCompositionLayerCylinder", "get_fallback_segments", 3905245786i64),);
    
}
fn load_OpenXRCompositionLayerEquirect_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OpenXRCompositionLayerEquirect = string_names.fetch("OpenXRCompositionLayerEquirect");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayerEquirect), "OpenXRCompositionLayerEquirect", "set_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayerEquirect), "OpenXRCompositionLayerEquirect", "get_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayerEquirect), "OpenXRCompositionLayerEquirect", "set_central_horizontal_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayerEquirect), "OpenXRCompositionLayerEquirect", "get_central_horizontal_angle", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayerEquirect), "OpenXRCompositionLayerEquirect", "set_upper_vertical_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayerEquirect), "OpenXRCompositionLayerEquirect", "get_upper_vertical_angle", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayerEquirect), "OpenXRCompositionLayerEquirect", "set_lower_vertical_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayerEquirect), "OpenXRCompositionLayerEquirect", "get_lower_vertical_angle", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayerEquirect), "OpenXRCompositionLayerEquirect", "set_fallback_segments", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayerEquirect), "OpenXRCompositionLayerEquirect", "get_fallback_segments", 3905245786i64),);
    
}
fn load_OpenXRCompositionLayerQuad_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OpenXRCompositionLayerQuad = string_names.fetch("OpenXRCompositionLayerQuad");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayerQuad), "OpenXRCompositionLayerQuad", "set_quad_size", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRCompositionLayerQuad), "OpenXRCompositionLayerQuad", "get_quad_size", 3341600327i64),);
    
}
fn load_OpenXRDpadBindingModifier_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OpenXRDpadBindingModifier = string_names.fetch("OpenXRDpadBindingModifier");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRDpadBindingModifier), "OpenXRDpadBindingModifier", "set_action_set", 2093310581i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRDpadBindingModifier), "OpenXRDpadBindingModifier", "get_action_set", 619941079i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRDpadBindingModifier), "OpenXRDpadBindingModifier", "set_input_path", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRDpadBindingModifier), "OpenXRDpadBindingModifier", "get_input_path", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRDpadBindingModifier), "OpenXRDpadBindingModifier", "set_threshold", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRDpadBindingModifier), "OpenXRDpadBindingModifier", "get_threshold", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRDpadBindingModifier), "OpenXRDpadBindingModifier", "set_threshold_released", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRDpadBindingModifier), "OpenXRDpadBindingModifier", "get_threshold_released", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRDpadBindingModifier), "OpenXRDpadBindingModifier", "set_center_region", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRDpadBindingModifier), "OpenXRDpadBindingModifier", "get_center_region", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRDpadBindingModifier), "OpenXRDpadBindingModifier", "set_wedge_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRDpadBindingModifier), "OpenXRDpadBindingModifier", "get_wedge_angle", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRDpadBindingModifier), "OpenXRDpadBindingModifier", "set_is_sticky", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRDpadBindingModifier), "OpenXRDpadBindingModifier", "get_is_sticky", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRDpadBindingModifier), "OpenXRDpadBindingModifier", "set_on_haptic", 2998020150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRDpadBindingModifier), "OpenXRDpadBindingModifier", "get_on_haptic", 922310751i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRDpadBindingModifier), "OpenXRDpadBindingModifier", "set_off_haptic", 2998020150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRDpadBindingModifier), "OpenXRDpadBindingModifier", "get_off_haptic", 922310751i64),);
    
}
fn load_OpenXRExtensionWrapper_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OpenXRExtensionWrapper = string_names.fetch("OpenXRExtensionWrapper");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRExtensionWrapper), "OpenXRExtensionWrapper", "get_openxr_api", 1637791613i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRExtensionWrapper), "OpenXRExtensionWrapper", "register_extension_wrapper", 3218959716i64),);
    
}
fn load_OpenXRFutureExtension_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OpenXRFutureExtension = string_names.fetch("OpenXRFutureExtension");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRFutureExtension), "OpenXRFutureExtension", "is_active", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRFutureExtension), "OpenXRFutureExtension", "register_future", 1038012256i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRFutureExtension), "OpenXRFutureExtension", "cancel_future", 1286410249i64),);
    
}
fn load_OpenXRFutureResult_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OpenXRFutureResult = string_names.fetch("OpenXRFutureResult");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRFutureResult), "OpenXRFutureResult", "get_status", 2023607463i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRFutureResult), "OpenXRFutureResult", "get_future", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRFutureResult), "OpenXRFutureResult", "cancel_future", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRFutureResult), "OpenXRFutureResult", "set_result_value", 1114965689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRFutureResult), "OpenXRFutureResult", "get_result_value", 1214101251i64),);
    
}
fn load_OpenXRHand_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OpenXRHand = string_names.fetch("OpenXRHand");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRHand), "OpenXRHand", "set_hand", 1849328560i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRHand), "OpenXRHand", "get_hand", 2850644561i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRHand), "OpenXRHand", "set_motion_range", 3326516003i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRHand), "OpenXRHand", "get_motion_range", 2191822314i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRHand), "OpenXRHand", "set_skeleton_rig", 1528072213i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRHand), "OpenXRHand", "get_skeleton_rig", 968409338i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRHand), "OpenXRHand", "set_bone_update", 3144625444i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRHand), "OpenXRHand", "get_bone_update", 1310695248i64),);
    
}
fn load_OpenXRHapticVibration_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OpenXRHapticVibration = string_names.fetch("OpenXRHapticVibration");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRHapticVibration), "OpenXRHapticVibration", "set_duration", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRHapticVibration), "OpenXRHapticVibration", "get_duration", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRHapticVibration), "OpenXRHapticVibration", "set_frequency", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRHapticVibration), "OpenXRHapticVibration", "get_frequency", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRHapticVibration), "OpenXRHapticVibration", "set_amplitude", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRHapticVibration), "OpenXRHapticVibration", "get_amplitude", 1740695150i64),);
    
}
fn load_OpenXRIPBinding_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OpenXRIPBinding = string_names.fetch("OpenXRIPBinding");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRIPBinding), "OpenXRIPBinding", "set_action", 349361333i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRIPBinding), "OpenXRIPBinding", "get_action", 4072409085i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRIPBinding), "OpenXRIPBinding", "set_binding_path", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRIPBinding), "OpenXRIPBinding", "get_binding_path", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRIPBinding), "OpenXRIPBinding", "get_binding_modifier_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRIPBinding), "OpenXRIPBinding", "get_binding_modifier", 3538296211i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRIPBinding), "OpenXRIPBinding", "set_binding_modifiers", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRIPBinding), "OpenXRIPBinding", "get_binding_modifiers", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRIPBinding), "OpenXRIPBinding", "set_paths", 4015028928i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRIPBinding), "OpenXRIPBinding", "get_paths", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRIPBinding), "OpenXRIPBinding", "get_path_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRIPBinding), "OpenXRIPBinding", "has_path", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRIPBinding), "OpenXRIPBinding", "add_path", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRIPBinding), "OpenXRIPBinding", "remove_path", 83702148i64),);
    
}
fn load_OpenXRInteractionProfile_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OpenXRInteractionProfile = string_names.fetch("OpenXRInteractionProfile");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInteractionProfile), "OpenXRInteractionProfile", "set_interaction_profile_path", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInteractionProfile), "OpenXRInteractionProfile", "get_interaction_profile_path", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInteractionProfile), "OpenXRInteractionProfile", "get_binding_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInteractionProfile), "OpenXRInteractionProfile", "get_binding", 3934429652i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInteractionProfile), "OpenXRInteractionProfile", "set_bindings", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInteractionProfile), "OpenXRInteractionProfile", "get_bindings", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInteractionProfile), "OpenXRInteractionProfile", "get_binding_modifier_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInteractionProfile), "OpenXRInteractionProfile", "get_binding_modifier", 2419896583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInteractionProfile), "OpenXRInteractionProfile", "set_binding_modifiers", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInteractionProfile), "OpenXRInteractionProfile", "get_binding_modifiers", 3995934104i64),);
    
}
fn load_OpenXRInteractionProfileMetadata_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OpenXRInteractionProfileMetadata = string_names.fetch("OpenXRInteractionProfileMetadata");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInteractionProfileMetadata), "OpenXRInteractionProfileMetadata", "register_profile_rename", 3186203200i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInteractionProfileMetadata), "OpenXRInteractionProfileMetadata", "register_top_level_path", 254767734i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInteractionProfileMetadata), "OpenXRInteractionProfileMetadata", "register_interaction_profile", 254767734i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInteractionProfileMetadata), "OpenXRInteractionProfileMetadata", "register_io_path", 3443511926i64),);
    
}
fn load_OpenXRInterface_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OpenXRInterface = string_names.fetch("OpenXRInterface");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "get_session_state", 896364779i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "get_display_refresh_rate", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "set_display_refresh_rate", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "get_render_target_size_multiplier", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "set_render_target_size_multiplier", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "is_foveation_supported", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "get_foveation_level", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "set_foveation_level", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "get_foveation_dynamic", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "set_foveation_dynamic", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "is_action_set_active", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "set_action_set_active", 2678287736i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "get_action_sets", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "get_available_display_refresh_rates", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "set_motion_range", 855158159i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "get_motion_range", 3955838114i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "get_hand_tracking_source", 4092421202i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "get_hand_joint_flags", 720567706i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "get_hand_joint_rotation", 1974618321i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "get_hand_joint_position", 3529194242i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "get_hand_joint_radius", 901522724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "get_hand_joint_linear_velocity", 3529194242i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "get_hand_joint_angular_velocity", 3529194242i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "is_hand_tracking_supported", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "is_hand_interaction_supported", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "is_eye_gaze_interaction_supported", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "get_vrs_min_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "set_vrs_min_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "get_vrs_strength", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "set_vrs_strength", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "set_cpu_level", 2940842095i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRInterface), "OpenXRInterface", "set_gpu_level", 2940842095i64),);
    
}
fn load_OpenXRRenderModel_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OpenXRRenderModel = string_names.fetch("OpenXRRenderModel");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRRenderModel), "OpenXRRenderModel", "get_top_level_path", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRRenderModel), "OpenXRRenderModel", "get_render_model", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRRenderModel), "OpenXRRenderModel", "set_render_model", 2722037293i64),);
    
}
fn load_OpenXRRenderModelExtension_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OpenXRRenderModelExtension = string_names.fetch("OpenXRRenderModelExtension");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRRenderModelExtension), "OpenXRRenderModelExtension", "is_active", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRRenderModelExtension), "OpenXRRenderModelExtension", "render_model_create", 937000113i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRRenderModelExtension), "OpenXRRenderModelExtension", "render_model_destroy", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRRenderModelExtension), "OpenXRRenderModelExtension", "render_model_get_all", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRRenderModelExtension), "OpenXRRenderModelExtension", "render_model_new_scene_instance", 788010739i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRRenderModelExtension), "OpenXRRenderModelExtension", "render_model_get_subaction_paths", 2801473409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRRenderModelExtension), "OpenXRRenderModelExtension", "render_model_get_top_level_path", 642473191i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRRenderModelExtension), "OpenXRRenderModelExtension", "render_model_get_confidence", 2350330949i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRRenderModelExtension), "OpenXRRenderModelExtension", "render_model_get_root_transform", 1128465797i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRRenderModelExtension), "OpenXRRenderModelExtension", "render_model_get_animatable_node_count", 2198884583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRRenderModelExtension), "OpenXRRenderModelExtension", "render_model_get_animatable_node_name", 1464764419i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRRenderModelExtension), "OpenXRRenderModelExtension", "render_model_is_animatable_node_visible", 3120086654i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRRenderModelExtension), "OpenXRRenderModelExtension", "render_model_get_animatable_node_transform", 1050775521i64),);
    
}
fn load_OpenXRRenderModelManager_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OpenXRRenderModelManager = string_names.fetch("OpenXRRenderModelManager");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRRenderModelManager), "OpenXRRenderModelManager", "get_tracker", 2456466356i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRRenderModelManager), "OpenXRRenderModelManager", "set_tracker", 2814627380i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRRenderModelManager), "OpenXRRenderModelManager", "get_make_local_to_pose", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OpenXRRenderModelManager), "OpenXRRenderModelManager", "set_make_local_to_pose", 83702148i64),);
    
}
fn load_OptimizedTranslation_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OptimizedTranslation = string_names.fetch("OptimizedTranslation");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptimizedTranslation), "OptimizedTranslation", "generate", 1466479800i64),);
    
}
fn load_OptionButton_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_OptionButton = string_names.fetch("OptionButton");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "add_item", 2697778442i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "add_icon_item", 3781678508i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "set_item_text", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "set_item_icon", 666127730i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "set_item_disabled", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "set_item_id", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "set_item_metadata", 2152698145i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "set_item_tooltip", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "set_item_auto_translate_mode", 287402019i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "get_item_text", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "get_item_icon", 3536238170i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "get_item_id", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "get_item_index", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "get_item_metadata", 4227898402i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "get_item_tooltip", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "get_item_auto_translate_mode", 906302372i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "is_item_disabled", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "is_item_separator", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "add_separator", 3005725572i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "select", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "get_selected", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "get_selected_id", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "get_selected_metadata", 1214101251i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "remove_item", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "get_popup", 229722558i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "show_popup", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "set_item_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "get_item_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "has_selectable_items", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "get_selectable_item", 894402480i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "set_fit_to_longest_item", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "is_fit_to_longest_item", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "set_allow_reselect", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "get_allow_reselect", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_OptionButton), "OptionButton", "set_disable_shortcuts", 2586408642i64),);
    
}
fn load_PCKPacker_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PCKPacker = string_names.fetch("PCKPacker");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PCKPacker), "PCKPacker", "pck_start", 508410629i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PCKPacker), "PCKPacker", "add_file", 2215643711i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PCKPacker), "PCKPacker", "add_file_removal", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PCKPacker), "PCKPacker", "flush", 1633102583i64),);
    
}
fn load_PackedDataContainer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PackedDataContainer = string_names.fetch("PackedDataContainer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PackedDataContainer), "PackedDataContainer", "pack", 966674026i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PackedDataContainer), "PackedDataContainer", "size", 3905245786i64),);
    
}
fn load_PackedDataContainerRef_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PackedDataContainerRef = string_names.fetch("PackedDataContainerRef");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PackedDataContainerRef), "PackedDataContainerRef", "size", 3905245786i64),);
    
}
fn load_PackedScene_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PackedScene = string_names.fetch("PackedScene");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PackedScene), "PackedScene", "pack", 2584678054i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PackedScene), "PackedScene", "instantiate", 2628778455i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PackedScene), "PackedScene", "can_instantiate", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PackedScene), "PackedScene", "get_state", 3479783971i64),);
    
}
fn load_PacketPeer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PacketPeer = string_names.fetch("PacketPeer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeer), "PacketPeer", "get_var", 3442865206i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeer), "PacketPeer", "put_var", 2436251611i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeer), "PacketPeer", "get_packet", 2115431945i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeer), "PacketPeer", "put_packet", 680677267i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeer), "PacketPeer", "get_packet_error", 3185525595i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeer), "PacketPeer", "get_available_packet_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeer), "PacketPeer", "get_encode_buffer_max_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeer), "PacketPeer", "set_encode_buffer_max_size", 1286410249i64),);
    
}
fn load_PacketPeerDTLS_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PacketPeerDTLS = string_names.fetch("PacketPeerDTLS");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerDTLS), "PacketPeerDTLS", "poll", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerDTLS), "PacketPeerDTLS", "connect_to_peer", 2880188099i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerDTLS), "PacketPeerDTLS", "get_status", 3248654679i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerDTLS), "PacketPeerDTLS", "disconnect_from_peer", 3218959716i64),);
    
}
fn load_PacketPeerStream_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PacketPeerStream = string_names.fetch("PacketPeerStream");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerStream), "PacketPeerStream", "set_stream_peer", 3281897016i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerStream), "PacketPeerStream", "get_stream_peer", 2741655269i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerStream), "PacketPeerStream", "set_input_buffer_max_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerStream), "PacketPeerStream", "set_output_buffer_max_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerStream), "PacketPeerStream", "get_input_buffer_max_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerStream), "PacketPeerStream", "get_output_buffer_max_size", 3905245786i64),);
    
}
fn load_PacketPeerUDP_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PacketPeerUDP = string_names.fetch("PacketPeerUDP");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerUDP), "PacketPeerUDP", "bind", 4051239242i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerUDP), "PacketPeerUDP", "close", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerUDP), "PacketPeerUDP", "wait", 166280745i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerUDP), "PacketPeerUDP", "is_bound", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerUDP), "PacketPeerUDP", "connect_to_host", 993915709i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerUDP), "PacketPeerUDP", "is_socket_connected", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerUDP), "PacketPeerUDP", "get_packet_ip", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerUDP), "PacketPeerUDP", "get_packet_port", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerUDP), "PacketPeerUDP", "get_local_port", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerUDP), "PacketPeerUDP", "set_dest_address", 993915709i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerUDP), "PacketPeerUDP", "set_broadcast_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerUDP), "PacketPeerUDP", "join_multicast_group", 852856452i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PacketPeerUDP), "PacketPeerUDP", "leave_multicast_group", 852856452i64),);
    
}
fn load_PanoramaSkyMaterial_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PanoramaSkyMaterial = string_names.fetch("PanoramaSkyMaterial");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PanoramaSkyMaterial), "PanoramaSkyMaterial", "set_panorama", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PanoramaSkyMaterial), "PanoramaSkyMaterial", "get_panorama", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PanoramaSkyMaterial), "PanoramaSkyMaterial", "set_filtering_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PanoramaSkyMaterial), "PanoramaSkyMaterial", "is_filtering_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PanoramaSkyMaterial), "PanoramaSkyMaterial", "set_energy_multiplier", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PanoramaSkyMaterial), "PanoramaSkyMaterial", "get_energy_multiplier", 1740695150i64),);
    
}
fn load_ParallaxBackground_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ParallaxBackground = string_names.fetch("ParallaxBackground");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParallaxBackground), "ParallaxBackground", "set_scroll_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParallaxBackground), "ParallaxBackground", "get_scroll_offset", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParallaxBackground), "ParallaxBackground", "set_scroll_base_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParallaxBackground), "ParallaxBackground", "get_scroll_base_offset", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParallaxBackground), "ParallaxBackground", "set_scroll_base_scale", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParallaxBackground), "ParallaxBackground", "get_scroll_base_scale", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParallaxBackground), "ParallaxBackground", "set_limit_begin", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParallaxBackground), "ParallaxBackground", "get_limit_begin", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParallaxBackground), "ParallaxBackground", "set_limit_end", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParallaxBackground), "ParallaxBackground", "get_limit_end", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParallaxBackground), "ParallaxBackground", "set_ignore_camera_zoom", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParallaxBackground), "ParallaxBackground", "is_ignore_camera_zoom", 2240911060i64),);
    
}
fn load_ParallaxLayer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ParallaxLayer = string_names.fetch("ParallaxLayer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParallaxLayer), "ParallaxLayer", "set_motion_scale", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParallaxLayer), "ParallaxLayer", "get_motion_scale", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParallaxLayer), "ParallaxLayer", "set_motion_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParallaxLayer), "ParallaxLayer", "get_motion_offset", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParallaxLayer), "ParallaxLayer", "set_mirroring", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParallaxLayer), "ParallaxLayer", "get_mirroring", 3341600327i64),);
    
}
fn load_ParticleProcessMaterial_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ParticleProcessMaterial = string_names.fetch("ParticleProcessMaterial");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_direction", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_direction", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_inherit_velocity_ratio", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_inherit_velocity_ratio", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_spread", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_spread", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_flatness", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_flatness", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_param", 676779352i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_param", 2623708480i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_param_min", 2295964248i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_param_min", 3903786503i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_param_max", 2295964248i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_param_max", 3903786503i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_param_texture", 526976089i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_param_texture", 3489372978i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_color_ramp", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_color_ramp", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_alpha_curve", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_alpha_curve", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_emission_curve", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_emission_curve", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_color_initial_ramp", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_color_initial_ramp", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_velocity_limit_curve", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_velocity_limit_curve", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_particle_flag", 1711815571i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_particle_flag", 3895316907i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_velocity_pivot", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_velocity_pivot", 3783033775i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_emission_shape", 461501442i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_emission_shape", 3719733018i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_emission_sphere_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_emission_sphere_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_emission_box_extents", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_emission_box_extents", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_emission_point_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_emission_point_texture", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_emission_normal_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_emission_normal_texture", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_emission_color_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_emission_color_texture", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_emission_point_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_emission_point_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_emission_ring_axis", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_emission_ring_axis", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_emission_ring_height", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_emission_ring_height", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_emission_ring_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_emission_ring_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_emission_ring_inner_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_emission_ring_inner_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_emission_ring_cone_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_emission_ring_cone_angle", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_emission_shape_offset", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_emission_shape_offset", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_emission_shape_scale", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_emission_shape_scale", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_turbulence_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_turbulence_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_turbulence_noise_strength", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_turbulence_noise_strength", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_turbulence_noise_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_turbulence_noise_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_turbulence_noise_speed_random", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_turbulence_noise_speed_random", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_turbulence_noise_speed", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_turbulence_noise_speed", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_gravity", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_gravity", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_lifetime_randomness", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_lifetime_randomness", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_sub_emitter_mode", 2399052877i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_sub_emitter_mode", 2161806672i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_sub_emitter_frequency", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_sub_emitter_frequency", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_sub_emitter_amount_at_end", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_sub_emitter_amount_at_end", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_sub_emitter_amount_at_collision", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_sub_emitter_amount_at_collision", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_sub_emitter_amount_at_start", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_sub_emitter_amount_at_start", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_sub_emitter_keep_velocity", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_sub_emitter_keep_velocity", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_attractor_interaction_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "is_attractor_interaction_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_collision_mode", 653804659i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_collision_mode", 139371864i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_collision_use_scale", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "is_collision_using_scale", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_collision_friction", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_collision_friction", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "set_collision_bounce", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ParticleProcessMaterial), "ParticleProcessMaterial", "get_collision_bounce", 1740695150i64),);
    
}
fn load_Path2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Path2D = string_names.fetch("Path2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Path2D), "Path2D", "set_curve", 659985499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Path2D), "Path2D", "get_curve", 660369445i64),);
    
}
fn load_Path3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Path3D = string_names.fetch("Path3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Path3D), "Path3D", "set_curve", 408955118i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Path3D), "Path3D", "get_curve", 4244715212i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Path3D), "Path3D", "set_debug_custom_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Path3D), "Path3D", "get_debug_custom_color", 3444240500i64),);
    
}
fn load_PathFollow2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PathFollow2D = string_names.fetch("PathFollow2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow2D), "PathFollow2D", "set_progress", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow2D), "PathFollow2D", "get_progress", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow2D), "PathFollow2D", "set_h_offset", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow2D), "PathFollow2D", "get_h_offset", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow2D), "PathFollow2D", "set_v_offset", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow2D), "PathFollow2D", "get_v_offset", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow2D), "PathFollow2D", "set_progress_ratio", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow2D), "PathFollow2D", "get_progress_ratio", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow2D), "PathFollow2D", "set_rotates", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow2D), "PathFollow2D", "is_rotating", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow2D), "PathFollow2D", "set_cubic_interpolation", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow2D), "PathFollow2D", "get_cubic_interpolation", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow2D), "PathFollow2D", "set_loop", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow2D), "PathFollow2D", "has_loop", 36873697i64),);
    
}
fn load_PathFollow3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PathFollow3D = string_names.fetch("PathFollow3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow3D), "PathFollow3D", "set_progress", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow3D), "PathFollow3D", "get_progress", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow3D), "PathFollow3D", "set_h_offset", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow3D), "PathFollow3D", "get_h_offset", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow3D), "PathFollow3D", "set_v_offset", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow3D), "PathFollow3D", "get_v_offset", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow3D), "PathFollow3D", "set_progress_ratio", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow3D), "PathFollow3D", "get_progress_ratio", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow3D), "PathFollow3D", "set_rotation_mode", 1640311967i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow3D), "PathFollow3D", "get_rotation_mode", 3814010545i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow3D), "PathFollow3D", "set_cubic_interpolation", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow3D), "PathFollow3D", "get_cubic_interpolation", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow3D), "PathFollow3D", "set_use_model_front", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow3D), "PathFollow3D", "is_using_model_front", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow3D), "PathFollow3D", "set_loop", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow3D), "PathFollow3D", "has_loop", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow3D), "PathFollow3D", "set_tilt_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow3D), "PathFollow3D", "is_tilt_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PathFollow3D), "PathFollow3D", "correct_posture", 2686588690i64),);
    
}
fn load_Performance_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Performance = string_names.fetch("Performance");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Performance), "Performance", "get_monitor", 1943275655i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Performance), "Performance", "add_custom_monitor", 4099036814i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Performance), "Performance", "remove_custom_monitor", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Performance), "Performance", "has_custom_monitor", 2041966384i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Performance), "Performance", "get_custom_monitor", 2138907829i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Performance), "Performance", "get_monitor_modification_time", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Performance), "Performance", "get_custom_monitor_names", 2915620761i64),);
    
}
fn load_PhysicalBone2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PhysicalBone2D = string_names.fetch("PhysicalBone2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone2D), "PhysicalBone2D", "get_joint", 3582132112i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone2D), "PhysicalBone2D", "get_auto_configure_joint", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone2D), "PhysicalBone2D", "set_auto_configure_joint", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone2D), "PhysicalBone2D", "set_simulate_physics", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone2D), "PhysicalBone2D", "get_simulate_physics", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone2D), "PhysicalBone2D", "is_simulating_physics", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone2D), "PhysicalBone2D", "set_bone2d_nodepath", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone2D), "PhysicalBone2D", "get_bone2d_nodepath", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone2D), "PhysicalBone2D", "set_bone2d_index", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone2D), "PhysicalBone2D", "get_bone2d_index", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone2D), "PhysicalBone2D", "set_follow_bone_when_simulating", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone2D), "PhysicalBone2D", "get_follow_bone_when_simulating", 36873697i64),);
    
}
fn load_PhysicalBone3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PhysicalBone3D = string_names.fetch("PhysicalBone3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "apply_central_impulse", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "apply_impulse", 2754756483i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "set_joint_type", 2289552604i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "get_joint_type", 931347320i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "set_joint_offset", 2952846383i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "get_joint_offset", 3229777777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "set_joint_rotation", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "get_joint_rotation", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "set_body_offset", 2952846383i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "get_body_offset", 3229777777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "get_simulate_physics", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "is_simulating_physics", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "get_bone_id", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "set_mass", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "get_mass", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "set_friction", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "get_friction", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "set_bounce", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "get_bounce", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "set_gravity_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "get_gravity_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "set_linear_damp_mode", 1244972221i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "get_linear_damp_mode", 205884699i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "set_angular_damp_mode", 1244972221i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "get_angular_damp_mode", 205884699i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "set_linear_damp", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "get_linear_damp", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "set_angular_damp", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "get_angular_damp", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "set_linear_velocity", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "get_linear_velocity", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "set_angular_velocity", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "get_angular_velocity", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "set_use_custom_integrator", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "is_using_custom_integrator", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "set_can_sleep", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBone3D), "PhysicalBone3D", "is_able_to_sleep", 36873697i64),);
    
}
fn load_PhysicalBoneSimulator3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PhysicalBoneSimulator3D = string_names.fetch("PhysicalBoneSimulator3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBoneSimulator3D), "PhysicalBoneSimulator3D", "is_simulating_physics", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBoneSimulator3D), "PhysicalBoneSimulator3D", "physical_bones_stop_simulation", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBoneSimulator3D), "PhysicalBoneSimulator3D", "physical_bones_start_simulation", 2787316981i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBoneSimulator3D), "PhysicalBoneSimulator3D", "physical_bones_add_collision_exception", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalBoneSimulator3D), "PhysicalBoneSimulator3D", "physical_bones_remove_collision_exception", 2722037293i64),);
    
}
fn load_PhysicalSkyMaterial_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PhysicalSkyMaterial = string_names.fetch("PhysicalSkyMaterial");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalSkyMaterial), "PhysicalSkyMaterial", "set_rayleigh_coefficient", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalSkyMaterial), "PhysicalSkyMaterial", "get_rayleigh_coefficient", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalSkyMaterial), "PhysicalSkyMaterial", "set_rayleigh_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalSkyMaterial), "PhysicalSkyMaterial", "get_rayleigh_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalSkyMaterial), "PhysicalSkyMaterial", "set_mie_coefficient", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalSkyMaterial), "PhysicalSkyMaterial", "get_mie_coefficient", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalSkyMaterial), "PhysicalSkyMaterial", "set_mie_eccentricity", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalSkyMaterial), "PhysicalSkyMaterial", "get_mie_eccentricity", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalSkyMaterial), "PhysicalSkyMaterial", "set_mie_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalSkyMaterial), "PhysicalSkyMaterial", "get_mie_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalSkyMaterial), "PhysicalSkyMaterial", "set_turbidity", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalSkyMaterial), "PhysicalSkyMaterial", "get_turbidity", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalSkyMaterial), "PhysicalSkyMaterial", "set_sun_disk_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalSkyMaterial), "PhysicalSkyMaterial", "get_sun_disk_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalSkyMaterial), "PhysicalSkyMaterial", "set_ground_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalSkyMaterial), "PhysicalSkyMaterial", "get_ground_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalSkyMaterial), "PhysicalSkyMaterial", "set_energy_multiplier", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalSkyMaterial), "PhysicalSkyMaterial", "get_energy_multiplier", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalSkyMaterial), "PhysicalSkyMaterial", "set_use_debanding", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalSkyMaterial), "PhysicalSkyMaterial", "get_use_debanding", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalSkyMaterial), "PhysicalSkyMaterial", "set_night_sky", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicalSkyMaterial), "PhysicalSkyMaterial", "get_night_sky", 3635182373i64),);
    
}
fn load_PhysicsBody2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PhysicsBody2D = string_names.fetch("PhysicsBody2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsBody2D), "PhysicsBody2D", "move_and_collide", 3681923724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsBody2D), "PhysicsBody2D", "test_move", 3324464701i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsBody2D), "PhysicsBody2D", "get_gravity", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsBody2D), "PhysicsBody2D", "get_collision_exceptions", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsBody2D), "PhysicsBody2D", "add_collision_exception_with", 1078189570i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsBody2D), "PhysicsBody2D", "remove_collision_exception_with", 1078189570i64),);
    
}
fn load_PhysicsBody3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PhysicsBody3D = string_names.fetch("PhysicsBody3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsBody3D), "PhysicsBody3D", "move_and_collide", 3208792678i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsBody3D), "PhysicsBody3D", "test_move", 2481691619i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsBody3D), "PhysicsBody3D", "get_gravity", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsBody3D), "PhysicsBody3D", "set_axis_lock", 1787895195i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsBody3D), "PhysicsBody3D", "get_axis_lock", 2264617709i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsBody3D), "PhysicsBody3D", "get_collision_exceptions", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsBody3D), "PhysicsBody3D", "add_collision_exception_with", 1078189570i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsBody3D), "PhysicsBody3D", "remove_collision_exception_with", 1078189570i64),);
    
}
fn load_PhysicsMaterial_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PhysicsMaterial = string_names.fetch("PhysicsMaterial");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsMaterial), "PhysicsMaterial", "set_friction", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsMaterial), "PhysicsMaterial", "get_friction", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsMaterial), "PhysicsMaterial", "set_rough", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsMaterial), "PhysicsMaterial", "is_rough", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsMaterial), "PhysicsMaterial", "set_bounce", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsMaterial), "PhysicsMaterial", "get_bounce", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsMaterial), "PhysicsMaterial", "set_absorbent", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsMaterial), "PhysicsMaterial", "is_absorbent", 36873697i64),);
    
}
fn load_PhysicsPointQueryParameters2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PhysicsPointQueryParameters2D = string_names.fetch("PhysicsPointQueryParameters2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsPointQueryParameters2D), "PhysicsPointQueryParameters2D", "set_position", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsPointQueryParameters2D), "PhysicsPointQueryParameters2D", "get_position", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsPointQueryParameters2D), "PhysicsPointQueryParameters2D", "set_canvas_instance_id", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsPointQueryParameters2D), "PhysicsPointQueryParameters2D", "get_canvas_instance_id", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsPointQueryParameters2D), "PhysicsPointQueryParameters2D", "set_collision_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsPointQueryParameters2D), "PhysicsPointQueryParameters2D", "get_collision_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsPointQueryParameters2D), "PhysicsPointQueryParameters2D", "set_exclude", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsPointQueryParameters2D), "PhysicsPointQueryParameters2D", "get_exclude", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsPointQueryParameters2D), "PhysicsPointQueryParameters2D", "set_collide_with_bodies", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsPointQueryParameters2D), "PhysicsPointQueryParameters2D", "is_collide_with_bodies_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsPointQueryParameters2D), "PhysicsPointQueryParameters2D", "set_collide_with_areas", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsPointQueryParameters2D), "PhysicsPointQueryParameters2D", "is_collide_with_areas_enabled", 36873697i64),);
    
}
fn load_PhysicsPointQueryParameters3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PhysicsPointQueryParameters3D = string_names.fetch("PhysicsPointQueryParameters3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsPointQueryParameters3D), "PhysicsPointQueryParameters3D", "set_position", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsPointQueryParameters3D), "PhysicsPointQueryParameters3D", "get_position", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsPointQueryParameters3D), "PhysicsPointQueryParameters3D", "set_collision_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsPointQueryParameters3D), "PhysicsPointQueryParameters3D", "get_collision_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsPointQueryParameters3D), "PhysicsPointQueryParameters3D", "set_exclude", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsPointQueryParameters3D), "PhysicsPointQueryParameters3D", "get_exclude", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsPointQueryParameters3D), "PhysicsPointQueryParameters3D", "set_collide_with_bodies", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsPointQueryParameters3D), "PhysicsPointQueryParameters3D", "is_collide_with_bodies_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsPointQueryParameters3D), "PhysicsPointQueryParameters3D", "set_collide_with_areas", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsPointQueryParameters3D), "PhysicsPointQueryParameters3D", "is_collide_with_areas_enabled", 36873697i64),);
    
}
fn load_PhysicsRayQueryParameters2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PhysicsRayQueryParameters2D = string_names.fetch("PhysicsRayQueryParameters2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters2D), "PhysicsRayQueryParameters2D", "create", 3196569324i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters2D), "PhysicsRayQueryParameters2D", "set_from", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters2D), "PhysicsRayQueryParameters2D", "get_from", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters2D), "PhysicsRayQueryParameters2D", "set_to", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters2D), "PhysicsRayQueryParameters2D", "get_to", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters2D), "PhysicsRayQueryParameters2D", "set_collision_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters2D), "PhysicsRayQueryParameters2D", "get_collision_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters2D), "PhysicsRayQueryParameters2D", "set_exclude", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters2D), "PhysicsRayQueryParameters2D", "get_exclude", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters2D), "PhysicsRayQueryParameters2D", "set_collide_with_bodies", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters2D), "PhysicsRayQueryParameters2D", "is_collide_with_bodies_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters2D), "PhysicsRayQueryParameters2D", "set_collide_with_areas", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters2D), "PhysicsRayQueryParameters2D", "is_collide_with_areas_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters2D), "PhysicsRayQueryParameters2D", "set_hit_from_inside", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters2D), "PhysicsRayQueryParameters2D", "is_hit_from_inside_enabled", 36873697i64),);
    
}
fn load_PhysicsRayQueryParameters3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PhysicsRayQueryParameters3D = string_names.fetch("PhysicsRayQueryParameters3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters3D), "PhysicsRayQueryParameters3D", "create", 3110599579i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters3D), "PhysicsRayQueryParameters3D", "set_from", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters3D), "PhysicsRayQueryParameters3D", "get_from", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters3D), "PhysicsRayQueryParameters3D", "set_to", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters3D), "PhysicsRayQueryParameters3D", "get_to", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters3D), "PhysicsRayQueryParameters3D", "set_collision_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters3D), "PhysicsRayQueryParameters3D", "get_collision_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters3D), "PhysicsRayQueryParameters3D", "set_exclude", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters3D), "PhysicsRayQueryParameters3D", "get_exclude", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters3D), "PhysicsRayQueryParameters3D", "set_collide_with_bodies", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters3D), "PhysicsRayQueryParameters3D", "is_collide_with_bodies_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters3D), "PhysicsRayQueryParameters3D", "set_collide_with_areas", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters3D), "PhysicsRayQueryParameters3D", "is_collide_with_areas_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters3D), "PhysicsRayQueryParameters3D", "set_hit_from_inside", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters3D), "PhysicsRayQueryParameters3D", "is_hit_from_inside_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters3D), "PhysicsRayQueryParameters3D", "set_hit_back_faces", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsRayQueryParameters3D), "PhysicsRayQueryParameters3D", "is_hit_back_faces_enabled", 36873697i64),);
    
}
fn load_PhysicsShapeQueryParameters2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PhysicsShapeQueryParameters2D = string_names.fetch("PhysicsShapeQueryParameters2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters2D), "PhysicsShapeQueryParameters2D", "set_shape", 968641751i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters2D), "PhysicsShapeQueryParameters2D", "get_shape", 121922552i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters2D), "PhysicsShapeQueryParameters2D", "set_shape_rid", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters2D), "PhysicsShapeQueryParameters2D", "get_shape_rid", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters2D), "PhysicsShapeQueryParameters2D", "set_transform", 2761652528i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters2D), "PhysicsShapeQueryParameters2D", "get_transform", 3814499831i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters2D), "PhysicsShapeQueryParameters2D", "set_motion", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters2D), "PhysicsShapeQueryParameters2D", "get_motion", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters2D), "PhysicsShapeQueryParameters2D", "set_margin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters2D), "PhysicsShapeQueryParameters2D", "get_margin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters2D), "PhysicsShapeQueryParameters2D", "set_collision_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters2D), "PhysicsShapeQueryParameters2D", "get_collision_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters2D), "PhysicsShapeQueryParameters2D", "set_exclude", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters2D), "PhysicsShapeQueryParameters2D", "get_exclude", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters2D), "PhysicsShapeQueryParameters2D", "set_collide_with_bodies", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters2D), "PhysicsShapeQueryParameters2D", "is_collide_with_bodies_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters2D), "PhysicsShapeQueryParameters2D", "set_collide_with_areas", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters2D), "PhysicsShapeQueryParameters2D", "is_collide_with_areas_enabled", 36873697i64),);
    
}
fn load_PhysicsShapeQueryParameters3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PhysicsShapeQueryParameters3D = string_names.fetch("PhysicsShapeQueryParameters3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters3D), "PhysicsShapeQueryParameters3D", "set_shape", 968641751i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters3D), "PhysicsShapeQueryParameters3D", "get_shape", 121922552i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters3D), "PhysicsShapeQueryParameters3D", "set_shape_rid", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters3D), "PhysicsShapeQueryParameters3D", "get_shape_rid", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters3D), "PhysicsShapeQueryParameters3D", "set_transform", 2952846383i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters3D), "PhysicsShapeQueryParameters3D", "get_transform", 3229777777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters3D), "PhysicsShapeQueryParameters3D", "set_motion", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters3D), "PhysicsShapeQueryParameters3D", "get_motion", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters3D), "PhysicsShapeQueryParameters3D", "set_margin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters3D), "PhysicsShapeQueryParameters3D", "get_margin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters3D), "PhysicsShapeQueryParameters3D", "set_collision_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters3D), "PhysicsShapeQueryParameters3D", "get_collision_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters3D), "PhysicsShapeQueryParameters3D", "set_exclude", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters3D), "PhysicsShapeQueryParameters3D", "get_exclude", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters3D), "PhysicsShapeQueryParameters3D", "set_collide_with_bodies", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters3D), "PhysicsShapeQueryParameters3D", "is_collide_with_bodies_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters3D), "PhysicsShapeQueryParameters3D", "set_collide_with_areas", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsShapeQueryParameters3D), "PhysicsShapeQueryParameters3D", "is_collide_with_areas_enabled", 36873697i64),);
    
}
fn load_PhysicsTestMotionParameters2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PhysicsTestMotionParameters2D = string_names.fetch("PhysicsTestMotionParameters2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters2D), "PhysicsTestMotionParameters2D", "get_from", 3814499831i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters2D), "PhysicsTestMotionParameters2D", "set_from", 2761652528i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters2D), "PhysicsTestMotionParameters2D", "get_motion", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters2D), "PhysicsTestMotionParameters2D", "set_motion", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters2D), "PhysicsTestMotionParameters2D", "get_margin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters2D), "PhysicsTestMotionParameters2D", "set_margin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters2D), "PhysicsTestMotionParameters2D", "is_collide_separation_ray_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters2D), "PhysicsTestMotionParameters2D", "set_collide_separation_ray_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters2D), "PhysicsTestMotionParameters2D", "get_exclude_bodies", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters2D), "PhysicsTestMotionParameters2D", "set_exclude_bodies", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters2D), "PhysicsTestMotionParameters2D", "get_exclude_objects", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters2D), "PhysicsTestMotionParameters2D", "set_exclude_objects", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters2D), "PhysicsTestMotionParameters2D", "is_recovery_as_collision_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters2D), "PhysicsTestMotionParameters2D", "set_recovery_as_collision_enabled", 2586408642i64),);
    
}
fn load_PhysicsTestMotionParameters3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PhysicsTestMotionParameters3D = string_names.fetch("PhysicsTestMotionParameters3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters3D), "PhysicsTestMotionParameters3D", "get_from", 3229777777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters3D), "PhysicsTestMotionParameters3D", "set_from", 2952846383i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters3D), "PhysicsTestMotionParameters3D", "get_motion", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters3D), "PhysicsTestMotionParameters3D", "set_motion", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters3D), "PhysicsTestMotionParameters3D", "get_margin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters3D), "PhysicsTestMotionParameters3D", "set_margin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters3D), "PhysicsTestMotionParameters3D", "get_max_collisions", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters3D), "PhysicsTestMotionParameters3D", "set_max_collisions", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters3D), "PhysicsTestMotionParameters3D", "is_collide_separation_ray_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters3D), "PhysicsTestMotionParameters3D", "set_collide_separation_ray_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters3D), "PhysicsTestMotionParameters3D", "get_exclude_bodies", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters3D), "PhysicsTestMotionParameters3D", "set_exclude_bodies", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters3D), "PhysicsTestMotionParameters3D", "get_exclude_objects", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters3D), "PhysicsTestMotionParameters3D", "set_exclude_objects", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters3D), "PhysicsTestMotionParameters3D", "is_recovery_as_collision_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionParameters3D), "PhysicsTestMotionParameters3D", "set_recovery_as_collision_enabled", 2586408642i64),);
    
}
fn load_PhysicsTestMotionResult2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PhysicsTestMotionResult2D = string_names.fetch("PhysicsTestMotionResult2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult2D), "PhysicsTestMotionResult2D", "get_travel", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult2D), "PhysicsTestMotionResult2D", "get_remainder", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult2D), "PhysicsTestMotionResult2D", "get_collision_point", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult2D), "PhysicsTestMotionResult2D", "get_collision_normal", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult2D), "PhysicsTestMotionResult2D", "get_collider_velocity", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult2D), "PhysicsTestMotionResult2D", "get_collider_id", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult2D), "PhysicsTestMotionResult2D", "get_collider_rid", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult2D), "PhysicsTestMotionResult2D", "get_collider", 1981248198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult2D), "PhysicsTestMotionResult2D", "get_collider_shape", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult2D), "PhysicsTestMotionResult2D", "get_collision_local_shape", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult2D), "PhysicsTestMotionResult2D", "get_collision_depth", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult2D), "PhysicsTestMotionResult2D", "get_collision_safe_fraction", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult2D), "PhysicsTestMotionResult2D", "get_collision_unsafe_fraction", 1740695150i64),);
    
}
fn load_PhysicsTestMotionResult3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PhysicsTestMotionResult3D = string_names.fetch("PhysicsTestMotionResult3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult3D), "PhysicsTestMotionResult3D", "get_travel", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult3D), "PhysicsTestMotionResult3D", "get_remainder", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult3D), "PhysicsTestMotionResult3D", "get_collision_safe_fraction", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult3D), "PhysicsTestMotionResult3D", "get_collision_unsafe_fraction", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult3D), "PhysicsTestMotionResult3D", "get_collision_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult3D), "PhysicsTestMotionResult3D", "get_collision_point", 1914908202i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult3D), "PhysicsTestMotionResult3D", "get_collision_normal", 1914908202i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult3D), "PhysicsTestMotionResult3D", "get_collider_velocity", 1914908202i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult3D), "PhysicsTestMotionResult3D", "get_collider_id", 1591665591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult3D), "PhysicsTestMotionResult3D", "get_collider_rid", 1231817359i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult3D), "PhysicsTestMotionResult3D", "get_collider", 2639523548i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult3D), "PhysicsTestMotionResult3D", "get_collider_shape", 1591665591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult3D), "PhysicsTestMotionResult3D", "get_collision_local_shape", 1591665591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PhysicsTestMotionResult3D), "PhysicsTestMotionResult3D", "get_collision_depth", 218038398i64),);
    
}
fn load_PinJoint2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PinJoint2D = string_names.fetch("PinJoint2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PinJoint2D), "PinJoint2D", "set_softness", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PinJoint2D), "PinJoint2D", "get_softness", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PinJoint2D), "PinJoint2D", "set_angular_limit_lower", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PinJoint2D), "PinJoint2D", "get_angular_limit_lower", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PinJoint2D), "PinJoint2D", "set_angular_limit_upper", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PinJoint2D), "PinJoint2D", "get_angular_limit_upper", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PinJoint2D), "PinJoint2D", "set_motor_target_velocity", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PinJoint2D), "PinJoint2D", "get_motor_target_velocity", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PinJoint2D), "PinJoint2D", "set_motor_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PinJoint2D), "PinJoint2D", "is_motor_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PinJoint2D), "PinJoint2D", "set_angular_limit_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PinJoint2D), "PinJoint2D", "is_angular_limit_enabled", 36873697i64),);
    
}
fn load_PinJoint3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PinJoint3D = string_names.fetch("PinJoint3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PinJoint3D), "PinJoint3D", "set_param", 2059913726i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PinJoint3D), "PinJoint3D", "get_param", 1758438771i64),);
    
}
fn load_PlaceholderMesh_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PlaceholderMesh = string_names.fetch("PlaceholderMesh");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PlaceholderMesh), "PlaceholderMesh", "set_aabb", 259215842i64),);
    
}
fn load_PlaceholderTexture2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PlaceholderTexture2D = string_names.fetch("PlaceholderTexture2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PlaceholderTexture2D), "PlaceholderTexture2D", "set_size", 743155724i64),);
    
}
fn load_PlaceholderTexture3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PlaceholderTexture3D = string_names.fetch("PlaceholderTexture3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PlaceholderTexture3D), "PlaceholderTexture3D", "set_size", 560364750i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PlaceholderTexture3D), "PlaceholderTexture3D", "get_size", 2785653706i64),);
    
}
fn load_PlaceholderTextureLayered_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PlaceholderTextureLayered = string_names.fetch("PlaceholderTextureLayered");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PlaceholderTextureLayered), "PlaceholderTextureLayered", "set_size", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PlaceholderTextureLayered), "PlaceholderTextureLayered", "get_size", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PlaceholderTextureLayered), "PlaceholderTextureLayered", "set_layers", 1286410249i64),);
    
}
fn load_PlaneMesh_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PlaneMesh = string_names.fetch("PlaneMesh");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PlaneMesh), "PlaneMesh", "set_size", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PlaneMesh), "PlaneMesh", "get_size", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PlaneMesh), "PlaneMesh", "set_subdivide_width", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PlaneMesh), "PlaneMesh", "get_subdivide_width", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PlaneMesh), "PlaneMesh", "set_subdivide_depth", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PlaneMesh), "PlaneMesh", "get_subdivide_depth", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PlaneMesh), "PlaneMesh", "set_center_offset", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PlaneMesh), "PlaneMesh", "get_center_offset", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PlaneMesh), "PlaneMesh", "set_orientation", 2751399687i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PlaneMesh), "PlaneMesh", "get_orientation", 3227599250i64),);
    
}
fn load_PointLight2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PointLight2D = string_names.fetch("PointLight2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PointLight2D), "PointLight2D", "set_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PointLight2D), "PointLight2D", "get_texture", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PointLight2D), "PointLight2D", "set_texture_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PointLight2D), "PointLight2D", "get_texture_offset", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PointLight2D), "PointLight2D", "set_texture_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PointLight2D), "PointLight2D", "get_texture_scale", 1740695150i64),);
    
}
fn load_Polygon2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Polygon2D = string_names.fetch("Polygon2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "set_polygon", 1509147220i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "get_polygon", 2961356807i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "set_uv", 1509147220i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "get_uv", 2961356807i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "set_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "get_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "set_polygons", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "get_polygons", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "set_vertex_colors", 3546319833i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "get_vertex_colors", 1392750486i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "set_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "get_texture", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "set_texture_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "get_texture_offset", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "set_texture_rotation", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "get_texture_rotation", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "set_texture_scale", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "get_texture_scale", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "set_invert_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "get_invert_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "set_antialiased", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "get_antialiased", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "set_invert_border", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "get_invert_border", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "set_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "get_offset", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "add_bone", 703042815i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "get_bone_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "get_bone_path", 408788394i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "get_bone_weights", 1542882410i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "erase_bone", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "clear_bones", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "set_bone_path", 2761262315i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "set_bone_weights", 1345852415i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "set_skeleton", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "get_skeleton", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "set_internal_vertex_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Polygon2D), "Polygon2D", "get_internal_vertex_count", 3905245786i64),);
    
}
fn load_PolygonOccluder3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PolygonOccluder3D = string_names.fetch("PolygonOccluder3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PolygonOccluder3D), "PolygonOccluder3D", "set_polygon", 1509147220i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PolygonOccluder3D), "PolygonOccluder3D", "get_polygon", 2961356807i64),);
    
}
fn load_PolygonPathFinder_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PolygonPathFinder = string_names.fetch("PolygonPathFinder");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PolygonPathFinder), "PolygonPathFinder", "setup", 3251786936i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PolygonPathFinder), "PolygonPathFinder", "find_path", 1562168077i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PolygonPathFinder), "PolygonPathFinder", "get_intersections", 3932192302i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PolygonPathFinder), "PolygonPathFinder", "get_closest_point", 2656412154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PolygonPathFinder), "PolygonPathFinder", "is_point_inside", 556197845i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PolygonPathFinder), "PolygonPathFinder", "set_point_penalty", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PolygonPathFinder), "PolygonPathFinder", "get_point_penalty", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PolygonPathFinder), "PolygonPathFinder", "get_bounds", 1639390495i64),);
    
}
fn load_PopupMenu_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PopupMenu = string_names.fetch("PopupMenu");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "activate_item_by_event", 3716412023i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_prefer_native_menu", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "is_prefer_native_menu", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "is_native_menu", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "add_item", 3674230041i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "add_icon_item", 1086190128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "add_check_item", 3674230041i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "add_icon_check_item", 1086190128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "add_radio_check_item", 3674230041i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "add_icon_radio_check_item", 1086190128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "add_multistate_item", 150780458i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "add_shortcut", 3451850107i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "add_icon_shortcut", 2997871092i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "add_check_shortcut", 1642193386i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "add_icon_check_shortcut", 3856247530i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "add_radio_check_shortcut", 1642193386i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "add_icon_radio_check_shortcut", 3856247530i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "add_submenu_item", 2979222410i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "add_submenu_node_item", 1325455216i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_text", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_text_direction", 1707680378i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_language", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_auto_translate_mode", 287402019i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_icon", 666127730i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_icon_max_width", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_icon_modulate", 2878471219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_checked", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_id", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_accelerator", 2992817551i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_metadata", 2152698145i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_disabled", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_submenu", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_submenu_node", 1068370740i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_as_separator", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_as_checkable", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_as_radio_checkable", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_tooltip", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_shortcut", 825127832i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_indent", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_multistate", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_multistate_max", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_shortcut_disabled", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "toggle_item_checked", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "toggle_item_multistate", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_item_text", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_item_text_direction", 4235602388i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_item_language", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_item_auto_translate_mode", 906302372i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_item_icon", 3536238170i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_item_icon_max_width", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_item_icon_modulate", 3457211756i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "is_item_checked", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_item_id", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_item_index", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_item_accelerator", 253789942i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_item_metadata", 4227898402i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "is_item_disabled", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_item_submenu", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_item_submenu_node", 2100501353i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "is_item_separator", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "is_item_checkable", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "is_item_radio_checkable", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "is_item_shortcut_disabled", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_item_tooltip", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_item_shortcut", 1449483325i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_item_indent", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_item_multistate_max", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_item_multistate", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_focused_item", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_focused_item", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_item_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_item_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "scroll_to_item", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "remove_item", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "add_separator", 2266703459i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "clear", 107499316i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_hide_on_item_selection", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "is_hide_on_item_selection", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_hide_on_checkable_item_selection", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "is_hide_on_checkable_item_selection", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_hide_on_state_item_selection", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "is_hide_on_state_item_selection", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_submenu_popup_delay", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_submenu_popup_delay", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_allow_search", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_allow_search", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "is_system_menu", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "set_system_menu", 600639674i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PopupMenu), "PopupMenu", "get_system_menu", 1222557358i64),);
    
}
fn load_PortableCompressedTexture2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PortableCompressedTexture2D = string_names.fetch("PortableCompressedTexture2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PortableCompressedTexture2D), "PortableCompressedTexture2D", "create_from_image", 3679243433i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PortableCompressedTexture2D), "PortableCompressedTexture2D", "get_format", 3847873762i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PortableCompressedTexture2D), "PortableCompressedTexture2D", "get_compression_mode", 3265612739i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PortableCompressedTexture2D), "PortableCompressedTexture2D", "set_size_override", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PortableCompressedTexture2D), "PortableCompressedTexture2D", "get_size_override", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PortableCompressedTexture2D), "PortableCompressedTexture2D", "set_keep_compressed_buffer", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PortableCompressedTexture2D), "PortableCompressedTexture2D", "is_keeping_compressed_buffer", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PortableCompressedTexture2D), "PortableCompressedTexture2D", "set_basisu_compressor_params", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PortableCompressedTexture2D), "PortableCompressedTexture2D", "set_keep_all_compressed_buffers", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PortableCompressedTexture2D), "PortableCompressedTexture2D", "is_keeping_all_compressed_buffers", 2240911060i64),);
    
}
fn load_PrimitiveMesh_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PrimitiveMesh = string_names.fetch("PrimitiveMesh");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PrimitiveMesh), "PrimitiveMesh", "set_material", 2757459619i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PrimitiveMesh), "PrimitiveMesh", "get_material", 5934680i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PrimitiveMesh), "PrimitiveMesh", "get_mesh_arrays", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PrimitiveMesh), "PrimitiveMesh", "set_custom_aabb", 259215842i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PrimitiveMesh), "PrimitiveMesh", "get_custom_aabb", 1068685055i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PrimitiveMesh), "PrimitiveMesh", "set_flip_faces", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PrimitiveMesh), "PrimitiveMesh", "get_flip_faces", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PrimitiveMesh), "PrimitiveMesh", "set_add_uv2", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PrimitiveMesh), "PrimitiveMesh", "get_add_uv2", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PrimitiveMesh), "PrimitiveMesh", "set_uv2_padding", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PrimitiveMesh), "PrimitiveMesh", "get_uv2_padding", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PrimitiveMesh), "PrimitiveMesh", "request_update", 3218959716i64),);
    
}
fn load_PrismMesh_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PrismMesh = string_names.fetch("PrismMesh");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PrismMesh), "PrismMesh", "set_left_to_right", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PrismMesh), "PrismMesh", "get_left_to_right", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PrismMesh), "PrismMesh", "set_size", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PrismMesh), "PrismMesh", "get_size", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PrismMesh), "PrismMesh", "set_subdivide_width", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PrismMesh), "PrismMesh", "get_subdivide_width", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PrismMesh), "PrismMesh", "set_subdivide_height", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PrismMesh), "PrismMesh", "get_subdivide_height", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PrismMesh), "PrismMesh", "set_subdivide_depth", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PrismMesh), "PrismMesh", "get_subdivide_depth", 3905245786i64),);
    
}
fn load_ProceduralSkyMaterial_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ProceduralSkyMaterial = string_names.fetch("ProceduralSkyMaterial");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "set_sky_top_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "get_sky_top_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "set_sky_horizon_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "get_sky_horizon_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "set_sky_curve", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "get_sky_curve", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "set_sky_energy_multiplier", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "get_sky_energy_multiplier", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "set_sky_cover", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "get_sky_cover", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "set_sky_cover_modulate", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "get_sky_cover_modulate", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "set_ground_bottom_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "get_ground_bottom_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "set_ground_horizon_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "get_ground_horizon_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "set_ground_curve", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "get_ground_curve", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "set_ground_energy_multiplier", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "get_ground_energy_multiplier", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "set_sun_angle_max", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "get_sun_angle_max", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "set_sun_curve", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "get_sun_curve", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "set_use_debanding", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "get_use_debanding", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "set_energy_multiplier", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProceduralSkyMaterial), "ProceduralSkyMaterial", "get_energy_multiplier", 1740695150i64),);
    
}
fn load_ProgressBar_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ProgressBar = string_names.fetch("ProgressBar");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProgressBar), "ProgressBar", "set_fill_mode", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProgressBar), "ProgressBar", "get_fill_mode", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProgressBar), "ProgressBar", "set_show_percentage", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProgressBar), "ProgressBar", "is_percentage_shown", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProgressBar), "ProgressBar", "set_indeterminate", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProgressBar), "ProgressBar", "is_indeterminate", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProgressBar), "ProgressBar", "set_editor_preview_indeterminate", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ProgressBar), "ProgressBar", "is_editor_preview_indeterminate_enabled", 36873697i64),);
    
}
fn load_PropertyTweener_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_PropertyTweener = string_names.fetch("PropertyTweener");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PropertyTweener), "PropertyTweener", "from", 4190193059i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PropertyTweener), "PropertyTweener", "from_current", 4279177709i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PropertyTweener), "PropertyTweener", "as_relative", 4279177709i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PropertyTweener), "PropertyTweener", "set_trans", 1899107404i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PropertyTweener), "PropertyTweener", "set_ease", 1080455622i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PropertyTweener), "PropertyTweener", "set_custom_interpolator", 3174170268i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_PropertyTweener), "PropertyTweener", "set_delay", 2171559331i64),);
    
}
fn load_QuadOccluder3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_QuadOccluder3D = string_names.fetch("QuadOccluder3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_QuadOccluder3D), "QuadOccluder3D", "set_size", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_QuadOccluder3D), "QuadOccluder3D", "get_size", 3341600327i64),);
    
}
fn load_RDAttachmentFormat_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RDAttachmentFormat = string_names.fetch("RDAttachmentFormat");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDAttachmentFormat), "RDAttachmentFormat", "set_format", 565531219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDAttachmentFormat), "RDAttachmentFormat", "get_format", 2235804183i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDAttachmentFormat), "RDAttachmentFormat", "set_samples", 3774171498i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDAttachmentFormat), "RDAttachmentFormat", "get_samples", 407791724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDAttachmentFormat), "RDAttachmentFormat", "set_usage_flags", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDAttachmentFormat), "RDAttachmentFormat", "get_usage_flags", 3905245786i64),);
    
}
fn load_RDFramebufferPass_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RDFramebufferPass = string_names.fetch("RDFramebufferPass");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDFramebufferPass), "RDFramebufferPass", "set_color_attachments", 3614634198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDFramebufferPass), "RDFramebufferPass", "get_color_attachments", 1930428628i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDFramebufferPass), "RDFramebufferPass", "set_input_attachments", 3614634198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDFramebufferPass), "RDFramebufferPass", "get_input_attachments", 1930428628i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDFramebufferPass), "RDFramebufferPass", "set_resolve_attachments", 3614634198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDFramebufferPass), "RDFramebufferPass", "get_resolve_attachments", 1930428628i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDFramebufferPass), "RDFramebufferPass", "set_preserve_attachments", 3614634198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDFramebufferPass), "RDFramebufferPass", "get_preserve_attachments", 1930428628i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDFramebufferPass), "RDFramebufferPass", "set_depth_attachment", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDFramebufferPass), "RDFramebufferPass", "get_depth_attachment", 3905245786i64),);
    
}
fn load_RDPipelineColorBlendState_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RDPipelineColorBlendState = string_names.fetch("RDPipelineColorBlendState");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendState), "RDPipelineColorBlendState", "set_enable_logic_op", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendState), "RDPipelineColorBlendState", "get_enable_logic_op", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendState), "RDPipelineColorBlendState", "set_logic_op", 3610841058i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendState), "RDPipelineColorBlendState", "get_logic_op", 988254690i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendState), "RDPipelineColorBlendState", "set_blend_constant", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendState), "RDPipelineColorBlendState", "get_blend_constant", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendState), "RDPipelineColorBlendState", "set_attachments", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendState), "RDPipelineColorBlendState", "get_attachments", 3995934104i64),);
    
}
fn load_RDPipelineColorBlendStateAttachment_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RDPipelineColorBlendStateAttachment = string_names.fetch("RDPipelineColorBlendStateAttachment");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "set_as_mix", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "set_enable_blend", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "get_enable_blend", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "set_src_color_blend_factor", 2251019273i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "get_src_color_blend_factor", 3691288359i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "set_dst_color_blend_factor", 2251019273i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "get_dst_color_blend_factor", 3691288359i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "set_color_blend_op", 3073022720i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "get_color_blend_op", 1385093561i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "set_src_alpha_blend_factor", 2251019273i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "get_src_alpha_blend_factor", 3691288359i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "set_dst_alpha_blend_factor", 2251019273i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "get_dst_alpha_blend_factor", 3691288359i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "set_alpha_blend_op", 3073022720i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "get_alpha_blend_op", 1385093561i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "set_write_r", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "get_write_r", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "set_write_g", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "get_write_g", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "set_write_b", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "get_write_b", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "set_write_a", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineColorBlendStateAttachment), "RDPipelineColorBlendStateAttachment", "get_write_a", 36873697i64),);
    
}
fn load_RDPipelineDepthStencilState_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RDPipelineDepthStencilState = string_names.fetch("RDPipelineDepthStencilState");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "set_enable_depth_test", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "get_enable_depth_test", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "set_enable_depth_write", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "get_enable_depth_write", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "set_depth_compare_operator", 2573711505i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "get_depth_compare_operator", 269730778i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "set_enable_depth_range", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "get_enable_depth_range", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "set_depth_range_min", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "get_depth_range_min", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "set_depth_range_max", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "get_depth_range_max", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "set_enable_stencil", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "get_enable_stencil", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "set_front_op_fail", 2092799566i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "get_front_op_fail", 1714732389i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "set_front_op_pass", 2092799566i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "get_front_op_pass", 1714732389i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "set_front_op_depth_fail", 2092799566i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "get_front_op_depth_fail", 1714732389i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "set_front_op_compare", 2573711505i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "get_front_op_compare", 269730778i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "set_front_op_compare_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "get_front_op_compare_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "set_front_op_write_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "get_front_op_write_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "set_front_op_reference", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "get_front_op_reference", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "set_back_op_fail", 2092799566i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "get_back_op_fail", 1714732389i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "set_back_op_pass", 2092799566i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "get_back_op_pass", 1714732389i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "set_back_op_depth_fail", 2092799566i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "get_back_op_depth_fail", 1714732389i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "set_back_op_compare", 2573711505i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "get_back_op_compare", 269730778i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "set_back_op_compare_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "get_back_op_compare_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "set_back_op_write_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "get_back_op_write_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "set_back_op_reference", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineDepthStencilState), "RDPipelineDepthStencilState", "get_back_op_reference", 3905245786i64),);
    
}
fn load_RDPipelineMultisampleState_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RDPipelineMultisampleState = string_names.fetch("RDPipelineMultisampleState");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineMultisampleState), "RDPipelineMultisampleState", "set_sample_count", 3774171498i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineMultisampleState), "RDPipelineMultisampleState", "get_sample_count", 407791724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineMultisampleState), "RDPipelineMultisampleState", "set_enable_sample_shading", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineMultisampleState), "RDPipelineMultisampleState", "get_enable_sample_shading", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineMultisampleState), "RDPipelineMultisampleState", "set_min_sample_shading", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineMultisampleState), "RDPipelineMultisampleState", "get_min_sample_shading", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineMultisampleState), "RDPipelineMultisampleState", "set_enable_alpha_to_coverage", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineMultisampleState), "RDPipelineMultisampleState", "get_enable_alpha_to_coverage", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineMultisampleState), "RDPipelineMultisampleState", "set_enable_alpha_to_one", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineMultisampleState), "RDPipelineMultisampleState", "get_enable_alpha_to_one", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineMultisampleState), "RDPipelineMultisampleState", "set_sample_masks", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineMultisampleState), "RDPipelineMultisampleState", "get_sample_masks", 3995934104i64),);
    
}
fn load_RDPipelineRasterizationState_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RDPipelineRasterizationState = string_names.fetch("RDPipelineRasterizationState");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineRasterizationState), "RDPipelineRasterizationState", "set_enable_depth_clamp", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineRasterizationState), "RDPipelineRasterizationState", "get_enable_depth_clamp", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineRasterizationState), "RDPipelineRasterizationState", "set_discard_primitives", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineRasterizationState), "RDPipelineRasterizationState", "get_discard_primitives", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineRasterizationState), "RDPipelineRasterizationState", "set_wireframe", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineRasterizationState), "RDPipelineRasterizationState", "get_wireframe", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineRasterizationState), "RDPipelineRasterizationState", "set_cull_mode", 2662586502i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineRasterizationState), "RDPipelineRasterizationState", "get_cull_mode", 2192484313i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineRasterizationState), "RDPipelineRasterizationState", "set_front_face", 2637251213i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineRasterizationState), "RDPipelineRasterizationState", "get_front_face", 708793786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineRasterizationState), "RDPipelineRasterizationState", "set_depth_bias_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineRasterizationState), "RDPipelineRasterizationState", "get_depth_bias_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineRasterizationState), "RDPipelineRasterizationState", "set_depth_bias_constant_factor", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineRasterizationState), "RDPipelineRasterizationState", "get_depth_bias_constant_factor", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineRasterizationState), "RDPipelineRasterizationState", "set_depth_bias_clamp", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineRasterizationState), "RDPipelineRasterizationState", "get_depth_bias_clamp", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineRasterizationState), "RDPipelineRasterizationState", "set_depth_bias_slope_factor", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineRasterizationState), "RDPipelineRasterizationState", "get_depth_bias_slope_factor", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineRasterizationState), "RDPipelineRasterizationState", "set_line_width", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineRasterizationState), "RDPipelineRasterizationState", "get_line_width", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineRasterizationState), "RDPipelineRasterizationState", "set_patch_control_points", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineRasterizationState), "RDPipelineRasterizationState", "get_patch_control_points", 3905245786i64),);
    
}
fn load_RDPipelineSpecializationConstant_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RDPipelineSpecializationConstant = string_names.fetch("RDPipelineSpecializationConstant");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineSpecializationConstant), "RDPipelineSpecializationConstant", "set_value", 1114965689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineSpecializationConstant), "RDPipelineSpecializationConstant", "get_value", 1214101251i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineSpecializationConstant), "RDPipelineSpecializationConstant", "set_constant_id", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDPipelineSpecializationConstant), "RDPipelineSpecializationConstant", "get_constant_id", 3905245786i64),);
    
}
fn load_RDSamplerState_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RDSamplerState = string_names.fetch("RDSamplerState");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "set_mag_filter", 1493420382i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "get_mag_filter", 2209202801i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "set_min_filter", 1493420382i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "get_min_filter", 2209202801i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "set_mip_filter", 1493420382i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "get_mip_filter", 2209202801i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "set_repeat_u", 246127626i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "get_repeat_u", 3227895872i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "set_repeat_v", 246127626i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "get_repeat_v", 3227895872i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "set_repeat_w", 246127626i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "get_repeat_w", 3227895872i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "set_lod_bias", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "get_lod_bias", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "set_use_anisotropy", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "get_use_anisotropy", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "set_anisotropy_max", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "get_anisotropy_max", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "set_enable_compare", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "get_enable_compare", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "set_compare_op", 2573711505i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "get_compare_op", 269730778i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "set_min_lod", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "get_min_lod", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "set_max_lod", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "get_max_lod", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "set_border_color", 1115869595i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "get_border_color", 3514246478i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "set_unnormalized_uvw", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDSamplerState), "RDSamplerState", "get_unnormalized_uvw", 36873697i64),);
    
}
fn load_RDShaderFile_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RDShaderFile = string_names.fetch("RDShaderFile");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDShaderFile), "RDShaderFile", "set_bytecode", 1526857008i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDShaderFile), "RDShaderFile", "get_spirv", 2689310080i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDShaderFile), "RDShaderFile", "get_version_list", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDShaderFile), "RDShaderFile", "set_base_error", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDShaderFile), "RDShaderFile", "get_base_error", 201670096i64),);
    
}
fn load_RDShaderSPIRV_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RDShaderSPIRV = string_names.fetch("RDShaderSPIRV");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDShaderSPIRV), "RDShaderSPIRV", "set_stage_bytecode", 3514097977i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDShaderSPIRV), "RDShaderSPIRV", "get_stage_bytecode", 3816765404i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDShaderSPIRV), "RDShaderSPIRV", "set_stage_compile_error", 620821314i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDShaderSPIRV), "RDShaderSPIRV", "get_stage_compile_error", 3354920045i64),);
    
}
fn load_RDShaderSource_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RDShaderSource = string_names.fetch("RDShaderSource");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDShaderSource), "RDShaderSource", "set_stage_source", 620821314i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDShaderSource), "RDShaderSource", "get_stage_source", 3354920045i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDShaderSource), "RDShaderSource", "set_language", 3422186742i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDShaderSource), "RDShaderSource", "get_language", 1063538261i64),);
    
}
fn load_RDTextureFormat_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RDTextureFormat = string_names.fetch("RDTextureFormat");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "set_format", 565531219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "get_format", 2235804183i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "set_width", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "get_width", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "set_height", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "get_height", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "set_depth", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "get_depth", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "set_array_layers", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "get_array_layers", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "set_mipmaps", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "get_mipmaps", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "set_texture_type", 652343381i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "get_texture_type", 4036357416i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "set_samples", 3774171498i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "get_samples", 407791724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "set_usage_bits", 245642367i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "get_usage_bits", 1313398998i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "set_is_resolve_buffer", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "get_is_resolve_buffer", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "set_is_discardable", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "get_is_discardable", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "add_shareable_format", 565531219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureFormat), "RDTextureFormat", "remove_shareable_format", 565531219i64),);
    
}
fn load_RDTextureView_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RDTextureView = string_names.fetch("RDTextureView");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureView), "RDTextureView", "set_format_override", 565531219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureView), "RDTextureView", "get_format_override", 2235804183i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureView), "RDTextureView", "set_swizzle_r", 3833362581i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureView), "RDTextureView", "get_swizzle_r", 4150792614i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureView), "RDTextureView", "set_swizzle_g", 3833362581i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureView), "RDTextureView", "get_swizzle_g", 4150792614i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureView), "RDTextureView", "set_swizzle_b", 3833362581i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureView), "RDTextureView", "get_swizzle_b", 4150792614i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureView), "RDTextureView", "set_swizzle_a", 3833362581i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDTextureView), "RDTextureView", "get_swizzle_a", 4150792614i64),);
    
}
fn load_RDUniform_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RDUniform = string_names.fetch("RDUniform");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDUniform), "RDUniform", "set_uniform_type", 1664894931i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDUniform), "RDUniform", "get_uniform_type", 475470040i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDUniform), "RDUniform", "set_binding", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDUniform), "RDUniform", "get_binding", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDUniform), "RDUniform", "add_id", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDUniform), "RDUniform", "clear_ids", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDUniform), "RDUniform", "get_ids", 3995934104i64),);
    
}
fn load_RDVertexAttribute_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RDVertexAttribute = string_names.fetch("RDVertexAttribute");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDVertexAttribute), "RDVertexAttribute", "set_location", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDVertexAttribute), "RDVertexAttribute", "get_location", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDVertexAttribute), "RDVertexAttribute", "set_offset", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDVertexAttribute), "RDVertexAttribute", "get_offset", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDVertexAttribute), "RDVertexAttribute", "set_format", 565531219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDVertexAttribute), "RDVertexAttribute", "get_format", 2235804183i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDVertexAttribute), "RDVertexAttribute", "set_stride", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDVertexAttribute), "RDVertexAttribute", "get_stride", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDVertexAttribute), "RDVertexAttribute", "set_frequency", 522141836i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RDVertexAttribute), "RDVertexAttribute", "get_frequency", 4154106413i64),);
    
}
fn load_RandomNumberGenerator_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RandomNumberGenerator = string_names.fetch("RandomNumberGenerator");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RandomNumberGenerator), "RandomNumberGenerator", "set_seed", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RandomNumberGenerator), "RandomNumberGenerator", "get_seed", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RandomNumberGenerator), "RandomNumberGenerator", "set_state", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RandomNumberGenerator), "RandomNumberGenerator", "get_state", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RandomNumberGenerator), "RandomNumberGenerator", "randi", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RandomNumberGenerator), "RandomNumberGenerator", "randf", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RandomNumberGenerator), "RandomNumberGenerator", "randfn", 837325100i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RandomNumberGenerator), "RandomNumberGenerator", "randf_range", 4269894367i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RandomNumberGenerator), "RandomNumberGenerator", "randi_range", 50157827i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RandomNumberGenerator), "RandomNumberGenerator", "rand_weighted", 4189642986i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RandomNumberGenerator), "RandomNumberGenerator", "randomize", 3218959716i64),);
    
}
fn load_Range_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Range = string_names.fetch("Range");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "get_value", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "get_min", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "get_max", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "get_step", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "get_page", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "get_as_ratio", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "set_value", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "set_value_no_signal", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "set_min", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "set_max", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "set_step", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "set_page", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "set_as_ratio", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "set_use_rounded_values", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "is_using_rounded_values", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "set_exp_ratio", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "is_ratio_exp", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "set_allow_greater", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "is_greater_allowed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "set_allow_lesser", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "is_lesser_allowed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "share", 1078189570i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Range), "Range", "unshare", 3218959716i64),);
    
}
fn load_RayCast2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RayCast2D = string_names.fetch("RayCast2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "set_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "is_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "set_target_position", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "get_target_position", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "is_colliding", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "force_raycast_update", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "get_collider", 1981248198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "get_collider_rid", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "get_collider_shape", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "get_collision_point", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "get_collision_normal", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "add_exception_rid", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "add_exception", 3090941106i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "remove_exception_rid", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "remove_exception", 3090941106i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "clear_exceptions", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "set_collision_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "get_collision_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "set_collision_mask_value", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "get_collision_mask_value", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "set_exclude_parent_body", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "get_exclude_parent_body", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "set_collide_with_areas", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "is_collide_with_areas_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "set_collide_with_bodies", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "is_collide_with_bodies_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "set_hit_from_inside", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast2D), "RayCast2D", "is_hit_from_inside_enabled", 36873697i64),);
    
}
fn load_RayCast3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RayCast3D = string_names.fetch("RayCast3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "set_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "is_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "set_target_position", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "get_target_position", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "is_colliding", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "force_raycast_update", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "get_collider", 1981248198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "get_collider_rid", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "get_collider_shape", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "get_collision_point", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "get_collision_normal", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "get_collision_face_index", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "add_exception_rid", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "add_exception", 1976431078i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "remove_exception_rid", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "remove_exception", 1976431078i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "clear_exceptions", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "set_collision_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "get_collision_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "set_collision_mask_value", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "get_collision_mask_value", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "set_exclude_parent_body", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "get_exclude_parent_body", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "set_collide_with_areas", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "is_collide_with_areas_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "set_collide_with_bodies", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "is_collide_with_bodies_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "set_hit_from_inside", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "is_hit_from_inside_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "set_hit_back_faces", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "is_hit_back_faces_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "set_debug_shape_custom_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "get_debug_shape_custom_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "set_debug_shape_thickness", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RayCast3D), "RayCast3D", "get_debug_shape_thickness", 3905245786i64),);
    
}
fn load_RectangleShape2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RectangleShape2D = string_names.fetch("RectangleShape2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RectangleShape2D), "RectangleShape2D", "set_size", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RectangleShape2D), "RectangleShape2D", "get_size", 3341600327i64),);
    
}
fn load_ReferenceRect_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ReferenceRect = string_names.fetch("ReferenceRect");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReferenceRect), "ReferenceRect", "get_border_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReferenceRect), "ReferenceRect", "set_border_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReferenceRect), "ReferenceRect", "get_border_width", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReferenceRect), "ReferenceRect", "set_border_width", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReferenceRect), "ReferenceRect", "get_editor_only", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReferenceRect), "ReferenceRect", "set_editor_only", 2586408642i64),);
    
}
fn load_ReflectionProbe_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ReflectionProbe = string_names.fetch("ReflectionProbe");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "set_intensity", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "get_intensity", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "set_blend_distance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "get_blend_distance", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "set_ambient_mode", 1748981278i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "get_ambient_mode", 1014607621i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "set_ambient_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "get_ambient_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "set_ambient_color_energy", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "get_ambient_color_energy", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "set_max_distance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "get_max_distance", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "set_mesh_lod_threshold", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "get_mesh_lod_threshold", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "set_size", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "get_size", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "set_origin_offset", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "get_origin_offset", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "set_as_interior", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "is_set_as_interior", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "set_enable_box_projection", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "is_box_projection_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "set_enable_shadows", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "are_shadows_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "set_cull_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "get_cull_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "set_reflection_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "get_reflection_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "set_update_mode", 4090221187i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ReflectionProbe), "ReflectionProbe", "get_update_mode", 2367550552i64),);
    
}
fn load_RegEx_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RegEx = string_names.fetch("RegEx");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RegEx), "RegEx", "create_from_string", 4249111514i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RegEx), "RegEx", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RegEx), "RegEx", "compile", 3565188097i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RegEx), "RegEx", "search", 3365977994i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RegEx), "RegEx", "search_all", 849021363i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RegEx), "RegEx", "sub", 54019702i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RegEx), "RegEx", "is_valid", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RegEx), "RegEx", "get_pattern", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RegEx), "RegEx", "get_group_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RegEx), "RegEx", "get_names", 1139954409i64),);
    
}
fn load_RegExMatch_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RegExMatch = string_names.fetch("RegExMatch");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RegExMatch), "RegExMatch", "get_subject", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RegExMatch), "RegExMatch", "get_group_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RegExMatch), "RegExMatch", "get_names", 3102165223i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RegExMatch), "RegExMatch", "get_strings", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RegExMatch), "RegExMatch", "get_string", 687115856i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RegExMatch), "RegExMatch", "get_start", 490464691i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RegExMatch), "RegExMatch", "get_end", 490464691i64),);
    
}
fn load_RemoteTransform2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RemoteTransform2D = string_names.fetch("RemoteTransform2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RemoteTransform2D), "RemoteTransform2D", "set_remote_node", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RemoteTransform2D), "RemoteTransform2D", "get_remote_node", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RemoteTransform2D), "RemoteTransform2D", "force_update_cache", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RemoteTransform2D), "RemoteTransform2D", "set_use_global_coordinates", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RemoteTransform2D), "RemoteTransform2D", "get_use_global_coordinates", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RemoteTransform2D), "RemoteTransform2D", "set_update_position", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RemoteTransform2D), "RemoteTransform2D", "get_update_position", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RemoteTransform2D), "RemoteTransform2D", "set_update_rotation", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RemoteTransform2D), "RemoteTransform2D", "get_update_rotation", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RemoteTransform2D), "RemoteTransform2D", "set_update_scale", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RemoteTransform2D), "RemoteTransform2D", "get_update_scale", 36873697i64),);
    
}
fn load_RemoteTransform3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RemoteTransform3D = string_names.fetch("RemoteTransform3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RemoteTransform3D), "RemoteTransform3D", "set_remote_node", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RemoteTransform3D), "RemoteTransform3D", "get_remote_node", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RemoteTransform3D), "RemoteTransform3D", "force_update_cache", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RemoteTransform3D), "RemoteTransform3D", "set_use_global_coordinates", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RemoteTransform3D), "RemoteTransform3D", "get_use_global_coordinates", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RemoteTransform3D), "RemoteTransform3D", "set_update_position", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RemoteTransform3D), "RemoteTransform3D", "get_update_position", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RemoteTransform3D), "RemoteTransform3D", "set_update_rotation", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RemoteTransform3D), "RemoteTransform3D", "get_update_rotation", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RemoteTransform3D), "RemoteTransform3D", "set_update_scale", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RemoteTransform3D), "RemoteTransform3D", "get_update_scale", 36873697i64),);
    
}
fn load_RenderSceneBuffers_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RenderSceneBuffers = string_names.fetch("RenderSceneBuffers");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffers), "RenderSceneBuffers", "configure", 3072623270i64),);
    
}
fn load_RenderSceneBuffersConfiguration_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RenderSceneBuffersConfiguration = string_names.fetch("RenderSceneBuffersConfiguration");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersConfiguration), "RenderSceneBuffersConfiguration", "get_render_target", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersConfiguration), "RenderSceneBuffersConfiguration", "set_render_target", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersConfiguration), "RenderSceneBuffersConfiguration", "get_internal_size", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersConfiguration), "RenderSceneBuffersConfiguration", "set_internal_size", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersConfiguration), "RenderSceneBuffersConfiguration", "get_target_size", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersConfiguration), "RenderSceneBuffersConfiguration", "set_target_size", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersConfiguration), "RenderSceneBuffersConfiguration", "get_view_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersConfiguration), "RenderSceneBuffersConfiguration", "set_view_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersConfiguration), "RenderSceneBuffersConfiguration", "get_scaling_3d_mode", 976778074i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersConfiguration), "RenderSceneBuffersConfiguration", "set_scaling_3d_mode", 447477857i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersConfiguration), "RenderSceneBuffersConfiguration", "get_msaa_3d", 3109158617i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersConfiguration), "RenderSceneBuffersConfiguration", "set_msaa_3d", 3952630748i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersConfiguration), "RenderSceneBuffersConfiguration", "get_screen_space_aa", 641513172i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersConfiguration), "RenderSceneBuffersConfiguration", "set_screen_space_aa", 139543108i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersConfiguration), "RenderSceneBuffersConfiguration", "get_fsr_sharpness", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersConfiguration), "RenderSceneBuffersConfiguration", "set_fsr_sharpness", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersConfiguration), "RenderSceneBuffersConfiguration", "get_texture_mipmap_bias", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersConfiguration), "RenderSceneBuffersConfiguration", "set_texture_mipmap_bias", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersConfiguration), "RenderSceneBuffersConfiguration", "get_anisotropic_filtering_level", 1617414954i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersConfiguration), "RenderSceneBuffersConfiguration", "set_anisotropic_filtering_level", 2559658741i64),);
    
}
fn load_RenderSceneBuffersRD_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RenderSceneBuffersRD = string_names.fetch("RenderSceneBuffersRD");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "has_texture", 471820014i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "create_texture", 2950875024i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "create_texture_from_format", 3344669382i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "create_texture_view", 283055834i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "get_texture", 750006389i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "get_texture_format", 371461758i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "get_texture_slice", 588440706i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "get_texture_slice_view", 682451778i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "get_texture_slice_size", 2617625368i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "clear_context", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "get_color_texture", 3050822880i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "get_color_layer", 3087988589i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "get_depth_texture", 3050822880i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "get_depth_layer", 3087988589i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "get_velocity_texture", 3050822880i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "get_velocity_layer", 3087988589i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "get_render_target", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "get_view_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "get_internal_size", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "get_target_size", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "get_scaling_3d_mode", 976778074i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "get_fsr_sharpness", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "get_msaa_3d", 3109158617i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "get_texture_samples", 407791724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "get_screen_space_aa", 641513172i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "get_use_taa", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderSceneBuffersRD), "RenderSceneBuffersRD", "get_use_debanding", 36873697i64),);
    
}
fn load_RenderingDevice_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RenderingDevice = string_names.fetch("RenderingDevice");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "texture_create", 3709173589i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "texture_create_shared", 3178156134i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "texture_create_shared_from_slice", 1808971279i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "texture_create_from_extension", 3732868568i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "texture_update", 1349464008i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "texture_get_data", 1859412099i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "texture_get_data_async", 498832090i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "texture_is_format_supported_for_usage", 2592520478i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "texture_is_shared", 3521089500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "texture_is_valid", 3521089500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "texture_set_discardable", 1265174801i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "texture_is_discardable", 3521089500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "texture_copy", 2859522160i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "texture_clear", 3477703247i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "texture_resolve_multisample", 3181288260i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "texture_get_format", 1374471690i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "texture_get_native_handle", 3917799429i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "framebuffer_format_create", 697032759i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "framebuffer_format_create_multipass", 2647479094i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "framebuffer_format_create_empty", 555930169i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "framebuffer_format_get_texture_samples", 4223391010i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "framebuffer_create", 3284231055i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "framebuffer_create_multipass", 1750306695i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "framebuffer_create_empty", 3058360618i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "framebuffer_get_format", 3917799429i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "framebuffer_is_valid", 4155700596i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "sampler_create", 2327892535i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "sampler_is_format_supported_for_filter", 2247922238i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "vertex_buffer_create", 2089548973i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "vertex_format_create", 1242678479i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "vertex_array_create", 3799816279i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "index_buffer_create", 2368684885i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "index_array_create", 2256026069i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "shader_compile_spirv_from_source", 1178973306i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "shader_compile_binary_from_spirv", 134910450i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "shader_create_from_spirv", 342949005i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "shader_create_from_bytecode", 1687031350i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "shader_create_placeholder", 529393457i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "shader_get_vertex_input_attribute_mask", 3917799429i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "uniform_buffer_create", 2089548973i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "storage_buffer_create", 1609052553i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "texture_buffer_create", 1470338698i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "uniform_set_create", 2280795797i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "uniform_set_is_valid", 3521089500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "buffer_copy", 864257779i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "buffer_update", 3454956949i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "buffer_clear", 2452320800i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "buffer_get_data", 3101830688i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "buffer_get_data_async", 2370287848i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "buffer_get_device_address", 3917799429i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "render_pipeline_create", 2385451958i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "render_pipeline_is_valid", 3521089500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "compute_pipeline_create", 1448838280i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "compute_pipeline_is_valid", 3521089500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "screen_get_width", 1591665591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "screen_get_height", 1591665591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "screen_get_framebuffer_format", 1591665591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "draw_list_begin_for_screen", 3988079995i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "draw_list_begin", 1317926357i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "draw_list_begin_split", 2406300660i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "draw_list_set_blend_constants", 2878471219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "draw_list_bind_render_pipeline", 4040184819i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "draw_list_bind_uniform_set", 749655778i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "draw_list_bind_vertex_array", 4040184819i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "draw_list_bind_index_array", 4040184819i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "draw_list_set_push_constant", 2772371345i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "draw_list_draw", 4230067973i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "draw_list_draw_indirect", 1092133571i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "draw_list_enable_scissor", 244650101i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "draw_list_disable_scissor", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "draw_list_switch_to_next_pass", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "draw_list_switch_to_next_pass_split", 2865087369i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "draw_list_end", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "compute_list_begin", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "compute_list_bind_compute_pipeline", 4040184819i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "compute_list_set_push_constant", 2772371345i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "compute_list_bind_uniform_set", 749655778i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "compute_list_dispatch", 4275841770i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "compute_list_dispatch_indirect", 749655778i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "compute_list_add_barrier", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "compute_list_end", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "free_rid", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "capture_timestamp", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_captured_timestamps_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_captured_timestamps_frame", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_captured_timestamp_gpu_time", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_captured_timestamp_cpu_time", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_captured_timestamp_name", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "has_feature", 1772728326i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "limit_get", 1559202131i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_frame_delay", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "submit", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "sync", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "barrier", 3718155691i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "full_barrier", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "create_local_device", 2846302423i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "set_resource_name", 2726140452i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "draw_command_begin_label", 1636512886i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "draw_command_insert_label", 1636512886i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "draw_command_end_label", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_device_vendor_name", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_device_name", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_device_pipeline_cache_uuid", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_memory_usage", 251690689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_driver_resource", 501815484i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_perf_report", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_driver_and_device_memory_report", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_tracked_object_name", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_tracked_object_type_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_driver_total_memory", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_driver_allocation_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_driver_memory_by_object_type", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_driver_allocs_by_object_type", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_device_total_memory", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_device_allocation_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_device_memory_by_object_type", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RenderingDevice), "RenderingDevice", "get_device_allocs_by_object_type", 923996154i64),);
    
}
fn load_ResourceLoader_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ResourceLoader = string_names.fetch("ResourceLoader");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceLoader), "ResourceLoader", "load", 3358495409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceLoader), "ResourceLoader", "get_recognized_extensions_for_type", 3538744774i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceLoader), "ResourceLoader", "add_resource_format_loader", 2896595483i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceLoader), "ResourceLoader", "remove_resource_format_loader", 405397102i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceLoader), "ResourceLoader", "set_abort_on_missing_resources", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceLoader), "ResourceLoader", "get_dependencies", 3538744774i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceLoader), "ResourceLoader", "has_cached", 2323990056i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceLoader), "ResourceLoader", "get_cached_ref", 1748875256i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceLoader), "ResourceLoader", "exists", 4185558881i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceLoader), "ResourceLoader", "get_resource_uid", 1597066294i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceLoader), "ResourceLoader", "list_directory", 3538744774i64),);
    
}
fn load_ResourcePreloader_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ResourcePreloader = string_names.fetch("ResourcePreloader");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourcePreloader), "ResourcePreloader", "add_resource", 1168801743i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourcePreloader), "ResourcePreloader", "remove_resource", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourcePreloader), "ResourcePreloader", "rename_resource", 3740211285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourcePreloader), "ResourcePreloader", "has_resource", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourcePreloader), "ResourcePreloader", "get_resource", 3742749261i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourcePreloader), "ResourcePreloader", "get_resource_list", 1139954409i64),);
    
}
fn load_ResourceSaver_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ResourceSaver = string_names.fetch("ResourceSaver");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceSaver), "ResourceSaver", "save", 2983274697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceSaver), "ResourceSaver", "set_uid", 993915709i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceSaver), "ResourceSaver", "get_recognized_extensions", 4223597960i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceSaver), "ResourceSaver", "add_resource_format_saver", 362894272i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceSaver), "ResourceSaver", "remove_resource_format_saver", 3373026878i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceSaver), "ResourceSaver", "get_resource_id_for_path", 150756522i64),);
    
}
fn load_ResourceUID_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ResourceUID = string_names.fetch("ResourceUID");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceUID), "ResourceUID", "id_to_text", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceUID), "ResourceUID", "text_to_id", 1321353865i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceUID), "ResourceUID", "create_id", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceUID), "ResourceUID", "create_id_for_path", 1597066294i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceUID), "ResourceUID", "has_id", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceUID), "ResourceUID", "add_id", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceUID), "ResourceUID", "set_id", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceUID), "ResourceUID", "get_id_path", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceUID), "ResourceUID", "remove_id", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceUID), "ResourceUID", "uid_to_path", 1703090593i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceUID), "ResourceUID", "path_to_uid", 1703090593i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ResourceUID), "ResourceUID", "ensure_path", 1703090593i64),);
    
}
fn load_RetargetModifier3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RetargetModifier3D = string_names.fetch("RetargetModifier3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RetargetModifier3D), "RetargetModifier3D", "set_profile", 3870374136i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RetargetModifier3D), "RetargetModifier3D", "get_profile", 4291782652i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RetargetModifier3D), "RetargetModifier3D", "set_use_global_pose", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RetargetModifier3D), "RetargetModifier3D", "is_using_global_pose", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RetargetModifier3D), "RetargetModifier3D", "set_enable_flags", 2687954213i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RetargetModifier3D), "RetargetModifier3D", "get_enable_flags", 358995420i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RetargetModifier3D), "RetargetModifier3D", "set_position_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RetargetModifier3D), "RetargetModifier3D", "is_position_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RetargetModifier3D), "RetargetModifier3D", "set_rotation_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RetargetModifier3D), "RetargetModifier3D", "is_rotation_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RetargetModifier3D), "RetargetModifier3D", "set_scale_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RetargetModifier3D), "RetargetModifier3D", "is_scale_enabled", 36873697i64),);
    
}
fn load_RibbonTrailMesh_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RibbonTrailMesh = string_names.fetch("RibbonTrailMesh");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RibbonTrailMesh), "RibbonTrailMesh", "set_size", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RibbonTrailMesh), "RibbonTrailMesh", "get_size", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RibbonTrailMesh), "RibbonTrailMesh", "set_sections", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RibbonTrailMesh), "RibbonTrailMesh", "get_sections", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RibbonTrailMesh), "RibbonTrailMesh", "set_section_length", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RibbonTrailMesh), "RibbonTrailMesh", "get_section_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RibbonTrailMesh), "RibbonTrailMesh", "set_section_segments", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RibbonTrailMesh), "RibbonTrailMesh", "get_section_segments", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RibbonTrailMesh), "RibbonTrailMesh", "set_curve", 270443179i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RibbonTrailMesh), "RibbonTrailMesh", "get_curve", 2460114913i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RibbonTrailMesh), "RibbonTrailMesh", "set_shape", 1684440262i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RibbonTrailMesh), "RibbonTrailMesh", "get_shape", 1317484155i64),);
    
}
fn load_RichTextLabel_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RichTextLabel = string_names.fetch("RichTextLabel");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_parsed_text", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "add_text", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_text", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "add_hr", 16816895i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "add_image", 1390915033i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "update_image", 6389170i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "newline", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "remove_paragraph", 3262369265i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "invalidate_paragraph", 3067735520i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_font", 2347424842i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_font_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_normal", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_bold", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_bold_italics", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_italics", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_mono", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_outline_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_outline_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_paragraph", 3089306873i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_indent", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_list", 3017143144i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_meta", 3765356747i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_hint", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_language", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_underline", 1458098034i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_strikethrough", 1458098034i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_table", 3426862026i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_dropcap", 4061635501i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_table_column_expand", 117236061i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_table_column_name", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_cell_row_background_color", 3465483165i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_cell_border_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_cell_size_override", 3108078480i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_cell_padding", 2046264180i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_cell", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_fgcolor", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_bgcolor", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_customfx", 2337942958i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "push_context", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "pop_context", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "pop", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "pop_all", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_structured_text_bidi_override", 55961453i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_structured_text_bidi_override", 3385126229i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_structured_text_bidi_override_options", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_structured_text_bidi_override_options", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_text_direction", 119160795i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_text_direction", 797257663i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_language", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_language", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_horizontal_alignment", 2312603777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_horizontal_alignment", 341400642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_vertical_alignment", 1796458609i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_vertical_alignment", 3274884059i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_justification_flags", 2877345813i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_justification_flags", 1583363614i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_tab_stops", 2899603908i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_tab_stops", 675695659i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_autowrap_mode", 3289138044i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_autowrap_mode", 1549071663i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_autowrap_trim_flags", 2809697122i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_autowrap_trim_flags", 2340632602i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_meta_underline", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "is_meta_underlined", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_hint_underline", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "is_hint_underlined", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_scroll_active", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "is_scroll_active", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_scroll_follow_visible_characters", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "is_scroll_following_visible_characters", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_scroll_follow", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "is_scroll_following", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_v_scroll_bar", 2630340773i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "scroll_to_line", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "scroll_to_paragraph", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "scroll_to_selection", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_tab_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_tab_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_fit_content", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "is_fit_content_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_selection_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "is_selection_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_context_menu_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "is_context_menu_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_shortcut_keys_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "is_shortcut_keys_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_deselect_on_focus_loss_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "is_deselect_on_focus_loss_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_drag_and_drop_selection_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "is_drag_and_drop_selection_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_selection_from", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_selection_to", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_selection_line_offset", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "select_all", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_selected_text", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "deselect", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "parse_bbcode", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "append_text", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_text", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "is_ready", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "is_finished", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_threaded", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "is_threaded", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_progress_bar_delay", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_progress_bar_delay", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_visible_characters", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_visible_characters", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_visible_characters_behavior", 258789322i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_visible_characters_behavior", 3383839701i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_visible_ratio", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_visible_ratio", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_character_line", 3744713108i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_character_paragraph", 3744713108i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_total_character_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_use_bbcode", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "is_using_bbcode", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_line_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_line_range", 3665014314i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_visible_line_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_paragraph_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_visible_paragraph_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_content_height", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_content_width", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_line_height", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_line_width", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_visible_content_rect", 410525958i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_line_offset", 4025615559i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_paragraph_offset", 4025615559i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "parse_expressions_for_values", 1522900837i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "set_effects", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_effects", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "install_effect", 1114965689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "reload_effects", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "get_menu", 229722558i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "is_menu_visible", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RichTextLabel), "RichTextLabel", "menu_option", 1286410249i64),);
    
}
fn load_RigidBody2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RigidBody2D = string_names.fetch("RigidBody2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_mass", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "get_mass", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "get_inertia", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_inertia", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_center_of_mass_mode", 1757235706i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "get_center_of_mass_mode", 3277132817i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_center_of_mass", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "get_center_of_mass", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_physics_material_override", 1784508650i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "get_physics_material_override", 2521850424i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_gravity_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "get_gravity_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_linear_damp_mode", 3406533708i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "get_linear_damp_mode", 2970511462i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_angular_damp_mode", 3406533708i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "get_angular_damp_mode", 2970511462i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_linear_damp", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "get_linear_damp", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_angular_damp", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "get_angular_damp", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_linear_velocity", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "get_linear_velocity", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_angular_velocity", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "get_angular_velocity", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_max_contacts_reported", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "get_max_contacts_reported", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "get_contact_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_use_custom_integrator", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "is_using_custom_integrator", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_contact_monitor", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "is_contact_monitor_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_continuous_collision_detection_mode", 1000241384i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "get_continuous_collision_detection_mode", 815214376i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_axis_velocity", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "apply_central_impulse", 3862383994i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "apply_impulse", 4288681949i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "apply_torque_impulse", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "apply_central_force", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "apply_force", 4288681949i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "apply_torque", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "add_constant_central_force", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "add_constant_force", 4288681949i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "add_constant_torque", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_constant_force", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "get_constant_force", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_constant_torque", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "get_constant_torque", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_sleeping", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "is_sleeping", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_can_sleep", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "is_able_to_sleep", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_lock_rotation_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "is_lock_rotation_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_freeze_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "is_freeze_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "set_freeze_mode", 1705112154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "get_freeze_mode", 2016872314i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody2D), "RigidBody2D", "get_colliding_bodies", 3995934104i64),);
    
}
fn load_RigidBody3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RigidBody3D = string_names.fetch("RigidBody3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_mass", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "get_mass", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_inertia", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "get_inertia", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_center_of_mass_mode", 3625866032i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "get_center_of_mass_mode", 237405040i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_center_of_mass", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "get_center_of_mass", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_physics_material_override", 1784508650i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "get_physics_material_override", 2521850424i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_linear_velocity", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "get_linear_velocity", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_angular_velocity", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "get_angular_velocity", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "get_inverse_inertia_tensor", 2716978435i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_gravity_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "get_gravity_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_linear_damp_mode", 1802035050i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "get_linear_damp_mode", 1366206940i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_angular_damp_mode", 1802035050i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "get_angular_damp_mode", 1366206940i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_linear_damp", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "get_linear_damp", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_angular_damp", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "get_angular_damp", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_max_contacts_reported", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "get_max_contacts_reported", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "get_contact_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_use_custom_integrator", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "is_using_custom_integrator", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_contact_monitor", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "is_contact_monitor_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_use_continuous_collision_detection", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "is_using_continuous_collision_detection", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_axis_velocity", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "apply_central_impulse", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "apply_impulse", 2754756483i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "apply_torque_impulse", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "apply_central_force", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "apply_force", 2754756483i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "apply_torque", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "add_constant_central_force", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "add_constant_force", 2754756483i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "add_constant_torque", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_constant_force", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "get_constant_force", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_constant_torque", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "get_constant_torque", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_sleeping", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "is_sleeping", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_can_sleep", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "is_able_to_sleep", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_lock_rotation_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "is_lock_rotation_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_freeze_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "is_freeze_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "set_freeze_mode", 1319914653i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "get_freeze_mode", 2008423905i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RigidBody3D), "RigidBody3D", "get_colliding_bodies", 3995934104i64),);
    
}
fn load_RootMotionView_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_RootMotionView = string_names.fetch("RootMotionView");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RootMotionView), "RootMotionView", "set_animation_path", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RootMotionView), "RootMotionView", "get_animation_path", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RootMotionView), "RootMotionView", "set_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RootMotionView), "RootMotionView", "get_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RootMotionView), "RootMotionView", "set_cell_size", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RootMotionView), "RootMotionView", "get_cell_size", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RootMotionView), "RootMotionView", "set_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RootMotionView), "RootMotionView", "get_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RootMotionView), "RootMotionView", "set_zero_y", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_RootMotionView), "RootMotionView", "get_zero_y", 36873697i64),);
    
}
fn load_SceneMultiplayer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SceneMultiplayer = string_names.fetch("SceneMultiplayer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneMultiplayer), "SceneMultiplayer", "set_root_path", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneMultiplayer), "SceneMultiplayer", "get_root_path", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneMultiplayer), "SceneMultiplayer", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneMultiplayer), "SceneMultiplayer", "disconnect_peer", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneMultiplayer), "SceneMultiplayer", "get_authenticating_peers", 969006518i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneMultiplayer), "SceneMultiplayer", "send_auth", 506032537i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneMultiplayer), "SceneMultiplayer", "complete_auth", 844576869i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneMultiplayer), "SceneMultiplayer", "set_auth_callback", 1611583062i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneMultiplayer), "SceneMultiplayer", "get_auth_callback", 1307783378i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneMultiplayer), "SceneMultiplayer", "set_auth_timeout", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneMultiplayer), "SceneMultiplayer", "get_auth_timeout", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneMultiplayer), "SceneMultiplayer", "set_refuse_new_connections", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneMultiplayer), "SceneMultiplayer", "is_refusing_new_connections", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneMultiplayer), "SceneMultiplayer", "set_allow_object_decoding", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneMultiplayer), "SceneMultiplayer", "is_object_decoding_allowed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneMultiplayer), "SceneMultiplayer", "set_server_relay_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneMultiplayer), "SceneMultiplayer", "is_server_relay_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneMultiplayer), "SceneMultiplayer", "send_bytes", 1307428718i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneMultiplayer), "SceneMultiplayer", "get_max_sync_packet_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneMultiplayer), "SceneMultiplayer", "set_max_sync_packet_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneMultiplayer), "SceneMultiplayer", "get_max_delta_packet_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneMultiplayer), "SceneMultiplayer", "set_max_delta_packet_size", 1286410249i64),);
    
}
fn load_SceneReplicationConfig_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SceneReplicationConfig = string_names.fetch("SceneReplicationConfig");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneReplicationConfig), "SceneReplicationConfig", "get_properties", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneReplicationConfig), "SceneReplicationConfig", "add_property", 4094619021i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneReplicationConfig), "SceneReplicationConfig", "has_property", 861721659i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneReplicationConfig), "SceneReplicationConfig", "remove_property", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneReplicationConfig), "SceneReplicationConfig", "property_get_index", 1382022557i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneReplicationConfig), "SceneReplicationConfig", "property_get_spawn", 3456846888i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneReplicationConfig), "SceneReplicationConfig", "property_set_spawn", 3868023870i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneReplicationConfig), "SceneReplicationConfig", "property_get_replication_mode", 2870606336i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneReplicationConfig), "SceneReplicationConfig", "property_set_replication_mode", 3200083865i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneReplicationConfig), "SceneReplicationConfig", "property_get_sync", 3456846888i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneReplicationConfig), "SceneReplicationConfig", "property_set_sync", 3868023870i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneReplicationConfig), "SceneReplicationConfig", "property_get_watch", 3456846888i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneReplicationConfig), "SceneReplicationConfig", "property_set_watch", 3868023870i64),);
    
}
fn load_SceneState_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SceneState = string_names.fetch("SceneState");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "get_path", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "get_base_scene_state", 3479783971i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "get_node_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "get_node_type", 659327637i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "get_node_name", 659327637i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "get_node_path", 2272487792i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "get_node_owner_path", 408788394i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "is_node_instance_placeholder", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "get_node_instance_placeholder", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "get_node_instance", 511017218i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "get_node_groups", 647634434i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "get_node_index", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "get_node_property_count", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "get_node_property_name", 351665558i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "get_node_property_value", 678354945i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "get_connection_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "get_connection_source", 408788394i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "get_connection_signal", 659327637i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "get_connection_target", 408788394i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "get_connection_method", 659327637i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "get_connection_flags", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "get_connection_binds", 663333327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneState), "SceneState", "get_connection_unbinds", 923996154i64),);
    
}
fn load_SceneTree_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SceneTree = string_names.fetch("SceneTree");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "get_root", 1757182445i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "has_group", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "is_accessibility_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "is_accessibility_supported", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "is_auto_accept_quit", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "set_auto_accept_quit", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "is_quit_on_go_back", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "set_quit_on_go_back", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "set_debug_collisions_hint", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "is_debugging_collisions_hint", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "set_debug_paths_hint", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "is_debugging_paths_hint", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "set_debug_navigation_hint", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "is_debugging_navigation_hint", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "set_edited_scene_root", 1078189570i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "get_edited_scene_root", 3160264692i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "set_pause", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "is_paused", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "create_timer", 2709170273i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "create_tween", 3426978995i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "get_processed_tweens", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "get_node_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "get_frame", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "quit", 1995695955i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "set_physics_interpolation_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "is_physics_interpolation_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "queue_delete", 3975164845i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "call_group_flags", 1527739229i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "notify_group_flags", 1245489420i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "set_group_flags", 3497599527i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "call_group", 1257962832i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "notify_group", 2415702435i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "set_group", 1279312029i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "get_nodes_in_group", 689397652i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "get_first_node_in_group", 4071044623i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "get_node_count_in_group", 2458036349i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "set_current_scene", 1078189570i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "get_current_scene", 3160264692i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "change_scene_to_file", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "change_scene_to_packed", 107349098i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "reload_current_scene", 166280745i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "unload_current_scene", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "set_multiplayer", 2385607013i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "get_multiplayer", 3453401404i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "set_multiplayer_poll_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTree), "SceneTree", "is_multiplayer_poll_enabled", 36873697i64),);
    
}
fn load_SceneTreeTimer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SceneTreeTimer = string_names.fetch("SceneTreeTimer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTreeTimer), "SceneTreeTimer", "set_time_left", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SceneTreeTimer), "SceneTreeTimer", "get_time_left", 1740695150i64),);
    
}
fn load_Script_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Script = string_names.fetch("Script");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Script), "Script", "can_instantiate", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Script), "Script", "instance_has", 397768994i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Script), "Script", "has_source_code", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Script), "Script", "get_source_code", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Script), "Script", "set_source_code", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Script), "Script", "reload", 1633102583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Script), "Script", "get_base_script", 278624046i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Script), "Script", "get_instance_base_type", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Script), "Script", "get_global_name", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Script), "Script", "has_script_signal", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Script), "Script", "get_script_property_list", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Script), "Script", "get_script_method_list", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Script), "Script", "get_script_signal_list", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Script), "Script", "get_script_constant_map", 2382534195i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Script), "Script", "get_property_default_value", 2138907829i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Script), "Script", "is_tool", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Script), "Script", "is_abstract", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Script), "Script", "get_rpc_config", 1214101251i64),);
    
}
fn load_ScriptBacktrace_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ScriptBacktrace = string_names.fetch("ScriptBacktrace");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScriptBacktrace), "ScriptBacktrace", "get_language_name", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScriptBacktrace), "ScriptBacktrace", "is_empty", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScriptBacktrace), "ScriptBacktrace", "get_frame_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScriptBacktrace), "ScriptBacktrace", "get_frame_function", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScriptBacktrace), "ScriptBacktrace", "get_frame_file", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScriptBacktrace), "ScriptBacktrace", "get_frame_line", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScriptBacktrace), "ScriptBacktrace", "get_global_variable_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScriptBacktrace), "ScriptBacktrace", "get_global_variable_name", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScriptBacktrace), "ScriptBacktrace", "get_global_variable_value", 4227898402i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScriptBacktrace), "ScriptBacktrace", "get_local_variable_count", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScriptBacktrace), "ScriptBacktrace", "get_local_variable_name", 1391810591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScriptBacktrace), "ScriptBacktrace", "get_local_variable_value", 678354945i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScriptBacktrace), "ScriptBacktrace", "get_member_variable_count", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScriptBacktrace), "ScriptBacktrace", "get_member_variable_name", 1391810591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScriptBacktrace), "ScriptBacktrace", "get_member_variable_value", 678354945i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScriptBacktrace), "ScriptBacktrace", "format", 3464456933i64),);
    
}
fn load_ScrollBar_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ScrollBar = string_names.fetch("ScrollBar");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollBar), "ScrollBar", "set_custom_step", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollBar), "ScrollBar", "get_custom_step", 1740695150i64),);
    
}
fn load_ScrollContainer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ScrollContainer = string_names.fetch("ScrollContainer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollContainer), "ScrollContainer", "set_h_scroll", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollContainer), "ScrollContainer", "get_h_scroll", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollContainer), "ScrollContainer", "set_v_scroll", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollContainer), "ScrollContainer", "get_v_scroll", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollContainer), "ScrollContainer", "set_horizontal_custom_step", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollContainer), "ScrollContainer", "get_horizontal_custom_step", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollContainer), "ScrollContainer", "set_vertical_custom_step", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollContainer), "ScrollContainer", "get_vertical_custom_step", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollContainer), "ScrollContainer", "set_horizontal_scroll_mode", 2750506364i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollContainer), "ScrollContainer", "get_horizontal_scroll_mode", 3987985145i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollContainer), "ScrollContainer", "set_vertical_scroll_mode", 2750506364i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollContainer), "ScrollContainer", "get_vertical_scroll_mode", 3987985145i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollContainer), "ScrollContainer", "set_deadzone", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollContainer), "ScrollContainer", "get_deadzone", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollContainer), "ScrollContainer", "set_follow_focus", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollContainer), "ScrollContainer", "is_following_focus", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollContainer), "ScrollContainer", "get_h_scroll_bar", 4004517983i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollContainer), "ScrollContainer", "get_v_scroll_bar", 2630340773i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollContainer), "ScrollContainer", "ensure_control_visible", 1496901182i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollContainer), "ScrollContainer", "set_draw_focus_border", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ScrollContainer), "ScrollContainer", "get_draw_focus_border", 2240911060i64),);
    
}
fn load_SegmentShape2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SegmentShape2D = string_names.fetch("SegmentShape2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SegmentShape2D), "SegmentShape2D", "set_a", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SegmentShape2D), "SegmentShape2D", "get_a", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SegmentShape2D), "SegmentShape2D", "set_b", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SegmentShape2D), "SegmentShape2D", "get_b", 3341600327i64),);
    
}
fn load_SeparationRayShape2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SeparationRayShape2D = string_names.fetch("SeparationRayShape2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SeparationRayShape2D), "SeparationRayShape2D", "set_length", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SeparationRayShape2D), "SeparationRayShape2D", "get_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SeparationRayShape2D), "SeparationRayShape2D", "set_slide_on_slope", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SeparationRayShape2D), "SeparationRayShape2D", "get_slide_on_slope", 36873697i64),);
    
}
fn load_SeparationRayShape3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SeparationRayShape3D = string_names.fetch("SeparationRayShape3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SeparationRayShape3D), "SeparationRayShape3D", "set_length", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SeparationRayShape3D), "SeparationRayShape3D", "get_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SeparationRayShape3D), "SeparationRayShape3D", "set_slide_on_slope", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SeparationRayShape3D), "SeparationRayShape3D", "get_slide_on_slope", 36873697i64),);
    
}
fn load_Shader_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Shader = string_names.fetch("Shader");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shader), "Shader", "get_mode", 3392948163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shader), "Shader", "set_code", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shader), "Shader", "get_code", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shader), "Shader", "set_default_texture_parameter", 3850209648i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shader), "Shader", "get_default_texture_parameter", 4213877425i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shader), "Shader", "get_shader_uniform_list", 1230511656i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shader), "Shader", "inspect_native_shader_code", 3218959716i64),);
    
}
fn load_ShaderInclude_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ShaderInclude = string_names.fetch("ShaderInclude");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShaderInclude), "ShaderInclude", "set_code", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShaderInclude), "ShaderInclude", "get_code", 201670096i64),);
    
}
fn load_ShaderIncludeDB_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ShaderIncludeDB = string_names.fetch("ShaderIncludeDB");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShaderIncludeDB), "ShaderIncludeDB", "list_built_in_include_files", 2981934095i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShaderIncludeDB), "ShaderIncludeDB", "has_built_in_include_file", 2323990056i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShaderIncludeDB), "ShaderIncludeDB", "get_built_in_include_file", 1703090593i64),);
    
}
fn load_ShaderMaterial_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ShaderMaterial = string_names.fetch("ShaderMaterial");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShaderMaterial), "ShaderMaterial", "set_shader", 3341921675i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShaderMaterial), "ShaderMaterial", "get_shader", 2078273437i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShaderMaterial), "ShaderMaterial", "set_shader_parameter", 3776071444i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShaderMaterial), "ShaderMaterial", "get_shader_parameter", 2760726917i64),);
    
}
fn load_Shape2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Shape2D = string_names.fetch("Shape2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shape2D), "Shape2D", "set_custom_solver_bias", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shape2D), "Shape2D", "get_custom_solver_bias", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shape2D), "Shape2D", "collide", 3709843132i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shape2D), "Shape2D", "collide_with_motion", 2869556801i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shape2D), "Shape2D", "collide_and_get_contacts", 3056932662i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shape2D), "Shape2D", "collide_with_motion_and_get_contacts", 3620351573i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shape2D), "Shape2D", "draw", 2948539648i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shape2D), "Shape2D", "get_rect", 1639390495i64),);
    
}
fn load_Shape3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Shape3D = string_names.fetch("Shape3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shape3D), "Shape3D", "set_custom_solver_bias", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shape3D), "Shape3D", "get_custom_solver_bias", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shape3D), "Shape3D", "set_margin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shape3D), "Shape3D", "get_margin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shape3D), "Shape3D", "get_debug_mesh", 1605880883i64),);
    
}
fn load_ShapeCast2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ShapeCast2D = string_names.fetch("ShapeCast2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "set_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "is_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "set_shape", 771364740i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "get_shape", 522005891i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "set_target_position", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "get_target_position", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "set_margin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "get_margin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "set_max_results", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "get_max_results", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "is_colliding", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "get_collision_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "force_shapecast_update", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "get_collider", 3332903315i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "get_collider_rid", 495598643i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "get_collider_shape", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "get_collision_point", 2299179447i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "get_collision_normal", 2299179447i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "get_closest_collision_safe_fraction", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "get_closest_collision_unsafe_fraction", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "add_exception_rid", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "add_exception", 3090941106i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "remove_exception_rid", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "remove_exception", 3090941106i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "clear_exceptions", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "set_collision_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "get_collision_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "set_collision_mask_value", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "get_collision_mask_value", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "set_exclude_parent_body", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "get_exclude_parent_body", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "set_collide_with_areas", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "is_collide_with_areas_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "set_collide_with_bodies", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "is_collide_with_bodies_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast2D), "ShapeCast2D", "get_collision_result", 3995934104i64),);
    
}
fn load_ShapeCast3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ShapeCast3D = string_names.fetch("ShapeCast3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "resource_changed", 968641751i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "set_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "is_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "set_shape", 1549710052i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "get_shape", 3214262478i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "set_target_position", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "get_target_position", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "set_margin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "get_margin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "set_max_results", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "get_max_results", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "is_colliding", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "get_collision_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "force_shapecast_update", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "get_collider", 3332903315i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "get_collider_rid", 495598643i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "get_collider_shape", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "get_collision_point", 711720468i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "get_collision_normal", 711720468i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "get_closest_collision_safe_fraction", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "get_closest_collision_unsafe_fraction", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "add_exception_rid", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "add_exception", 1976431078i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "remove_exception_rid", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "remove_exception", 1976431078i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "clear_exceptions", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "set_collision_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "get_collision_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "set_collision_mask_value", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "get_collision_mask_value", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "set_exclude_parent_body", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "get_exclude_parent_body", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "set_collide_with_areas", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "is_collide_with_areas_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "set_collide_with_bodies", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "is_collide_with_bodies_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "get_collision_result", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "set_debug_shape_custom_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ShapeCast3D), "ShapeCast3D", "get_debug_shape_custom_color", 3444240500i64),);
    
}
fn load_Shortcut_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Shortcut = string_names.fetch("Shortcut");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shortcut), "Shortcut", "set_events", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shortcut), "Shortcut", "get_events", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shortcut), "Shortcut", "has_valid_event", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shortcut), "Shortcut", "matches_event", 3738334489i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Shortcut), "Shortcut", "get_as_text", 201670096i64),);
    
}
fn load_Skeleton2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Skeleton2D = string_names.fetch("Skeleton2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton2D), "Skeleton2D", "get_bone_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton2D), "Skeleton2D", "get_bone", 2556267111i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton2D), "Skeleton2D", "get_skeleton", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton2D), "Skeleton2D", "execute_modifications", 1005356550i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton2D), "Skeleton2D", "set_bone_local_pose_override", 555457532i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton2D), "Skeleton2D", "get_bone_local_pose_override", 2995540667i64),);
    
}
fn load_Skeleton3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Skeleton3D = string_names.fetch("Skeleton3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "add_bone", 1597066294i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "find_bone", 1321353865i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "get_bone_name", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "set_bone_name", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "get_bone_meta", 203112058i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "get_bone_meta_list", 663333327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "has_bone_meta", 921227809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "set_bone_meta", 702482756i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "get_concatenated_bone_names", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "get_bone_parent", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "set_bone_parent", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "get_bone_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "get_version", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "unparent_bone_and_rest", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "get_bone_children", 1706082319i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "get_parentless_bones", 1930428628i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "get_bone_rest", 1965739696i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "set_bone_rest", 3616898986i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "get_bone_global_rest", 1965739696i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "create_skin_from_rest_transforms", 1032037385i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "register_skin", 3405789568i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "localize_rests", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "clear_bones", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "get_bone_pose", 1965739696i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "set_bone_pose", 3616898986i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "set_bone_pose_position", 1530502735i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "set_bone_pose_rotation", 2823819782i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "set_bone_pose_scale", 1530502735i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "get_bone_pose_position", 711720468i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "get_bone_pose_rotation", 476865136i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "get_bone_pose_scale", 711720468i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "reset_bone_pose", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "reset_bone_poses", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "is_bone_enabled", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "set_bone_enabled", 972357352i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "get_bone_global_pose", 1965739696i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "set_bone_global_pose", 3616898986i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "force_update_all_bone_transforms", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "force_update_bone_child_transform", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "set_motion_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "get_motion_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "set_show_rest_only", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "is_show_rest_only", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "set_modifier_callback_mode_process", 3916362634i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "get_modifier_callback_mode_process", 997182536i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "advance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "clear_bones_global_pose_override", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "set_bone_global_pose_override", 3483398371i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "get_bone_global_pose_override", 1965739696i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "get_bone_global_pose_no_override", 1965739696i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "set_animate_physical_bones", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "get_animate_physical_bones", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "physical_bones_stop_simulation", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "physical_bones_start_simulation", 2787316981i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "physical_bones_add_collision_exception", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skeleton3D), "Skeleton3D", "physical_bones_remove_collision_exception", 2722037293i64),);
    
}
fn load_SkeletonIK3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SkeletonIK3D = string_names.fetch("SkeletonIK3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonIK3D), "SkeletonIK3D", "set_root_bone", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonIK3D), "SkeletonIK3D", "get_root_bone", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonIK3D), "SkeletonIK3D", "set_tip_bone", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonIK3D), "SkeletonIK3D", "get_tip_bone", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonIK3D), "SkeletonIK3D", "set_target_transform", 2952846383i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonIK3D), "SkeletonIK3D", "get_target_transform", 3229777777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonIK3D), "SkeletonIK3D", "set_target_node", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonIK3D), "SkeletonIK3D", "get_target_node", 277076166i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonIK3D), "SkeletonIK3D", "set_override_tip_basis", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonIK3D), "SkeletonIK3D", "is_override_tip_basis", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonIK3D), "SkeletonIK3D", "set_use_magnet", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonIK3D), "SkeletonIK3D", "is_using_magnet", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonIK3D), "SkeletonIK3D", "set_magnet_position", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonIK3D), "SkeletonIK3D", "get_magnet_position", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonIK3D), "SkeletonIK3D", "get_parent_skeleton", 1488626673i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonIK3D), "SkeletonIK3D", "is_running", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonIK3D), "SkeletonIK3D", "set_min_distance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonIK3D), "SkeletonIK3D", "get_min_distance", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonIK3D), "SkeletonIK3D", "set_max_iterations", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonIK3D), "SkeletonIK3D", "get_max_iterations", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonIK3D), "SkeletonIK3D", "start", 107499316i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonIK3D), "SkeletonIK3D", "stop", 3218959716i64),);
    
}
fn load_SkeletonModifier3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SkeletonModifier3D = string_names.fetch("SkeletonModifier3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonModifier3D), "SkeletonModifier3D", "get_skeleton", 1488626673i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonModifier3D), "SkeletonModifier3D", "set_active", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonModifier3D), "SkeletonModifier3D", "is_active", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonModifier3D), "SkeletonModifier3D", "set_influence", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonModifier3D), "SkeletonModifier3D", "get_influence", 1740695150i64),);
    
}
fn load_SkeletonProfile_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SkeletonProfile = string_names.fetch("SkeletonProfile");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "set_root_bone", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "get_root_bone", 2737447660i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "set_scale_base_bone", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "get_scale_base_bone", 2737447660i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "set_group_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "get_group_size", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "get_group_name", 659327637i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "set_group_name", 3780747571i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "get_texture", 3536238170i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "set_texture", 666127730i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "set_bone_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "get_bone_size", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "find_bone", 2458036349i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "get_bone_name", 659327637i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "set_bone_name", 3780747571i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "get_bone_parent", 659327637i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "set_bone_parent", 3780747571i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "get_tail_direction", 2675997574i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "set_tail_direction", 1231951015i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "get_bone_tail", 659327637i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "set_bone_tail", 3780747571i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "get_reference_pose", 1965739696i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "set_reference_pose", 3616898986i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "get_handle_offset", 2299179447i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "set_handle_offset", 163021252i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "get_group", 659327637i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "set_group", 3780747571i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "is_required", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkeletonProfile), "SkeletonProfile", "set_required", 300928843i64),);
    
}
fn load_Skin_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Skin = string_names.fetch("Skin");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skin), "Skin", "set_bind_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skin), "Skin", "get_bind_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skin), "Skin", "add_bind", 3616898986i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skin), "Skin", "add_named_bind", 3154712474i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skin), "Skin", "set_bind_pose", 3616898986i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skin), "Skin", "get_bind_pose", 1965739696i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skin), "Skin", "set_bind_name", 3780747571i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skin), "Skin", "get_bind_name", 659327637i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skin), "Skin", "set_bind_bone", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skin), "Skin", "get_bind_bone", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Skin), "Skin", "clear_binds", 3218959716i64),);
    
}
fn load_SkinReference_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SkinReference = string_names.fetch("SkinReference");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkinReference), "SkinReference", "get_skeleton", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SkinReference), "SkinReference", "get_skin", 2074563878i64),);
    
}
fn load_Sky_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Sky = string_names.fetch("Sky");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sky), "Sky", "set_radiance_size", 1512957179i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sky), "Sky", "get_radiance_size", 2708733976i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sky), "Sky", "set_process_mode", 875986769i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sky), "Sky", "get_process_mode", 731245043i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sky), "Sky", "set_material", 2757459619i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sky), "Sky", "get_material", 5934680i64),);
    
}
fn load_Slider_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Slider = string_names.fetch("Slider");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Slider), "Slider", "set_ticks", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Slider), "Slider", "get_ticks", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Slider), "Slider", "get_ticks_on_borders", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Slider), "Slider", "set_ticks_on_borders", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Slider), "Slider", "get_ticks_position", 3567635531i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Slider), "Slider", "set_ticks_position", 2952822224i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Slider), "Slider", "set_editable", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Slider), "Slider", "is_editable", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Slider), "Slider", "set_scrollable", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Slider), "Slider", "is_scrollable", 36873697i64),);
    
}
fn load_SliderJoint3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SliderJoint3D = string_names.fetch("SliderJoint3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SliderJoint3D), "SliderJoint3D", "set_param", 918243683i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SliderJoint3D), "SliderJoint3D", "get_param", 959925627i64),);
    
}
fn load_SoftBody3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SoftBody3D = string_names.fetch("SoftBody3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "get_physics_rid", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "set_collision_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "get_collision_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "set_collision_layer", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "get_collision_layer", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "set_collision_mask_value", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "get_collision_mask_value", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "set_collision_layer_value", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "get_collision_layer_value", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "set_parent_collision_ignore", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "get_parent_collision_ignore", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "set_disable_mode", 1104158384i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "get_disable_mode", 4135042476i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "get_collision_exceptions", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "add_collision_exception_with", 1078189570i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "remove_collision_exception_with", 1078189570i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "set_simulation_precision", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "get_simulation_precision", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "set_total_mass", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "get_total_mass", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "set_linear_stiffness", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "get_linear_stiffness", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "set_shrinking_factor", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "get_shrinking_factor", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "set_pressure_coefficient", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "get_pressure_coefficient", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "set_damping_coefficient", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "get_damping_coefficient", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "set_drag_coefficient", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "get_drag_coefficient", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "get_point_transform", 871989493i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "apply_impulse", 1530502735i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "apply_force", 1530502735i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "apply_central_impulse", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "apply_central_force", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "set_point_pinned", 528784402i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "is_point_pinned", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "set_ray_pickable", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SoftBody3D), "SoftBody3D", "is_ray_pickable", 36873697i64),);
    
}
fn load_SphereMesh_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SphereMesh = string_names.fetch("SphereMesh");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SphereMesh), "SphereMesh", "set_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SphereMesh), "SphereMesh", "get_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SphereMesh), "SphereMesh", "set_height", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SphereMesh), "SphereMesh", "get_height", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SphereMesh), "SphereMesh", "set_radial_segments", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SphereMesh), "SphereMesh", "get_radial_segments", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SphereMesh), "SphereMesh", "set_rings", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SphereMesh), "SphereMesh", "get_rings", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SphereMesh), "SphereMesh", "set_is_hemisphere", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SphereMesh), "SphereMesh", "get_is_hemisphere", 36873697i64),);
    
}
fn load_SphereOccluder3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SphereOccluder3D = string_names.fetch("SphereOccluder3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SphereOccluder3D), "SphereOccluder3D", "set_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SphereOccluder3D), "SphereOccluder3D", "get_radius", 1740695150i64),);
    
}
fn load_SphereShape3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SphereShape3D = string_names.fetch("SphereShape3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SphereShape3D), "SphereShape3D", "set_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SphereShape3D), "SphereShape3D", "get_radius", 1740695150i64),);
    
}
fn load_SpinBox_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SpinBox = string_names.fetch("SpinBox");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpinBox), "SpinBox", "set_horizontal_alignment", 2312603777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpinBox), "SpinBox", "get_horizontal_alignment", 341400642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpinBox), "SpinBox", "set_suffix", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpinBox), "SpinBox", "get_suffix", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpinBox), "SpinBox", "set_prefix", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpinBox), "SpinBox", "get_prefix", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpinBox), "SpinBox", "set_editable", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpinBox), "SpinBox", "set_custom_arrow_step", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpinBox), "SpinBox", "get_custom_arrow_step", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpinBox), "SpinBox", "is_editable", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpinBox), "SpinBox", "set_update_on_text_changed", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpinBox), "SpinBox", "get_update_on_text_changed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpinBox), "SpinBox", "set_select_all_on_focus", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpinBox), "SpinBox", "is_select_all_on_focus", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpinBox), "SpinBox", "apply", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpinBox), "SpinBox", "get_line_edit", 4071694264i64),);
    
}
fn load_SplitContainer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SplitContainer = string_names.fetch("SplitContainer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SplitContainer), "SplitContainer", "set_split_offset", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SplitContainer), "SplitContainer", "get_split_offset", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SplitContainer), "SplitContainer", "clamp_split_offset", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SplitContainer), "SplitContainer", "set_collapsed", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SplitContainer), "SplitContainer", "is_collapsed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SplitContainer), "SplitContainer", "set_dragger_visibility", 1168273952i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SplitContainer), "SplitContainer", "get_dragger_visibility", 967297479i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SplitContainer), "SplitContainer", "set_vertical", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SplitContainer), "SplitContainer", "is_vertical", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SplitContainer), "SplitContainer", "set_dragging_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SplitContainer), "SplitContainer", "is_dragging_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SplitContainer), "SplitContainer", "set_drag_area_margin_begin", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SplitContainer), "SplitContainer", "get_drag_area_margin_begin", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SplitContainer), "SplitContainer", "set_drag_area_margin_end", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SplitContainer), "SplitContainer", "get_drag_area_margin_end", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SplitContainer), "SplitContainer", "set_drag_area_offset", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SplitContainer), "SplitContainer", "get_drag_area_offset", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SplitContainer), "SplitContainer", "set_drag_area_highlight_in_editor", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SplitContainer), "SplitContainer", "is_drag_area_highlight_in_editor_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SplitContainer), "SplitContainer", "get_drag_area_control", 829782337i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SplitContainer), "SplitContainer", "set_touch_dragger_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SplitContainer), "SplitContainer", "is_touch_dragger_enabled", 36873697i64),);
    
}
fn load_SpringArm3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SpringArm3D = string_names.fetch("SpringArm3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringArm3D), "SpringArm3D", "get_hit_length", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringArm3D), "SpringArm3D", "set_length", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringArm3D), "SpringArm3D", "get_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringArm3D), "SpringArm3D", "set_shape", 1549710052i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringArm3D), "SpringArm3D", "get_shape", 3214262478i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringArm3D), "SpringArm3D", "add_excluded_object", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringArm3D), "SpringArm3D", "remove_excluded_object", 3521089500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringArm3D), "SpringArm3D", "clear_excluded_objects", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringArm3D), "SpringArm3D", "set_collision_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringArm3D), "SpringArm3D", "get_collision_mask", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringArm3D), "SpringArm3D", "set_margin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringArm3D), "SpringArm3D", "get_margin", 191475506i64),);
    
}
fn load_SpringBoneCollision3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SpringBoneCollision3D = string_names.fetch("SpringBoneCollision3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneCollision3D), "SpringBoneCollision3D", "get_skeleton", 1488626673i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneCollision3D), "SpringBoneCollision3D", "set_bone_name", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneCollision3D), "SpringBoneCollision3D", "get_bone_name", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneCollision3D), "SpringBoneCollision3D", "set_bone", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneCollision3D), "SpringBoneCollision3D", "get_bone", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneCollision3D), "SpringBoneCollision3D", "set_position_offset", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneCollision3D), "SpringBoneCollision3D", "get_position_offset", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneCollision3D), "SpringBoneCollision3D", "set_rotation_offset", 1727505552i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneCollision3D), "SpringBoneCollision3D", "get_rotation_offset", 1222331677i64),);
    
}
fn load_SpringBoneCollisionCapsule3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SpringBoneCollisionCapsule3D = string_names.fetch("SpringBoneCollisionCapsule3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneCollisionCapsule3D), "SpringBoneCollisionCapsule3D", "set_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneCollisionCapsule3D), "SpringBoneCollisionCapsule3D", "get_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneCollisionCapsule3D), "SpringBoneCollisionCapsule3D", "set_height", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneCollisionCapsule3D), "SpringBoneCollisionCapsule3D", "get_height", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneCollisionCapsule3D), "SpringBoneCollisionCapsule3D", "set_mid_height", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneCollisionCapsule3D), "SpringBoneCollisionCapsule3D", "get_mid_height", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneCollisionCapsule3D), "SpringBoneCollisionCapsule3D", "set_inside", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneCollisionCapsule3D), "SpringBoneCollisionCapsule3D", "is_inside", 36873697i64),);
    
}
fn load_SpringBoneCollisionSphere3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SpringBoneCollisionSphere3D = string_names.fetch("SpringBoneCollisionSphere3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneCollisionSphere3D), "SpringBoneCollisionSphere3D", "set_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneCollisionSphere3D), "SpringBoneCollisionSphere3D", "get_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneCollisionSphere3D), "SpringBoneCollisionSphere3D", "set_inside", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneCollisionSphere3D), "SpringBoneCollisionSphere3D", "is_inside", 36873697i64),);
    
}
fn load_SpringBoneSimulator3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SpringBoneSimulator3D = string_names.fetch("SpringBoneSimulator3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_root_bone_name", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_root_bone_name", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_root_bone", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_root_bone", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_end_bone_name", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_end_bone_name", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_end_bone", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_end_bone", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_extend_end_bone", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "is_end_bone_extended", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_end_bone_direction", 204796492i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_end_bone_direction", 2438315700i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_end_bone_length", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_end_bone_length", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_center_from", 2551505749i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_center_from", 2721930813i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_center_node", 2761262315i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_center_node", 408788394i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_center_bone_name", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_center_bone_name", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_center_bone", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_center_bone", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_radius", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_radius", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_rotation_axis", 3534169209i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_rotation_axis", 748837671i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_rotation_axis_vector", 1530502735i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_rotation_axis_vector", 711720468i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_radius_damping_curve", 1447180063i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_radius_damping_curve", 747537754i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_stiffness", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_stiffness", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_stiffness_damping_curve", 1447180063i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_stiffness_damping_curve", 747537754i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_drag", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_drag", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_drag_damping_curve", 1447180063i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_drag_damping_curve", 747537754i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_gravity", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_gravity", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_gravity_damping_curve", 1447180063i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_gravity_damping_curve", 747537754i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_gravity_direction", 1530502735i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_gravity_direction", 711720468i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_setting_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_setting_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "clear_settings", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_individual_config", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "is_config_individual", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_joint_bone_name", 1391810591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_joint_bone", 3175239445i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_joint_rotation_axis", 4224018032i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_joint_rotation_axis", 2488679199i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_joint_rotation_axis_vector", 2866752138i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_joint_rotation_axis_vector", 1592972041i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_joint_radius", 3506521499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_joint_radius", 3085491603i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_joint_stiffness", 3506521499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_joint_stiffness", 3085491603i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_joint_drag", 3506521499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_joint_drag", 3085491603i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_joint_gravity", 3506521499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_joint_gravity", 3085491603i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_joint_gravity_direction", 2866752138i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_joint_gravity_direction", 1592972041i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_joint_count", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_enable_all_child_collisions", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "are_all_child_collisions_enabled", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_exclude_collision_path", 132481804i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_exclude_collision_path", 464924783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_exclude_collision_count", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_exclude_collision_count", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "clear_exclude_collisions", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_collision_path", 132481804i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_collision_path", 464924783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_collision_count", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_collision_count", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "clear_collisions", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "set_external_force", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "get_external_force", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpringBoneSimulator3D), "SpringBoneSimulator3D", "reset", 3218959716i64),);
    
}
fn load_Sprite2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Sprite2D = string_names.fetch("Sprite2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "set_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "get_texture", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "set_centered", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "is_centered", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "set_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "get_offset", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "set_flip_h", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "is_flipped_h", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "set_flip_v", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "is_flipped_v", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "set_region_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "is_region_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "is_pixel_opaque", 556197845i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "set_region_rect", 2046264180i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "get_region_rect", 1639390495i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "set_region_filter_clip_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "is_region_filter_clip_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "set_frame", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "get_frame", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "set_frame_coords", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "get_frame_coords", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "set_vframes", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "get_vframes", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "set_hframes", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "get_hframes", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite2D), "Sprite2D", "get_rect", 1639390495i64),);
    
}
fn load_Sprite3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Sprite3D = string_names.fetch("Sprite3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite3D), "Sprite3D", "set_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite3D), "Sprite3D", "get_texture", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite3D), "Sprite3D", "set_region_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite3D), "Sprite3D", "is_region_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite3D), "Sprite3D", "set_region_rect", 2046264180i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite3D), "Sprite3D", "get_region_rect", 1639390495i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite3D), "Sprite3D", "set_frame", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite3D), "Sprite3D", "get_frame", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite3D), "Sprite3D", "set_frame_coords", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite3D), "Sprite3D", "get_frame_coords", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite3D), "Sprite3D", "set_vframes", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite3D), "Sprite3D", "get_vframes", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite3D), "Sprite3D", "set_hframes", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Sprite3D), "Sprite3D", "get_hframes", 3905245786i64),);
    
}
fn load_SpriteBase3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SpriteBase3D = string_names.fetch("SpriteBase3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "set_centered", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "is_centered", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "set_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "get_offset", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "set_flip_h", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "is_flipped_h", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "set_flip_v", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "is_flipped_v", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "set_modulate", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "get_modulate", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "set_render_priority", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "get_render_priority", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "set_pixel_size", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "get_pixel_size", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "set_axis", 1144690656i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "get_axis", 3050976882i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "set_draw_flag", 1135633219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "get_draw_flag", 1733036628i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "set_alpha_cut_mode", 227561226i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "get_alpha_cut_mode", 336003791i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "set_alpha_scissor_threshold", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "get_alpha_scissor_threshold", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "set_alpha_hash_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "get_alpha_hash_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "set_alpha_antialiasing", 3212649852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "get_alpha_antialiasing", 2889939400i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "set_alpha_antialiasing_edge", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "get_alpha_antialiasing_edge", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "set_billboard_mode", 4202036497i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "get_billboard_mode", 1283840139i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "set_texture_filter", 22904437i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "get_texture_filter", 3289213076i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "get_item_rect", 1639390495i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteBase3D), "SpriteBase3D", "generate_triangle_mesh", 3476533166i64),);
    
}
fn load_SpriteFrames_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SpriteFrames = string_names.fetch("SpriteFrames");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteFrames), "SpriteFrames", "add_animation", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteFrames), "SpriteFrames", "has_animation", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteFrames), "SpriteFrames", "duplicate_animation", 3740211285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteFrames), "SpriteFrames", "remove_animation", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteFrames), "SpriteFrames", "rename_animation", 3740211285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteFrames), "SpriteFrames", "get_animation_names", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteFrames), "SpriteFrames", "set_animation_speed", 4135858297i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteFrames), "SpriteFrames", "get_animation_speed", 2349060816i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteFrames), "SpriteFrames", "set_animation_loop", 2524380260i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteFrames), "SpriteFrames", "get_animation_loop", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteFrames), "SpriteFrames", "add_frame", 1351332740i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteFrames), "SpriteFrames", "set_frame", 56804795i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteFrames), "SpriteFrames", "remove_frame", 2415702435i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteFrames), "SpriteFrames", "get_frame_count", 2458036349i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteFrames), "SpriteFrames", "get_frame_texture", 2900517879i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteFrames), "SpriteFrames", "get_frame_duration", 1129309260i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteFrames), "SpriteFrames", "clear", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SpriteFrames), "SpriteFrames", "clear_all", 3218959716i64),);
    
}
fn load_StaticBody2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_StaticBody2D = string_names.fetch("StaticBody2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StaticBody2D), "StaticBody2D", "set_constant_linear_velocity", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StaticBody2D), "StaticBody2D", "set_constant_angular_velocity", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StaticBody2D), "StaticBody2D", "get_constant_linear_velocity", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StaticBody2D), "StaticBody2D", "get_constant_angular_velocity", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StaticBody2D), "StaticBody2D", "set_physics_material_override", 1784508650i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StaticBody2D), "StaticBody2D", "get_physics_material_override", 2521850424i64),);
    
}
fn load_StaticBody3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_StaticBody3D = string_names.fetch("StaticBody3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StaticBody3D), "StaticBody3D", "set_constant_linear_velocity", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StaticBody3D), "StaticBody3D", "set_constant_angular_velocity", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StaticBody3D), "StaticBody3D", "get_constant_linear_velocity", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StaticBody3D), "StaticBody3D", "get_constant_angular_velocity", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StaticBody3D), "StaticBody3D", "set_physics_material_override", 1784508650i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StaticBody3D), "StaticBody3D", "get_physics_material_override", 2521850424i64),);
    
}
fn load_StatusIndicator_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_StatusIndicator = string_names.fetch("StatusIndicator");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StatusIndicator), "StatusIndicator", "set_tooltip", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StatusIndicator), "StatusIndicator", "get_tooltip", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StatusIndicator), "StatusIndicator", "set_icon", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StatusIndicator), "StatusIndicator", "get_icon", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StatusIndicator), "StatusIndicator", "set_visible", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StatusIndicator), "StatusIndicator", "is_visible", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StatusIndicator), "StatusIndicator", "set_menu", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StatusIndicator), "StatusIndicator", "get_menu", 4075236667i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StatusIndicator), "StatusIndicator", "get_rect", 1639390495i64),);
    
}
fn load_StreamPeer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_StreamPeer = string_names.fetch("StreamPeer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "put_data", 680677267i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "put_partial_data", 2934048347i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "get_data", 1171824711i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "get_partial_data", 1171824711i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "get_available_bytes", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "set_big_endian", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "is_big_endian_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "put_8", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "put_u8", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "put_16", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "put_u16", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "put_32", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "put_u32", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "put_64", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "put_u64", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "put_half", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "put_float", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "put_double", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "put_string", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "put_utf8_string", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "put_var", 738511890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "get_8", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "get_u8", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "get_16", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "get_u16", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "get_32", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "get_u32", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "get_64", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "get_u64", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "get_half", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "get_float", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "get_double", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "get_string", 2309358862i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "get_utf8_string", 2309358862i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeer), "StreamPeer", "get_var", 3442865206i64),);
    
}
fn load_StreamPeerBuffer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_StreamPeerBuffer = string_names.fetch("StreamPeerBuffer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerBuffer), "StreamPeerBuffer", "seek", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerBuffer), "StreamPeerBuffer", "get_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerBuffer), "StreamPeerBuffer", "get_position", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerBuffer), "StreamPeerBuffer", "resize", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerBuffer), "StreamPeerBuffer", "set_data_array", 2971499966i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerBuffer), "StreamPeerBuffer", "get_data_array", 2362200018i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerBuffer), "StreamPeerBuffer", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerBuffer), "StreamPeerBuffer", "duplicate", 2474064677i64),);
    
}
fn load_StreamPeerTCP_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_StreamPeerTCP = string_names.fetch("StreamPeerTCP");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerTCP), "StreamPeerTCP", "bind", 3167955072i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerTCP), "StreamPeerTCP", "connect_to_host", 993915709i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerTCP), "StreamPeerTCP", "poll", 166280745i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerTCP), "StreamPeerTCP", "get_status", 859471121i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerTCP), "StreamPeerTCP", "get_connected_host", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerTCP), "StreamPeerTCP", "get_connected_port", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerTCP), "StreamPeerTCP", "get_local_port", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerTCP), "StreamPeerTCP", "disconnect_from_host", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerTCP), "StreamPeerTCP", "set_no_delay", 2586408642i64),);
    
}
fn load_StreamPeerTLS_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_StreamPeerTLS = string_names.fetch("StreamPeerTLS");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerTLS), "StreamPeerTLS", "poll", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerTLS), "StreamPeerTLS", "accept_stream", 4292689651i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerTLS), "StreamPeerTLS", "connect_to_stream", 57169517i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerTLS), "StreamPeerTLS", "get_status", 1128380576i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerTLS), "StreamPeerTLS", "get_stream", 2741655269i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StreamPeerTLS), "StreamPeerTLS", "disconnect_from_stream", 3218959716i64),);
    
}
fn load_StyleBox_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_StyleBox = string_names.fetch("StyleBox");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBox), "StyleBox", "get_minimum_size", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBox), "StyleBox", "set_content_margin", 4290182280i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBox), "StyleBox", "set_content_margin_all", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBox), "StyleBox", "get_content_margin", 2869120046i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBox), "StyleBox", "get_margin", 2869120046i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBox), "StyleBox", "get_offset", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBox), "StyleBox", "draw", 2275962004i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBox), "StyleBox", "get_current_item_drawn", 3213695180i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBox), "StyleBox", "test_mask", 3735564539i64),);
    
}
fn load_StyleBoxFlat_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_StyleBoxFlat = string_names.fetch("StyleBoxFlat");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "set_bg_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "get_bg_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "set_border_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "get_border_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "set_border_width_all", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "get_border_width_min", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "set_border_width", 437707142i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "get_border_width", 1983885014i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "set_border_blend", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "get_border_blend", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "set_corner_radius_all", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "set_corner_radius", 2696158768i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "get_corner_radius", 3982397690i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "set_expand_margin", 4290182280i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "set_expand_margin_all", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "get_expand_margin", 2869120046i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "set_draw_center", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "is_draw_center_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "set_skew", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "get_skew", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "set_shadow_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "get_shadow_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "set_shadow_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "get_shadow_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "set_shadow_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "get_shadow_offset", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "set_anti_aliased", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "is_anti_aliased", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "set_aa_size", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "get_aa_size", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "set_corner_detail", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxFlat), "StyleBoxFlat", "get_corner_detail", 3905245786i64),);
    
}
fn load_StyleBoxLine_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_StyleBoxLine = string_names.fetch("StyleBoxLine");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxLine), "StyleBoxLine", "set_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxLine), "StyleBoxLine", "get_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxLine), "StyleBoxLine", "set_thickness", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxLine), "StyleBoxLine", "get_thickness", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxLine), "StyleBoxLine", "set_grow_begin", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxLine), "StyleBoxLine", "get_grow_begin", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxLine), "StyleBoxLine", "set_grow_end", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxLine), "StyleBoxLine", "get_grow_end", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxLine), "StyleBoxLine", "set_vertical", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxLine), "StyleBoxLine", "is_vertical", 36873697i64),);
    
}
fn load_StyleBoxTexture_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_StyleBoxTexture = string_names.fetch("StyleBoxTexture");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxTexture), "StyleBoxTexture", "set_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxTexture), "StyleBoxTexture", "get_texture", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxTexture), "StyleBoxTexture", "set_texture_margin", 4290182280i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxTexture), "StyleBoxTexture", "set_texture_margin_all", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxTexture), "StyleBoxTexture", "get_texture_margin", 2869120046i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxTexture), "StyleBoxTexture", "set_expand_margin", 4290182280i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxTexture), "StyleBoxTexture", "set_expand_margin_all", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxTexture), "StyleBoxTexture", "get_expand_margin", 2869120046i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxTexture), "StyleBoxTexture", "set_region_rect", 2046264180i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxTexture), "StyleBoxTexture", "get_region_rect", 1639390495i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxTexture), "StyleBoxTexture", "set_draw_center", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxTexture), "StyleBoxTexture", "is_draw_center_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxTexture), "StyleBoxTexture", "set_modulate", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxTexture), "StyleBoxTexture", "get_modulate", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxTexture), "StyleBoxTexture", "set_h_axis_stretch_mode", 2965538783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxTexture), "StyleBoxTexture", "get_h_axis_stretch_mode", 3807744063i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxTexture), "StyleBoxTexture", "set_v_axis_stretch_mode", 2965538783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_StyleBoxTexture), "StyleBoxTexture", "get_v_axis_stretch_mode", 3807744063i64),);
    
}
fn load_SubViewport_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SubViewport = string_names.fetch("SubViewport");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SubViewport), "SubViewport", "set_size", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SubViewport), "SubViewport", "get_size", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SubViewport), "SubViewport", "set_size_2d_override", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SubViewport), "SubViewport", "get_size_2d_override", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SubViewport), "SubViewport", "set_size_2d_override_stretch", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SubViewport), "SubViewport", "is_size_2d_override_stretch_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SubViewport), "SubViewport", "set_update_mode", 1295690030i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SubViewport), "SubViewport", "get_update_mode", 2980171553i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SubViewport), "SubViewport", "set_clear_mode", 2834454712i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SubViewport), "SubViewport", "get_clear_mode", 331324495i64),);
    
}
fn load_SubViewportContainer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SubViewportContainer = string_names.fetch("SubViewportContainer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SubViewportContainer), "SubViewportContainer", "set_stretch", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SubViewportContainer), "SubViewportContainer", "is_stretch_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SubViewportContainer), "SubViewportContainer", "set_stretch_shrink", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SubViewportContainer), "SubViewportContainer", "get_stretch_shrink", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SubViewportContainer), "SubViewportContainer", "set_mouse_target", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SubViewportContainer), "SubViewportContainer", "is_mouse_target_enabled", 2240911060i64),);
    
}
fn load_SubtweenTweener_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SubtweenTweener = string_names.fetch("SubtweenTweener");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SubtweenTweener), "SubtweenTweener", "set_delay", 449181780i64),);
    
}
fn load_SurfaceTool_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SurfaceTool = string_names.fetch("SurfaceTool");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "set_skin_weight_count", 618679515i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "get_skin_weight_count", 1072401130i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "set_custom_format", 4087759856i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "get_custom_format", 839863283i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "begin", 2230304113i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "add_vertex", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "set_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "set_normal", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "set_tangent", 3505987427i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "set_uv", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "set_uv2", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "set_bones", 3614634198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "set_weights", 2899603908i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "set_custom", 2878471219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "set_smooth_group", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "add_triangle_fan", 2235017613i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "add_index", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "index", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "deindex", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "generate_normals", 107499316i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "generate_tangents", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "optimize_indices_for_cache", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "get_aabb", 1068685055i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "generate_lod", 1938056459i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "set_material", 2757459619i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "get_primitive_type", 768822145i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "create_from", 1767024570i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "create_from_arrays", 1894639680i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "create_from_blend_shape", 1306185582i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "append_from", 2217967155i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "commit", 4107864055i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SurfaceTool), "SurfaceTool", "commit_to_arrays", 2915620761i64),);
    
}
fn load_SyntaxHighlighter_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SyntaxHighlighter = string_names.fetch("SyntaxHighlighter");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SyntaxHighlighter), "SyntaxHighlighter", "get_line_syntax_highlighting", 3554694381i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SyntaxHighlighter), "SyntaxHighlighter", "update_cache", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SyntaxHighlighter), "SyntaxHighlighter", "clear_highlighting_cache", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SyntaxHighlighter), "SyntaxHighlighter", "get_text_edit", 1893027089i64),);
    
}
fn load_SystemFont_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_SystemFont = string_names.fetch("SystemFont");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "set_antialiasing", 1669900i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "get_antialiasing", 4262718649i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "set_disable_embedded_bitmaps", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "get_disable_embedded_bitmaps", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "set_generate_mipmaps", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "get_generate_mipmaps", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "set_allow_system_fallback", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "is_allow_system_fallback", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "set_force_autohinter", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "is_force_autohinter", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "set_modulate_color_glyphs", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "is_modulate_color_glyphs", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "set_hinting", 1827459492i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "get_hinting", 3683214614i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "set_subpixel_positioning", 4225742182i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "get_subpixel_positioning", 1069238588i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "set_keep_rounding_remainders", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "get_keep_rounding_remainders", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "set_multichannel_signed_distance_field", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "is_multichannel_signed_distance_field", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "set_msdf_pixel_range", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "get_msdf_pixel_range", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "set_msdf_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "get_msdf_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "set_oversampling", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "get_oversampling", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "get_font_names", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "set_font_names", 4015028928i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "get_font_italic", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "set_font_italic", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "set_font_weight", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_SystemFont), "SystemFont", "set_font_stretch", 1286410249i64),);
    
}
fn load_TCPServer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TCPServer = string_names.fetch("TCPServer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TCPServer), "TCPServer", "listen", 3167955072i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TCPServer), "TCPServer", "is_connection_available", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TCPServer), "TCPServer", "is_listening", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TCPServer), "TCPServer", "get_local_port", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TCPServer), "TCPServer", "take_connection", 30545006i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TCPServer), "TCPServer", "stop", 3218959716i64),);
    
}
fn load_TLSOptions_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TLSOptions = string_names.fetch("TLSOptions");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TLSOptions), "TLSOptions", "client", 3565000357i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TLSOptions), "TLSOptions", "client_unsafe", 2090251749i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TLSOptions), "TLSOptions", "server", 36969539i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TLSOptions), "TLSOptions", "is_server", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TLSOptions), "TLSOptions", "is_unsafe_client", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TLSOptions), "TLSOptions", "get_common_name_override", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TLSOptions), "TLSOptions", "get_trusted_ca_chain", 1120709175i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TLSOptions), "TLSOptions", "get_private_key", 2119971811i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TLSOptions), "TLSOptions", "get_own_certificate", 1120709175i64),);
    
}
fn load_TabBar_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TabBar = string_names.fetch("TabBar");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_tab_count", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_tab_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_current_tab", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_current_tab", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_previous_tab", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "select_previous_available", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "select_next_available", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_tab_title", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_tab_title", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_tab_tooltip", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_tab_tooltip", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_tab_text_direction", 1707680378i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_tab_text_direction", 4235602388i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_tab_language", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_tab_language", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_tab_icon", 666127730i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_tab_icon", 3536238170i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_tab_icon_max_width", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_tab_icon_max_width", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_tab_button_icon", 666127730i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_tab_button_icon", 3536238170i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_tab_disabled", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "is_tab_disabled", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_tab_hidden", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "is_tab_hidden", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_tab_metadata", 2152698145i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_tab_metadata", 4227898402i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "remove_tab", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "add_tab", 1465444425i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_tab_idx_at_point", 3820158470i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_tab_alignment", 2413632353i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_tab_alignment", 2178122193i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_clip_tabs", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_clip_tabs", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_tab_offset", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_offset_buttons_visible", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "ensure_tab_visible", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_tab_rect", 3327874267i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "move_tab", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_close_with_middle_mouse", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_close_with_middle_mouse", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_tab_close_display_policy", 2212906737i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_tab_close_display_policy", 2956568028i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_max_tab_width", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_max_tab_width", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_scrolling_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_scrolling_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_drag_to_rearrange_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_drag_to_rearrange_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_tabs_rearrange_group", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_tabs_rearrange_group", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_scroll_to_selected", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_scroll_to_selected", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_select_with_rmb", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_select_with_rmb", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "set_deselect_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "get_deselect_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabBar), "TabBar", "clear_tabs", 3218959716i64),);
    
}
fn load_TabContainer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TabContainer = string_names.fetch("TabContainer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_tab_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "set_current_tab", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_current_tab", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_previous_tab", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "select_previous_available", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "select_next_available", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_current_tab_control", 2783021301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_tab_bar", 1865451809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_tab_control", 1065994134i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "set_tab_alignment", 2413632353i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_tab_alignment", 2178122193i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "set_tabs_position", 256673370i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_tabs_position", 919937023i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "set_clip_tabs", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_clip_tabs", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "set_tabs_visible", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "are_tabs_visible", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "set_all_tabs_in_front", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "is_all_tabs_in_front", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "set_tab_title", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_tab_title", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "set_tab_tooltip", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_tab_tooltip", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "set_tab_icon", 666127730i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_tab_icon", 3536238170i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "set_tab_icon_max_width", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_tab_icon_max_width", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "set_tab_disabled", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "is_tab_disabled", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "set_tab_hidden", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "is_tab_hidden", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "set_tab_metadata", 2152698145i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_tab_metadata", 4227898402i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "set_tab_button_icon", 666127730i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_tab_button_icon", 3536238170i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_tab_idx_at_point", 3820158470i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_tab_idx_from_control", 2787397975i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "set_popup", 1078189570i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_popup", 111095082i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "set_drag_to_rearrange_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_drag_to_rearrange_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "set_tabs_rearrange_group", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_tabs_rearrange_group", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "set_use_hidden_tabs_for_min_size", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_use_hidden_tabs_for_min_size", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "set_tab_focus_mode", 3232914922i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_tab_focus_mode", 2132829277i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "set_deselect_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TabContainer), "TabContainer", "get_deselect_enabled", 36873697i64),);
    
}
fn load_TextEdit_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TextEdit = string_names.fetch("TextEdit");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "has_ime_text", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "cancel_ime", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "apply_ime", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_editable", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_editable", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_text_direction", 119160795i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_text_direction", 797257663i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_language", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_language", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_structured_text_bidi_override", 55961453i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_structured_text_bidi_override", 3385126229i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_structured_text_bidi_override_options", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_structured_text_bidi_override_options", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_tab_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_tab_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_indent_wrapped_lines", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_indent_wrapped_lines", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_tab_input_mode", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_tab_input_mode", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_overtype_mode_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_overtype_mode_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_context_menu_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_context_menu_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_emoji_menu_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_emoji_menu_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_backspace_deletes_composite_character_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_backspace_deletes_composite_character_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_shortcut_keys_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_shortcut_keys_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_virtual_keyboard_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_virtual_keyboard_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_virtual_keyboard_show_on_focus", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_virtual_keyboard_show_on_focus", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_middle_mouse_paste_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_middle_mouse_paste_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_empty_selection_clipboard_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_empty_selection_clipboard_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_text", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_text", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_line_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_placeholder", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_placeholder", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_line", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_line", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_line_with_ime", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_line_width", 688195400i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_line_height", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_indent_level", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_first_non_whitespace_column", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "swap_lines", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "insert_line_at", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "remove_line_at", 972357352i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "insert_text_at_caret", 2697778442i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "insert_text", 1881564334i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "remove_text", 4275841770i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_last_unhidden_line", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_next_visible_line_offset_from", 3175239445i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_next_visible_line_index_offset_from", 3386475622i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "backspace", 1025054187i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "cut", 1025054187i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "copy", 1025054187i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "paste", 1025054187i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "paste_primary_clipboard", 1025054187i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "start_action", 2834827583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "end_action", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "begin_complex_operation", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "end_complex_operation", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "has_undo", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "has_redo", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "undo", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "redo", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "clear_undo_history", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "tag_saved_version", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_version", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_saved_version", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_search_text", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_search_flags", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "search", 1203739136i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_tooltip_request_func", 1611583062i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_local_mouse_pos", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_word_at_pos", 3674420000i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_line_column_at_pos", 3472935744i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_pos_at_line_column", 410388347i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_rect_at_line_column", 3256618057i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_minimap_line_at_pos", 2485466453i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_dragging_cursor", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_mouse_over_selection", 1840282309i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_caret_type", 1211596914i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_caret_type", 2830252959i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_caret_blink_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_caret_blink_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_caret_blink_interval", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_caret_blink_interval", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_draw_caret_when_editable_disabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_drawing_caret_when_editable_disabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_move_caret_on_right_click_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_move_caret_on_right_click_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_caret_mid_grapheme_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_caret_mid_grapheme_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_multiple_carets_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_multiple_carets_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "add_caret", 50157827i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "remove_caret", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "remove_secondary_carets", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_caret_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "add_caret_at_carets", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_sorted_carets", 2131714034i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "collapse_carets", 228654177i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "merge_overlapping_carets", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "begin_multicaret_edit", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "end_multicaret_edit", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_in_mulitcaret_edit", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "multicaret_edit_ignore_caret", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_caret_visible", 1051549951i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_caret_draw_pos", 478253731i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_caret_line", 1302582944i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_caret_line", 1591665591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_caret_column", 3796796178i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_caret_column", 1591665591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_next_composite_character_column", 3175239445i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_previous_composite_character_column", 3175239445i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_caret_wrap_index", 1591665591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_word_under_caret", 3929349208i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_use_default_word_separators", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_default_word_separators_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_use_custom_word_separators", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_custom_word_separators_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_custom_word_separators", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_custom_word_separators", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_selecting_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_selecting_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_deselect_on_focus_loss_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_deselect_on_focus_loss_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_drag_and_drop_selection_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_drag_and_drop_selection_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_selection_mode", 1658801786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_selection_mode", 3750106938i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "select_all", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "select_word_under_caret", 1025054187i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "add_selection_for_next_occurrence", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "skip_selection_for_next_occurrence", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "select", 2560984452i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "has_selection", 2824505868i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_selected_text", 2309358862i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_selection_at_line_column", 1810224333i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_line_ranges_from_carets", 2393089247i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_selection_origin_line", 1591665591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_selection_origin_column", 1591665591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_selection_origin_line", 195434140i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_selection_origin_column", 2230941749i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_selection_from_line", 1591665591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_selection_from_column", 1591665591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_selection_to_line", 1591665591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_selection_to_column", 1591665591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_caret_after_selection_origin", 1051549951i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "deselect", 1025054187i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "delete_selection", 1025054187i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_line_wrapping_mode", 2525115309i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_line_wrapping_mode", 3562716114i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_autowrap_mode", 3289138044i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_autowrap_mode", 1549071663i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_line_wrapped", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_line_wrap_count", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_line_wrap_index_at_column", 3175239445i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_line_wrapped_text", 647634434i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_smooth_scroll_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_smooth_scroll_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_v_scroll_bar", 3226026593i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_h_scroll_bar", 3774687988i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_v_scroll", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_v_scroll", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_h_scroll", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_h_scroll", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_scroll_past_end_of_file_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_scroll_past_end_of_file_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_v_scroll_speed", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_v_scroll_speed", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_fit_content_height_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_fit_content_height_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_fit_content_width_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_fit_content_width_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_scroll_pos_for_line", 3929084198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_line_as_first_visible", 2230941749i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_first_visible_line", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_line_as_center_visible", 2230941749i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_line_as_last_visible", 2230941749i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_last_full_visible_line", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_last_full_visible_line_wrap_index", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_visible_line_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_visible_line_count_in_range", 3175239445i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_total_visible_line_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "adjust_viewport_to_caret", 1995695955i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "center_viewport_to_caret", 1995695955i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_draw_minimap", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_drawing_minimap", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_minimap_width", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_minimap_width", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_minimap_visible_lines", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "add_gutter", 1025054187i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "remove_gutter", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_gutter_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_gutter_name", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_gutter_name", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_gutter_type", 1088959071i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_gutter_type", 1159699127i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_gutter_width", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_gutter_width", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_gutter_draw", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_gutter_drawn", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_gutter_clickable", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_gutter_clickable", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_gutter_overwritable", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_gutter_overwritable", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "merge_gutters", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_gutter_custom_draw", 957362965i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_total_gutter_width", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_line_gutter_metadata", 2060538656i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_line_gutter_metadata", 678354945i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_line_gutter_text", 2285447957i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_line_gutter_text", 1391810591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_line_gutter_icon", 176101966i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_line_gutter_icon", 2584904275i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_line_gutter_item_color", 3733378741i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_line_gutter_item_color", 2165839948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_line_gutter_clickable", 1383440665i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_line_gutter_clickable", 2522259332i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_line_background_color", 2878471219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_line_background_color", 3457211756i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_syntax_highlighter", 2765644541i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_syntax_highlighter", 2721131626i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_highlight_current_line", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_highlight_current_line_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_highlight_all_occurrences", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_highlight_all_occurrences_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_draw_control_chars", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_draw_control_chars", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_draw_tabs", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_drawing_tabs", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "set_draw_spaces", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_drawing_spaces", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_menu", 229722558i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "is_menu_visible", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "menu_option", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "adjust_carets_after_edit", 1770277138i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_caret_index_edit_order", 969006518i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_selection_line", 1591665591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextEdit), "TextEdit", "get_selection_column", 1591665591i64),);
    
}
fn load_TextLine_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TextLine = string_names.fetch("TextLine");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "set_direction", 1418190634i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "get_direction", 2516697328i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "get_inferred_direction", 2516697328i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "set_orientation", 42823726i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "get_orientation", 175768116i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "set_preserve_invalid", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "get_preserve_invalid", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "set_preserve_control", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "get_preserve_control", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "set_bidi_override", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "add_string", 621426851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "add_object", 1316529304i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "resize_object", 2095776372i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "set_width", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "get_width", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "set_horizontal_alignment", 2312603777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "get_horizontal_alignment", 341400642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "tab_align", 2899603908i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "set_flags", 2877345813i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "get_flags", 1583363614i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "set_text_overrun_behavior", 1008890932i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "get_text_overrun_behavior", 3779142101i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "set_ellipsis_char", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "get_ellipsis_char", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "get_objects", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "get_object_rect", 1742700391i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "get_size", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "get_rid", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "get_line_ascent", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "get_line_descent", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "get_line_width", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "get_line_underline_position", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "get_line_underline_thickness", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "draw", 3625105422i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "draw_outline", 2592177763i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextLine), "TextLine", "hit_test", 2401831903i64),);
    
}
fn load_TextMesh_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TextMesh = string_names.fetch("TextMesh");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "set_horizontal_alignment", 2312603777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "get_horizontal_alignment", 341400642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "set_vertical_alignment", 1796458609i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "get_vertical_alignment", 3274884059i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "set_text", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "get_text", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "set_font", 1262170328i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "get_font", 3229501585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "set_font_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "get_font_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "set_line_spacing", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "get_line_spacing", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "set_autowrap_mode", 3289138044i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "get_autowrap_mode", 1549071663i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "set_justification_flags", 2877345813i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "get_justification_flags", 1583363614i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "set_depth", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "get_depth", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "set_width", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "get_width", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "set_pixel_size", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "get_pixel_size", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "set_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "get_offset", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "set_curve_step", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "get_curve_step", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "set_text_direction", 1418190634i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "get_text_direction", 2516697328i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "set_language", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "get_language", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "set_structured_text_bidi_override", 55961453i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "get_structured_text_bidi_override", 3385126229i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "set_structured_text_bidi_override_options", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "get_structured_text_bidi_override_options", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "set_uppercase", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextMesh), "TextMesh", "is_uppercase", 36873697i64),);
    
}
fn load_TextParagraph_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TextParagraph = string_names.fetch("TextParagraph");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "set_direction", 1418190634i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_direction", 2516697328i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_inferred_direction", 2516697328i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "set_custom_punctuation", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_custom_punctuation", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "set_orientation", 42823726i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_orientation", 175768116i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "set_preserve_invalid", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_preserve_invalid", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "set_preserve_control", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_preserve_control", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "set_bidi_override", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "set_dropcap", 2498990330i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "clear_dropcap", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "add_string", 621426851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "add_object", 1316529304i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "resize_object", 2095776372i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "set_alignment", 2312603777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_alignment", 341400642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "tab_align", 2899603908i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "set_break_flags", 2809697122i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_break_flags", 2340632602i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "set_justification_flags", 2877345813i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_justification_flags", 1583363614i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "set_text_overrun_behavior", 1008890932i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_text_overrun_behavior", 3779142101i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "set_ellipsis_char", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_ellipsis_char", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "set_width", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_width", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_non_wrapped_size", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_size", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_rid", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_line_rid", 495598643i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_dropcap_rid", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_range", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_line_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "set_max_lines_visible", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_max_lines_visible", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "set_line_spacing", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_line_spacing", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_line_objects", 663333327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_line_object_rect", 204315017i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_line_size", 2299179447i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_line_range", 880721226i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_line_ascent", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_line_descent", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_line_width", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_line_underline_position", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_line_underline_thickness", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_dropcap_size", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "get_dropcap_lines", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "draw", 1492808103i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "draw_outline", 3820500590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "draw_line", 828033758i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "draw_line_outline", 2822696703i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "draw_dropcap", 3625105422i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "draw_dropcap_outline", 2592177763i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextParagraph), "TextParagraph", "hit_test", 3820158470i64),);
    
}
fn load_TextServer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TextServer = string_names.fetch("TextServer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "has_feature", 3967367083i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "get_name", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "get_features", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "load_support_data", 2323990056i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "get_support_data_filename", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "get_support_data_info", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "save_support_data", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "get_support_data", 2362200018i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "is_locale_right_to_left", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "name_to_tag", 1321353865i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "tag_to_name", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "has", 3521089500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "free_rid", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "create_font", 529393457i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "create_font_linked_variation", 41030802i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_data", 1355495400i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_face_index", 3411492887i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_face_index", 2198884583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_face_count", 2198884583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_style", 898466325i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_style", 3082502592i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_name", 2726140452i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_name", 642473191i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_ot_name_strings", 1882737106i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_style_name", 2726140452i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_style_name", 642473191i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_weight", 3411492887i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_weight", 2198884583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_stretch", 3411492887i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_stretch", 2198884583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_antialiasing", 958337235i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_antialiasing", 3389420495i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_disable_embedded_bitmaps", 1265174801i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_disable_embedded_bitmaps", 4155700596i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_generate_mipmaps", 1265174801i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_generate_mipmaps", 4155700596i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_multichannel_signed_distance_field", 1265174801i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_is_multichannel_signed_distance_field", 4155700596i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_msdf_pixel_range", 3411492887i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_msdf_pixel_range", 2198884583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_msdf_size", 3411492887i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_msdf_size", 2198884583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_fixed_size", 3411492887i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_fixed_size", 2198884583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_fixed_size_scale_mode", 1029390307i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_fixed_size_scale_mode", 4113120379i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_allow_system_fallback", 1265174801i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_is_allow_system_fallback", 4155700596i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_clear_system_fallback_cache", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_force_autohinter", 1265174801i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_is_force_autohinter", 4155700596i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_modulate_color_glyphs", 1265174801i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_is_modulate_color_glyphs", 4155700596i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_hinting", 1520010864i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_hinting", 3971592737i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_subpixel_positioning", 3830459669i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_subpixel_positioning", 2752233671i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_keep_rounding_remainders", 1265174801i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_keep_rounding_remainders", 4155700596i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_embolden", 1794382983i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_embolden", 866169185i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_spacing", 1307259930i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_spacing", 1213653558i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_baseline_offset", 1794382983i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_baseline_offset", 866169185i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_transform", 1246044741i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_transform", 213527486i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_variation_coordinates", 1217542888i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_variation_coordinates", 1882737106i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_oversampling", 1794382983i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_oversampling", 866169185i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_size_cache_list", 2684255073i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_clear_size_cache", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_remove_size_cache", 2450610377i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_size_cache_info", 2684255073i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_ascent", 1892459533i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_ascent", 755457166i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_descent", 1892459533i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_descent", 755457166i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_underline_position", 1892459533i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_underline_position", 755457166i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_underline_thickness", 1892459533i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_underline_thickness", 755457166i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_scale", 1892459533i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_scale", 755457166i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_texture_count", 1311001310i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_clear_textures", 2450610377i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_remove_texture", 3810512262i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_texture_image", 2354485091i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_texture_image", 2451761155i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_texture_offsets", 3005398047i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_texture_offsets", 3420028887i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_glyph_list", 46086620i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_clear_glyphs", 2450610377i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_remove_glyph", 3810512262i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_glyph_advance", 2555689501i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_glyph_advance", 3219397315i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_glyph_offset", 513728628i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_glyph_offset", 1812632090i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_glyph_size", 513728628i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_glyph_size", 1812632090i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_glyph_uv_rect", 2274268786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_glyph_uv_rect", 1973324081i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_glyph_texture_idx", 4292800474i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_glyph_texture_idx", 4254580980i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_glyph_texture_rid", 1451696141i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_glyph_texture_size", 513728628i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_glyph_contours", 2903964473i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_kerning_list", 1778388067i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_clear_kerning_map", 3411492887i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_remove_kerning", 2141860016i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_kerning", 3630965883i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_kerning", 1019980169i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_glyph_index", 1765635060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_char_from_glyph_index", 2156738276i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_has_char", 3120086654i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_supported_chars", 642473191i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_supported_glyphs", 788230395i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_render_range", 4254580980i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_render_glyph", 3810512262i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_draw_glyph", 3103234926i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_draw_glyph_outline", 1976041553i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_is_language_supported", 3199320846i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_language_support_override", 2313957094i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_language_support_override", 2829184646i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_remove_language_support_override", 2726140452i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_language_support_overrides", 2801473409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_is_script_supported", 3199320846i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_script_support_override", 2313957094i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_script_support_override", 2829184646i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_remove_script_support_override", 2726140452i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_script_support_overrides", 2801473409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_opentype_feature_overrides", 1217542888i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_opentype_feature_overrides", 1882737106i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_supported_feature_list", 1882737106i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_supported_variation_list", 1882737106i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_get_global_oversampling", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "font_set_global_oversampling", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "get_hex_code_box_size", 3016396712i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "draw_hex_code_box", 1602046441i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "create_shaped_text", 1231398698i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_clear", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_set_direction", 1551430183i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_direction", 3065904362i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_inferred_direction", 3065904362i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_set_bidi_override", 684822712i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_set_custom_punctuation", 2726140452i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_custom_punctuation", 642473191i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_set_custom_ellipsis", 3411492887i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_custom_ellipsis", 2198884583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_set_orientation", 3019609126i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_orientation", 3142708106i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_set_preserve_invalid", 1265174801i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_preserve_invalid", 4155700596i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_set_preserve_control", 1265174801i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_preserve_control", 4155700596i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_set_spacing", 1307259930i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_spacing", 1213653558i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_add_string", 623473029i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_add_object", 3664424789i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_resize_object", 790361552i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_get_text", 642473191i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_get_span_count", 2198884583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_get_span_meta", 4069510997i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_get_span_embedded_object", 4069510997i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_get_span_text", 1464764419i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_get_span_object", 4069510997i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_set_span_update_font", 2022725822i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_get_run_count", 2198884583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_get_run_text", 1464764419i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_get_run_range", 4069534484i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_get_run_font_rid", 1066463050i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_get_run_font_size", 1120910005i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_get_run_language", 1464764419i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_get_run_direction", 2413896864i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_get_run_object", 4069510997i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_substr", 1937682086i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_parent", 3814569979i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_fit_to_width", 530670926i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_tab_align", 1283669550i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_shape", 3521089500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_is_ready", 4155700596i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_has_visible_chars", 4155700596i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_glyphs", 2684255073i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_sort_logical", 2670461153i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_glyph_count", 2198884583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_range", 733700038i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_line_breaks_adv", 2376991424i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_line_breaks", 2651359741i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_word_breaks", 4099476853i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_trim_pos", 2198884583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_ellipsis_pos", 2198884583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_ellipsis_glyphs", 2684255073i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_ellipsis_glyph_count", 2198884583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_overrun_trim_to_width", 2723146520i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_objects", 2684255073i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_object_rect", 447978354i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_object_range", 2524675647i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_object_glyph", 1260085030i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_size", 2440833711i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_ascent", 866169185i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_descent", 866169185i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_width", 866169185i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_underline_position", 866169185i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_underline_thickness", 866169185i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_carets", 1574219346i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_selection", 3714187733i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_hit_test_grapheme", 3149310417i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_hit_test_position", 3149310417i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_grapheme_bounds", 2546185844i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_next_grapheme_pos", 1120910005i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_prev_grapheme_pos", 1120910005i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_character_breaks", 788230395i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_next_character_pos", 1120910005i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_prev_character_pos", 1120910005i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_closest_character_pos", 1120910005i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_draw", 1647687596i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_draw_outline", 1217146601i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "shaped_text_get_dominant_direction_in_range", 3326907668i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "format_number", 2664628024i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "parse_number", 2664628024i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "percent_sign", 993269549i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "string_get_word_breaks", 581857818i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "string_get_character_breaks", 2333794773i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "is_confusable", 1433197768i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "spoof_check", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "strip_diacritics", 3135753539i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "is_valid_identifier", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "is_valid_letter", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "string_to_upper", 2664628024i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "string_to_lower", 2664628024i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "string_to_title", 2664628024i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServer), "TextServer", "parse_structured_text", 3310685015i64),);
    
}
fn load_TextServerManager_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TextServerManager = string_names.fetch("TextServerManager");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServerManager), "TextServerManager", "add_interface", 1799689403i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServerManager), "TextServerManager", "get_interface_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServerManager), "TextServerManager", "remove_interface", 1799689403i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServerManager), "TextServerManager", "get_interface", 1672475555i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServerManager), "TextServerManager", "get_interfaces", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServerManager), "TextServerManager", "find_interface", 2240905781i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServerManager), "TextServerManager", "set_primary_interface", 1799689403i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextServerManager), "TextServerManager", "get_primary_interface", 905850878i64),);
    
}
fn load_Texture2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Texture2D = string_names.fetch("Texture2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Texture2D), "Texture2D", "get_width", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Texture2D), "Texture2D", "get_height", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Texture2D), "Texture2D", "get_size", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Texture2D), "Texture2D", "has_alpha", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Texture2D), "Texture2D", "draw", 2729649137i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Texture2D), "Texture2D", "draw_rect", 3499451691i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Texture2D), "Texture2D", "draw_rect_region", 2963678660i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Texture2D), "Texture2D", "get_image", 4190603485i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Texture2D), "Texture2D", "create_placeholder", 121922552i64),);
    
}
fn load_Texture2DArray_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Texture2DArray = string_names.fetch("Texture2DArray");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Texture2DArray), "Texture2DArray", "create_placeholder", 121922552i64),);
    
}
fn load_Texture2DRD_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Texture2DRD = string_names.fetch("Texture2DRD");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Texture2DRD), "Texture2DRD", "set_texture_rd_rid", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Texture2DRD), "Texture2DRD", "get_texture_rd_rid", 2944877500i64),);
    
}
fn load_Texture3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Texture3D = string_names.fetch("Texture3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Texture3D), "Texture3D", "get_format", 3847873762i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Texture3D), "Texture3D", "get_width", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Texture3D), "Texture3D", "get_height", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Texture3D), "Texture3D", "get_depth", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Texture3D), "Texture3D", "has_mipmaps", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Texture3D), "Texture3D", "get_data", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Texture3D), "Texture3D", "create_placeholder", 121922552i64),);
    
}
fn load_Texture3DRD_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Texture3DRD = string_names.fetch("Texture3DRD");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Texture3DRD), "Texture3DRD", "set_texture_rd_rid", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Texture3DRD), "Texture3DRD", "get_texture_rd_rid", 2944877500i64),);
    
}
fn load_TextureButton_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TextureButton = string_names.fetch("TextureButton");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureButton), "TextureButton", "set_texture_normal", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureButton), "TextureButton", "set_texture_pressed", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureButton), "TextureButton", "set_texture_hover", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureButton), "TextureButton", "set_texture_disabled", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureButton), "TextureButton", "set_texture_focused", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureButton), "TextureButton", "set_click_mask", 698588216i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureButton), "TextureButton", "set_ignore_texture_size", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureButton), "TextureButton", "set_stretch_mode", 252530840i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureButton), "TextureButton", "set_flip_h", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureButton), "TextureButton", "is_flipped_h", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureButton), "TextureButton", "set_flip_v", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureButton), "TextureButton", "is_flipped_v", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureButton), "TextureButton", "get_texture_normal", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureButton), "TextureButton", "get_texture_pressed", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureButton), "TextureButton", "get_texture_hover", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureButton), "TextureButton", "get_texture_disabled", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureButton), "TextureButton", "get_texture_focused", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureButton), "TextureButton", "get_click_mask", 2459671998i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureButton), "TextureButton", "get_ignore_texture_size", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureButton), "TextureButton", "get_stretch_mode", 33815122i64),);
    
}
fn load_TextureLayered_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TextureLayered = string_names.fetch("TextureLayered");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureLayered), "TextureLayered", "get_format", 3847873762i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureLayered), "TextureLayered", "get_layered_type", 518123893i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureLayered), "TextureLayered", "get_width", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureLayered), "TextureLayered", "get_height", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureLayered), "TextureLayered", "get_layers", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureLayered), "TextureLayered", "has_mipmaps", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureLayered), "TextureLayered", "get_layer_data", 3655284255i64),);
    
}
fn load_TextureLayeredRD_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TextureLayeredRD = string_names.fetch("TextureLayeredRD");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureLayeredRD), "TextureLayeredRD", "set_texture_rd_rid", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureLayeredRD), "TextureLayeredRD", "get_texture_rd_rid", 2944877500i64),);
    
}
fn load_TextureProgressBar_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TextureProgressBar = string_names.fetch("TextureProgressBar");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "set_under_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "get_under_texture", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "set_progress_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "get_progress_texture", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "set_over_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "get_over_texture", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "set_fill_mode", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "get_fill_mode", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "set_tint_under", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "get_tint_under", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "set_tint_progress", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "get_tint_progress", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "set_tint_over", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "get_tint_over", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "set_texture_progress_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "get_texture_progress_offset", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "set_radial_initial_angle", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "get_radial_initial_angle", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "set_radial_center_offset", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "get_radial_center_offset", 1497962370i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "set_fill_degrees", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "get_fill_degrees", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "set_stretch_margin", 437707142i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "get_stretch_margin", 1983885014i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "set_nine_patch_stretch", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureProgressBar), "TextureProgressBar", "get_nine_patch_stretch", 36873697i64),);
    
}
fn load_TextureRect_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TextureRect = string_names.fetch("TextureRect");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureRect), "TextureRect", "set_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureRect), "TextureRect", "get_texture", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureRect), "TextureRect", "set_expand_mode", 1870766882i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureRect), "TextureRect", "get_expand_mode", 3863824733i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureRect), "TextureRect", "set_flip_h", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureRect), "TextureRect", "is_flipped_h", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureRect), "TextureRect", "set_flip_v", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureRect), "TextureRect", "is_flipped_v", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureRect), "TextureRect", "set_stretch_mode", 58788729i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TextureRect), "TextureRect", "get_stretch_mode", 346396079i64),);
    
}
fn load_Theme_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Theme = string_names.fetch("Theme");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "set_icon", 2188371082i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_icon", 934555193i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "has_icon", 471820014i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "rename_icon", 642128662i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "clear_icon", 3740211285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_icon_list", 4291131558i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_icon_type_list", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "set_stylebox", 2075907568i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_stylebox", 3405608165i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "has_stylebox", 471820014i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "rename_stylebox", 642128662i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "clear_stylebox", 3740211285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_stylebox_list", 4291131558i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_stylebox_type_list", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "set_font", 177292320i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_font", 3445063586i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "has_font", 471820014i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "rename_font", 642128662i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "clear_font", 3740211285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_font_list", 4291131558i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_font_type_list", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "set_font_size", 281601298i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_font_size", 2419549490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "has_font_size", 471820014i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "rename_font_size", 642128662i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "clear_font_size", 3740211285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_font_size_list", 4291131558i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_font_size_type_list", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "set_color", 4111215154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_color", 2015923404i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "has_color", 471820014i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "rename_color", 642128662i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "clear_color", 3740211285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_color_list", 4291131558i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_color_type_list", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "set_constant", 281601298i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_constant", 2419549490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "has_constant", 471820014i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "rename_constant", 642128662i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "clear_constant", 3740211285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_constant_list", 4291131558i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_constant_type_list", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "set_default_base_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_default_base_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "has_default_base_scale", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "set_default_font", 1262170328i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_default_font", 3229501585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "has_default_font", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "set_default_font_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_default_font_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "has_default_font_size", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "set_theme_item", 2492983623i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_theme_item", 2191024021i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "has_theme_item", 1739311056i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "rename_theme_item", 3900867553i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "clear_theme_item", 2965505587i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_theme_item_list", 3726716710i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_theme_item_type_list", 1316004935i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "set_type_variation", 3740211285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "is_type_variation", 471820014i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "clear_type_variation", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_type_variation_base", 1965194235i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_type_variation_list", 1761182771i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "add_type", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "remove_type", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "rename_type", 3740211285i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "get_type_list", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "merge_with", 2326690814i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Theme), "Theme", "clear", 3218959716i64),);
    
}
fn load_ThemeDB_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ThemeDB = string_names.fetch("ThemeDB");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ThemeDB), "ThemeDB", "get_default_theme", 754276358i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ThemeDB), "ThemeDB", "get_project_theme", 754276358i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ThemeDB), "ThemeDB", "set_fallback_base_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ThemeDB), "ThemeDB", "get_fallback_base_scale", 191475506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ThemeDB), "ThemeDB", "set_fallback_font", 1262170328i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ThemeDB), "ThemeDB", "get_fallback_font", 3656929885i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ThemeDB), "ThemeDB", "set_fallback_font_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ThemeDB), "ThemeDB", "get_fallback_font_size", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ThemeDB), "ThemeDB", "set_fallback_icon", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ThemeDB), "ThemeDB", "get_fallback_icon", 255860311i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ThemeDB), "ThemeDB", "set_fallback_stylebox", 2797200388i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ThemeDB), "ThemeDB", "get_fallback_stylebox", 496040854i64),);
    
}
fn load_TileData_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TileData = string_names.fetch("TileData");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_flip_h", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "get_flip_h", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_flip_v", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "get_flip_v", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_transpose", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "get_transpose", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_material", 2757459619i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "get_material", 5934680i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_texture_origin", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "get_texture_origin", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_modulate", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "get_modulate", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_z_index", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "get_z_index", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_y_sort_origin", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "get_y_sort_origin", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_occluder_polygons_count", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "get_occluder_polygons_count", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "add_occluder_polygon", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "remove_occluder_polygon", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_occluder_polygon", 164249167i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "get_occluder_polygon", 971166743i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_occluder", 914399637i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "get_occluder", 2377324099i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_constant_linear_velocity", 163021252i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "get_constant_linear_velocity", 2299179447i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_constant_angular_velocity", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "get_constant_angular_velocity", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_collision_polygons_count", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "get_collision_polygons_count", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "add_collision_polygon", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "remove_collision_polygon", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_collision_polygon_points", 3230546541i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "get_collision_polygon_points", 103942801i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_collision_polygon_one_way", 1383440665i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "is_collision_polygon_one_way", 2522259332i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_collision_polygon_one_way_margin", 3506521499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "get_collision_polygon_one_way_margin", 3085491603i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_terrain_set", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "get_terrain_set", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_terrain", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "get_terrain", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_terrain_peering_bit", 1084452308i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "get_terrain_peering_bit", 3831796792i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "is_valid_terrain_peering_bit", 845723972i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_probability", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "get_probability", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_custom_data", 402577236i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "get_custom_data", 1868160156i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "has_custom_data", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "set_custom_data_by_layer_id", 2152698145i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileData), "TileData", "get_custom_data_by_layer_id", 4227898402i64),);
    
}
fn load_TileMap_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TileMap = string_names.fetch("TileMap");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "set_navigation_map", 4040184819i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_navigation_map", 495598643i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "force_update", 1025054187i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "set_tileset", 774531446i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_tileset", 2678226422i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "set_rendering_quadrant_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_rendering_quadrant_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_layers_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "add_layer", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "move_layer", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "remove_layer", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "set_layer_name", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_layer_name", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "set_layer_enabled", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "is_layer_enabled", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "set_layer_modulate", 2878471219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_layer_modulate", 3457211756i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "set_layer_y_sort_enabled", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "is_layer_y_sort_enabled", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "set_layer_y_sort_origin", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_layer_y_sort_origin", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "set_layer_z_index", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_layer_z_index", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "set_layer_navigation_enabled", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "is_layer_navigation_enabled", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "set_layer_navigation_map", 4040184819i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_layer_navigation_map", 495598643i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "set_collision_animatable", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "is_collision_animatable", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "set_collision_visibility_mode", 3193440636i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_collision_visibility_mode", 1697018252i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "set_navigation_visibility_mode", 3193440636i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_navigation_visibility_mode", 1697018252i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "set_cell", 966713560i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "erase_cell", 2311374912i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_cell_source_id", 551761942i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_cell_atlas_coords", 1869815066i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_cell_alternative_tile", 551761942i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_cell_tile_data", 2849631287i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "is_cell_flipped_h", 2908343862i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "is_cell_flipped_v", 2908343862i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "is_cell_transposed", 2908343862i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_coords_for_body_rid", 291584212i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_layer_for_body_rid", 3917799429i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_pattern", 2833570986i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "map_pattern", 1864516957i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "set_pattern", 1195853946i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "set_cells_terrain_connect", 3578627656i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "set_cells_terrain_path", 3578627656i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "fix_invalid_tiles", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "clear_layer", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "update_internals", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "notify_runtime_tile_data_update", 1025054187i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_surrounding_cells", 2673526557i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_used_cells", 663333327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_used_cells_by_id", 2931012785i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_used_rect", 410525958i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "map_to_local", 108438297i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "local_to_map", 837806996i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMap), "TileMap", "get_neighbor_cell", 986575103i64),);
    
}
fn load_TileMapLayer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TileMapLayer = string_names.fetch("TileMapLayer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "set_cell", 2428518503i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "erase_cell", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "fix_invalid_tiles", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "get_cell_source_id", 2485466453i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "get_cell_atlas_coords", 3050897911i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "get_cell_alternative_tile", 2485466453i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "get_cell_tile_data", 205084707i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "is_cell_flipped_h", 3900751641i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "is_cell_flipped_v", 3900751641i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "is_cell_transposed", 3900751641i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "get_used_cells", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "get_used_cells_by_id", 4175304538i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "get_used_rect", 410525958i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "get_pattern", 3820813253i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "set_pattern", 1491151770i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "set_cells_terrain_connect", 748968311i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "set_cells_terrain_path", 748968311i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "has_body_rid", 4155700596i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "get_coords_for_body_rid", 733700038i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "update_internals", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "notify_runtime_tile_data_update", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "map_pattern", 1864516957i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "get_surrounding_cells", 2673526557i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "get_neighbor_cell", 986575103i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "map_to_local", 108438297i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "local_to_map", 837806996i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "set_tile_map_data_from_array", 2971499966i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "get_tile_map_data_as_array", 2362200018i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "set_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "is_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "set_tile_set", 774531446i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "get_tile_set", 2678226422i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "set_y_sort_origin", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "get_y_sort_origin", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "set_x_draw_order_reversed", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "is_x_draw_order_reversed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "set_rendering_quadrant_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "get_rendering_quadrant_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "set_collision_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "is_collision_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "set_use_kinematic_bodies", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "is_using_kinematic_bodies", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "set_collision_visibility_mode", 3508099847i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "get_collision_visibility_mode", 338220793i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "set_physics_quadrant_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "get_physics_quadrant_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "set_occlusion_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "is_occlusion_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "set_navigation_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "is_navigation_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "set_navigation_map", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "get_navigation_map", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "set_navigation_visibility_mode", 3508099847i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapLayer), "TileMapLayer", "get_navigation_visibility_mode", 338220793i64),);
    
}
fn load_TileMapPattern_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TileMapPattern = string_names.fetch("TileMapPattern");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapPattern), "TileMapPattern", "set_cell", 2224802556i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapPattern), "TileMapPattern", "has_cell", 3900751641i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapPattern), "TileMapPattern", "remove_cell", 4153096796i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapPattern), "TileMapPattern", "get_cell_source_id", 2485466453i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapPattern), "TileMapPattern", "get_cell_atlas_coords", 3050897911i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapPattern), "TileMapPattern", "get_cell_alternative_tile", 2485466453i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapPattern), "TileMapPattern", "get_used_cells", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapPattern), "TileMapPattern", "get_size", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapPattern), "TileMapPattern", "set_size", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileMapPattern), "TileMapPattern", "is_empty", 36873697i64),);
    
}
fn load_TileSet_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TileSet = string_names.fetch("TileSet");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_next_source_id", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "add_source", 1059186179i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "remove_source", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "set_source_id", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_source_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_source_id", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "has_source", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_source", 1763540252i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "set_tile_shape", 2131427112i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_tile_shape", 716918169i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "set_tile_layout", 1071216679i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_tile_layout", 194628839i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "set_tile_offset_axis", 3300198521i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_tile_offset_axis", 762494114i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "set_tile_size", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_tile_size", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "set_uv_clipping", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "is_uv_clipping", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_occlusion_layers_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "add_occlusion_layer", 1025054187i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "move_occlusion_layer", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "remove_occlusion_layer", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "set_occlusion_layer_light_mask", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_occlusion_layer_light_mask", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "set_occlusion_layer_sdf_collision", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_occlusion_layer_sdf_collision", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_physics_layers_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "add_physics_layer", 1025054187i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "move_physics_layer", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "remove_physics_layer", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "set_physics_layer_collision_layer", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_physics_layer_collision_layer", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "set_physics_layer_collision_mask", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_physics_layer_collision_mask", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "set_physics_layer_collision_priority", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_physics_layer_collision_priority", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "set_physics_layer_physics_material", 1018687357i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_physics_layer_physics_material", 788318639i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_terrain_sets_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "add_terrain_set", 1025054187i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "move_terrain_set", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "remove_terrain_set", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "set_terrain_set_mode", 3943003916i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_terrain_set_mode", 2084469411i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_terrains_count", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "add_terrain", 1230568737i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "move_terrain", 1649997291i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "remove_terrain", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "set_terrain_name", 2285447957i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_terrain_name", 1391810591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "set_terrain_color", 3733378741i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_terrain_color", 2165839948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_navigation_layers_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "add_navigation_layer", 1025054187i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "move_navigation_layer", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "remove_navigation_layer", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "set_navigation_layer_layers", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_navigation_layer_layers", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "set_navigation_layer_layer_value", 1383440665i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_navigation_layer_layer_value", 2522259332i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_custom_data_layers_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "add_custom_data_layer", 1025054187i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "move_custom_data_layer", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "remove_custom_data_layer", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_custom_data_layer_by_name", 1321353865i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "set_custom_data_layer_name", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "has_custom_data_layer_by_name", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_custom_data_layer_name", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "set_custom_data_layer_type", 3492912874i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_custom_data_layer_type", 2990820875i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "set_source_level_tile_proxy", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_source_level_tile_proxy", 3744713108i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "has_source_level_tile_proxy", 3067735520i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "remove_source_level_tile_proxy", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "set_coords_level_tile_proxy", 1769939278i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_coords_level_tile_proxy", 2856536371i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "has_coords_level_tile_proxy", 3957903770i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "remove_coords_level_tile_proxy", 2311374912i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "set_alternative_level_tile_proxy", 3862385460i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_alternative_level_tile_proxy", 2303761075i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "has_alternative_level_tile_proxy", 180086755i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "remove_alternative_level_tile_proxy", 2328951467i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "map_tile_proxy", 4267935328i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "cleanup_invalid_tile_proxies", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "clear_tile_proxies", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "add_pattern", 763712015i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_pattern", 4207737510i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "remove_pattern", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSet), "TileSet", "get_patterns_count", 2455072627i64),);
    
}
fn load_TileSetAtlasSource_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TileSetAtlasSource = string_names.fetch("TileSetAtlasSource");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "set_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "get_texture", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "set_margins", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "get_margins", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "set_separation", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "get_separation", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "set_texture_region_size", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "get_texture_region_size", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "set_use_texture_padding", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "get_use_texture_padding", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "create_tile", 190528769i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "remove_tile", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "move_tile_in_atlas", 3870111920i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "get_tile_size_in_atlas", 3050897911i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "has_room_for_tile", 3018597268i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "get_tiles_to_be_removed_on_change", 1240378054i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "get_tile_at_coords", 3050897911i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "has_tiles_outside_texture", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "clear_tiles_outside_texture", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "set_tile_animation_columns", 3200960707i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "get_tile_animation_columns", 2485466453i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "set_tile_animation_separation", 1941061099i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "get_tile_animation_separation", 3050897911i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "set_tile_animation_speed", 2262553149i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "get_tile_animation_speed", 719993801i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "set_tile_animation_mode", 3192753483i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "get_tile_animation_mode", 4025349959i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "set_tile_animation_frames_count", 3200960707i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "get_tile_animation_frames_count", 2485466453i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "set_tile_animation_frame_duration", 2843487787i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "get_tile_animation_frame_duration", 1802448425i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "get_tile_animation_total_duration", 719993801i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "create_alternative_tile", 2226298068i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "remove_alternative_tile", 3200960707i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "set_alternative_tile_id", 1499785778i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "get_next_alternative_tile_id", 2485466453i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "get_tile_data", 3534028207i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "get_atlas_grid_size", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "get_tile_texture_region", 241857547i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "get_runtime_texture", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetAtlasSource), "TileSetAtlasSource", "get_runtime_tile_texture_region", 104874263i64),);
    
}
fn load_TileSetScenesCollectionSource_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TileSetScenesCollectionSource = string_names.fetch("TileSetScenesCollectionSource");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetScenesCollectionSource), "TileSetScenesCollectionSource", "get_scene_tiles_count", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetScenesCollectionSource), "TileSetScenesCollectionSource", "get_scene_tile_id", 3744713108i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetScenesCollectionSource), "TileSetScenesCollectionSource", "has_scene_tile_id", 3067735520i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetScenesCollectionSource), "TileSetScenesCollectionSource", "create_scene_tile", 1117465415i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetScenesCollectionSource), "TileSetScenesCollectionSource", "set_scene_tile_id", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetScenesCollectionSource), "TileSetScenesCollectionSource", "set_scene_tile_scene", 3435852839i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetScenesCollectionSource), "TileSetScenesCollectionSource", "get_scene_tile_scene", 511017218i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetScenesCollectionSource), "TileSetScenesCollectionSource", "set_scene_tile_display_placeholder", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetScenesCollectionSource), "TileSetScenesCollectionSource", "get_scene_tile_display_placeholder", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetScenesCollectionSource), "TileSetScenesCollectionSource", "remove_scene_tile", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetScenesCollectionSource), "TileSetScenesCollectionSource", "get_next_scene_tile_id", 3905245786i64),);
    
}
fn load_TileSetSource_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TileSetSource = string_names.fetch("TileSetSource");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetSource), "TileSetSource", "get_tiles_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetSource), "TileSetSource", "get_tile_id", 880721226i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetSource), "TileSetSource", "has_tile", 3900751641i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetSource), "TileSetSource", "get_alternative_tiles_count", 2485466453i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetSource), "TileSetSource", "get_alternative_tile_id", 89881719i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TileSetSource), "TileSetSource", "has_alternative_tile", 1073731340i64),);
    
}
fn load_Timer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Timer = string_names.fetch("Timer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Timer), "Timer", "set_wait_time", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Timer), "Timer", "get_wait_time", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Timer), "Timer", "set_one_shot", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Timer), "Timer", "is_one_shot", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Timer), "Timer", "set_autostart", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Timer), "Timer", "has_autostart", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Timer), "Timer", "start", 1392008558i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Timer), "Timer", "stop", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Timer), "Timer", "set_paused", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Timer), "Timer", "is_paused", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Timer), "Timer", "set_ignore_time_scale", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Timer), "Timer", "is_ignoring_time_scale", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Timer), "Timer", "is_stopped", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Timer), "Timer", "get_time_left", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Timer), "Timer", "set_timer_process_callback", 3469495063i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Timer), "Timer", "get_timer_process_callback", 2672570227i64),);
    
}
fn load_TorusMesh_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TorusMesh = string_names.fetch("TorusMesh");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TorusMesh), "TorusMesh", "set_inner_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TorusMesh), "TorusMesh", "get_inner_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TorusMesh), "TorusMesh", "set_outer_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TorusMesh), "TorusMesh", "get_outer_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TorusMesh), "TorusMesh", "set_rings", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TorusMesh), "TorusMesh", "get_rings", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TorusMesh), "TorusMesh", "set_ring_segments", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TorusMesh), "TorusMesh", "get_ring_segments", 3905245786i64),);
    
}
fn load_TouchScreenButton_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TouchScreenButton = string_names.fetch("TouchScreenButton");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TouchScreenButton), "TouchScreenButton", "set_texture_normal", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TouchScreenButton), "TouchScreenButton", "get_texture_normal", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TouchScreenButton), "TouchScreenButton", "set_texture_pressed", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TouchScreenButton), "TouchScreenButton", "get_texture_pressed", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TouchScreenButton), "TouchScreenButton", "set_bitmask", 698588216i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TouchScreenButton), "TouchScreenButton", "get_bitmask", 2459671998i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TouchScreenButton), "TouchScreenButton", "set_shape", 771364740i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TouchScreenButton), "TouchScreenButton", "get_shape", 522005891i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TouchScreenButton), "TouchScreenButton", "set_shape_centered", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TouchScreenButton), "TouchScreenButton", "is_shape_centered", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TouchScreenButton), "TouchScreenButton", "set_shape_visible", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TouchScreenButton), "TouchScreenButton", "is_shape_visible", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TouchScreenButton), "TouchScreenButton", "set_action", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TouchScreenButton), "TouchScreenButton", "get_action", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TouchScreenButton), "TouchScreenButton", "set_visibility_mode", 3031128463i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TouchScreenButton), "TouchScreenButton", "get_visibility_mode", 2558996468i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TouchScreenButton), "TouchScreenButton", "set_passby_press", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TouchScreenButton), "TouchScreenButton", "is_passby_press_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TouchScreenButton), "TouchScreenButton", "is_pressed", 36873697i64),);
    
}
fn load_Translation_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Translation = string_names.fetch("Translation");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Translation), "Translation", "set_locale", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Translation), "Translation", "get_locale", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Translation), "Translation", "add_message", 3898530326i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Translation), "Translation", "add_plural_message", 2356982266i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Translation), "Translation", "get_message", 1829228469i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Translation), "Translation", "get_plural_message", 229954002i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Translation), "Translation", "erase_message", 3959009644i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Translation), "Translation", "get_message_list", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Translation), "Translation", "get_translated_message_list", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Translation), "Translation", "get_message_count", 3905245786i64),);
    
}
fn load_TranslationDomain_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TranslationDomain = string_names.fetch("TranslationDomain");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "get_translation_object", 606768082i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "add_translation", 1466479800i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "remove_translation", 1466479800i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "translate", 1829228469i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "translate_plural", 229954002i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "get_locale_override", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "set_locale_override", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "is_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "set_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "is_pseudolocalization_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "set_pseudolocalization_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "is_pseudolocalization_accents_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "set_pseudolocalization_accents_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "is_pseudolocalization_double_vowels_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "set_pseudolocalization_double_vowels_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "is_pseudolocalization_fake_bidi_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "set_pseudolocalization_fake_bidi_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "is_pseudolocalization_override_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "set_pseudolocalization_override_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "is_pseudolocalization_skip_placeholders_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "set_pseudolocalization_skip_placeholders_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "get_pseudolocalization_expansion_ratio", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "set_pseudolocalization_expansion_ratio", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "get_pseudolocalization_prefix", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "set_pseudolocalization_prefix", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "get_pseudolocalization_suffix", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "set_pseudolocalization_suffix", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TranslationDomain), "TranslationDomain", "pseudolocalize", 1965194235i64),);
    
}
fn load_Tree_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Tree = string_names.fetch("Tree");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "clear", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "create_item", 528467046i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_root", 1514277247i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "set_column_custom_minimum_width", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "set_column_expand", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "set_column_expand_ratio", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "set_column_clip_content", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "is_column_expanding", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "is_column_clipping_content", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_column_expand_ratio", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_column_width", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "set_hide_root", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "is_root_hidden", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_next_selected", 873446299i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_selected", 1514277247i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "set_selected", 2662547442i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_selected_column", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_pressed_button", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "set_select_mode", 3223887270i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_select_mode", 100748571i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "deselect_all", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "set_columns", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_columns", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_edited", 1514277247i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_edited_column", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "edit_selected", 2595650253i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_custom_popup_rect", 1639390495i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_item_area_rect", 47968679i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_item_at_position", 4193340126i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_column_at_position", 3820158470i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_drop_section_at_position", 3820158470i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_button_id_at_position", 3820158470i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "ensure_cursor_is_visible", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "set_column_titles_visible", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "are_column_titles_visible", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "set_column_title", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_column_title", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "set_column_title_alignment", 3276431499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_column_title_alignment", 4171562184i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "set_column_title_direction", 1707680378i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_column_title_direction", 4235602388i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "set_column_title_language", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_column_title_language", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_scroll", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "scroll_to_item", 1314737213i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "set_h_scroll_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "is_h_scroll_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "set_v_scroll_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "is_v_scroll_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "set_hide_folding", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "is_folding_hidden", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "set_enable_recursive_folding", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "is_recursive_folding_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "set_drop_mode_flags", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_drop_mode_flags", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "set_allow_rmb_select", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_allow_rmb_select", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "set_allow_reselect", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_allow_reselect", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "set_allow_search", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "get_allow_search", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "set_auto_tooltip", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tree), "Tree", "is_auto_tooltip_enabled", 36873697i64),);
    
}
fn load_TreeItem_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TreeItem = string_names.fetch("TreeItem");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_cell_mode", 289920701i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_cell_mode", 3406114978i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_auto_translate_mode", 287402019i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_auto_translate_mode", 906302372i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_edit_multiline", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "is_edit_multiline", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_checked", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_indeterminate", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "is_checked", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "is_indeterminate", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "propagate_check", 972357352i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_text", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_text", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_description", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_description", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_text_direction", 1707680378i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_text_direction", 4235602388i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_autowrap_mode", 3633006561i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_autowrap_mode", 2902757236i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_text_overrun_behavior", 1940772195i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_text_overrun_behavior", 3782727860i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_structured_text_bidi_override", 868756907i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_structured_text_bidi_override", 3377823772i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_structured_text_bidi_override_options", 537221740i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_structured_text_bidi_override_options", 663333327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_language", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_language", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_suffix", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_suffix", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_icon", 666127730i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_icon", 3536238170i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_icon_overlay", 666127730i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_icon_overlay", 3536238170i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_icon_region", 1356297692i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_icon_region", 3327874267i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_icon_max_width", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_icon_max_width", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_icon_modulate", 2878471219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_icon_modulate", 3457211756i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_range", 1602489585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_range", 2339986948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_range_config", 1547181014i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_range_config", 3554694381i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_metadata", 2152698145i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_metadata", 4227898402i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_custom_draw", 272420368i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_custom_draw_callback", 957362965i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_custom_draw_callback", 1317077508i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_collapsed", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "is_collapsed", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_collapsed_recursive", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "is_any_collapsed", 2595650253i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_visible", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "is_visible", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "is_visible_in_tree", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "uncollapse_tree", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_custom_minimum_height", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_custom_minimum_height", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_selectable", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "is_selectable", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "is_selected", 3067735520i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "select", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "deselect", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_editable", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "is_editable", 3067735520i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_custom_color", 2878471219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_custom_color", 3457211756i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "clear_custom_color", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_custom_font", 2637609184i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_custom_font", 4244553094i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_custom_font_size", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_custom_font_size", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_custom_bg_color", 894174518i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "clear_custom_bg_color", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_custom_bg_color", 3457211756i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_custom_as_button", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "is_custom_set_as_button", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "clear_buttons", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "add_button", 973481897i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_button_count", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_button_tooltip_text", 1391810591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_button_id", 3175239445i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_button_by_id", 3175239445i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_button_color", 2165839948i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_button", 2584904275i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_button_tooltip_text", 2285447957i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_button", 176101966i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "erase_button", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_button_description", 2285447957i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_button_disabled", 1383440665i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_button_color", 3733378741i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "is_button_disabled", 2522259332i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_tooltip_text", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_tooltip_text", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_text_alignment", 3276431499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_text_alignment", 4171562184i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_expand_right", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_expand_right", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "set_disable_folding", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "is_folding_disabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "create_child", 954243986i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "add_child", 1819951137i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "remove_child", 1819951137i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_tree", 2243340556i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_next", 1514277247i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_prev", 2768121250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_parent", 1514277247i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_first_child", 1514277247i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_next_in_tree", 1666920593i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_prev_in_tree", 1666920593i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_next_visible", 1666920593i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_prev_visible", 1666920593i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_child", 306700752i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_child_count", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_children", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "get_index", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "move_before", 1819951137i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "move_after", 1819951137i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TreeItem), "TreeItem", "call_recursive", 2866548813i64),);
    
}
fn load_TriangleMesh_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TriangleMesh = string_names.fetch("TriangleMesh");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TriangleMesh), "TriangleMesh", "create_from_faces", 2637816732i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TriangleMesh), "TriangleMesh", "get_faces", 497664490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TriangleMesh), "TriangleMesh", "intersect_segment", 3648293151i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TriangleMesh), "TriangleMesh", "intersect_ray", 3648293151i64),);
    
}
fn load_TubeTrailMesh_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_TubeTrailMesh = string_names.fetch("TubeTrailMesh");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TubeTrailMesh), "TubeTrailMesh", "set_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TubeTrailMesh), "TubeTrailMesh", "get_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TubeTrailMesh), "TubeTrailMesh", "set_radial_steps", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TubeTrailMesh), "TubeTrailMesh", "get_radial_steps", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TubeTrailMesh), "TubeTrailMesh", "set_sections", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TubeTrailMesh), "TubeTrailMesh", "get_sections", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TubeTrailMesh), "TubeTrailMesh", "set_section_length", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TubeTrailMesh), "TubeTrailMesh", "get_section_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TubeTrailMesh), "TubeTrailMesh", "set_section_rings", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TubeTrailMesh), "TubeTrailMesh", "get_section_rings", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TubeTrailMesh), "TubeTrailMesh", "set_cap_top", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TubeTrailMesh), "TubeTrailMesh", "is_cap_top", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TubeTrailMesh), "TubeTrailMesh", "set_cap_bottom", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TubeTrailMesh), "TubeTrailMesh", "is_cap_bottom", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TubeTrailMesh), "TubeTrailMesh", "set_curve", 270443179i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_TubeTrailMesh), "TubeTrailMesh", "get_curve", 2460114913i64),);
    
}
fn load_Tween_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Tween = string_names.fetch("Tween");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "tween_property", 4049770449i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "tween_interval", 413360199i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "tween_callback", 1540176488i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "tween_method", 2337877153i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "tween_subtween", 1567358477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "custom_step", 330693286i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "stop", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "pause", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "play", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "kill", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "get_total_elapsed_time", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "is_running", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "is_valid", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "bind_node", 2946786331i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "set_process_mode", 855258840i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "set_pause_mode", 3363368837i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "set_ignore_time_scale", 1942052223i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "set_parallel", 1942052223i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "set_loops", 2670836414i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "get_loops_left", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "set_speed_scale", 3961971106i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "set_trans", 3965963875i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "set_ease", 1208117252i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "parallel", 3426978995i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "chain", 3426978995i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Tween), "Tween", "interpolate_value", 3452526450i64),);
    
}
fn load_UDPServer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_UDPServer = string_names.fetch("UDPServer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UDPServer), "UDPServer", "listen", 3167955072i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UDPServer), "UDPServer", "poll", 166280745i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UDPServer), "UDPServer", "is_connection_available", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UDPServer), "UDPServer", "get_local_port", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UDPServer), "UDPServer", "is_listening", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UDPServer), "UDPServer", "take_connection", 808734560i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UDPServer), "UDPServer", "stop", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UDPServer), "UDPServer", "set_max_pending_connections", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UDPServer), "UDPServer", "get_max_pending_connections", 3905245786i64),);
    
}
fn load_UPNP_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_UPNP = string_names.fetch("UPNP");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNP), "UPNP", "get_device_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNP), "UPNP", "get_device", 2193290270i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNP), "UPNP", "add_device", 986715920i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNP), "UPNP", "set_device", 3015133723i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNP), "UPNP", "remove_device", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNP), "UPNP", "clear_devices", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNP), "UPNP", "get_gateway", 2276800779i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNP), "UPNP", "discover", 1575334765i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNP), "UPNP", "query_external_address", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNP), "UPNP", "add_port_mapping", 818314583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNP), "UPNP", "delete_port_mapping", 3444187325i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNP), "UPNP", "set_discover_multicast_if", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNP), "UPNP", "get_discover_multicast_if", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNP), "UPNP", "set_discover_local_port", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNP), "UPNP", "get_discover_local_port", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNP), "UPNP", "set_discover_ipv6", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNP), "UPNP", "is_discover_ipv6", 36873697i64),);
    
}
fn load_UPNPDevice_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_UPNPDevice = string_names.fetch("UPNPDevice");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNPDevice), "UPNPDevice", "is_valid_gateway", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNPDevice), "UPNPDevice", "query_external_address", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNPDevice), "UPNPDevice", "add_port_mapping", 818314583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNPDevice), "UPNPDevice", "delete_port_mapping", 3444187325i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNPDevice), "UPNPDevice", "set_description_url", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNPDevice), "UPNPDevice", "get_description_url", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNPDevice), "UPNPDevice", "set_service_type", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNPDevice), "UPNPDevice", "get_service_type", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNPDevice), "UPNPDevice", "set_igd_control_url", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNPDevice), "UPNPDevice", "get_igd_control_url", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNPDevice), "UPNPDevice", "set_igd_service_type", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNPDevice), "UPNPDevice", "get_igd_service_type", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNPDevice), "UPNPDevice", "set_igd_our_addr", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNPDevice), "UPNPDevice", "get_igd_our_addr", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNPDevice), "UPNPDevice", "set_igd_status", 519504122i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UPNPDevice), "UPNPDevice", "get_igd_status", 180887011i64),);
    
}
fn load_UndoRedo_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_UndoRedo = string_names.fetch("UndoRedo");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "create_action", 3171901514i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "commit_action", 3216645846i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "is_committing_action", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "add_do_method", 1611583062i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "add_undo_method", 1611583062i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "add_do_property", 1017172818i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "add_undo_property", 1017172818i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "add_do_reference", 3975164845i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "add_undo_reference", 3975164845i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "start_force_keep_in_merge_ends", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "end_force_keep_in_merge_ends", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "get_history_count", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "get_current_action", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "get_action_name", 990163283i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "clear_history", 3216645846i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "get_current_action_name", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "has_undo", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "has_redo", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "get_version", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "set_max_steps", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "get_max_steps", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "redo", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UndoRedo), "UndoRedo", "undo", 2240911060i64),);
    
}
fn load_UniformSetCacheRD_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_UniformSetCacheRD = string_names.fetch("UniformSetCacheRD");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_UniformSetCacheRD), "UniformSetCacheRD", "get_cache", 658571723i64),);
    
}
fn load_VehicleBody3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VehicleBody3D = string_names.fetch("VehicleBody3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleBody3D), "VehicleBody3D", "set_engine_force", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleBody3D), "VehicleBody3D", "get_engine_force", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleBody3D), "VehicleBody3D", "set_brake", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleBody3D), "VehicleBody3D", "get_brake", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleBody3D), "VehicleBody3D", "set_steering", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleBody3D), "VehicleBody3D", "get_steering", 1740695150i64),);
    
}
fn load_VehicleWheel3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VehicleWheel3D = string_names.fetch("VehicleWheel3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "set_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "get_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "set_suspension_rest_length", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "get_suspension_rest_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "set_suspension_travel", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "get_suspension_travel", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "set_suspension_stiffness", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "get_suspension_stiffness", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "set_suspension_max_force", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "get_suspension_max_force", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "set_damping_compression", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "get_damping_compression", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "set_damping_relaxation", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "get_damping_relaxation", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "set_use_as_traction", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "is_used_as_traction", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "set_use_as_steering", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "is_used_as_steering", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "set_friction_slip", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "get_friction_slip", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "is_in_contact", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "get_contact_body", 151077316i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "get_contact_point", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "get_contact_normal", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "set_roll_influence", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "get_roll_influence", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "get_skidinfo", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "get_rpm", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "set_engine_force", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "get_engine_force", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "set_brake", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "get_brake", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "set_steering", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VehicleWheel3D), "VehicleWheel3D", "get_steering", 1740695150i64),);
    
}
fn load_VideoStream_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VideoStream = string_names.fetch("VideoStream");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStream), "VideoStream", "set_file", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStream), "VideoStream", "get_file", 2841200299i64),);
    
}
fn load_VideoStreamPlayback_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VideoStreamPlayback = string_names.fetch("VideoStreamPlayback");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayback), "VideoStreamPlayback", "mix_audio", 93876830i64),);
    
}
fn load_VideoStreamPlayer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VideoStreamPlayer = string_names.fetch("VideoStreamPlayer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "set_stream", 2317102564i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "get_stream", 438621487i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "play", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "stop", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "is_playing", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "set_paused", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "is_paused", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "set_loop", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "has_loop", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "set_volume", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "get_volume", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "set_volume_db", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "get_volume_db", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "set_speed_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "get_speed_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "set_audio_track", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "get_audio_track", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "get_stream_name", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "get_stream_length", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "set_stream_position", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "get_stream_position", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "set_autoplay", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "has_autoplay", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "set_expand", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "has_expand", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "set_buffering_msec", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "get_buffering_msec", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "set_bus", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "get_bus", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VideoStreamPlayer), "VideoStreamPlayer", "get_video_texture", 3635182373i64),);
    
}
fn load_Viewport_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Viewport = string_names.fetch("Viewport");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_world_2d", 2736080068i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_world_2d", 2339128592i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "find_world_2d", 2339128592i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_canvas_transform", 2761652528i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_canvas_transform", 3814499831i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_global_canvas_transform", 2761652528i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_global_canvas_transform", 3814499831i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_stretch_transform", 3814499831i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_final_transform", 3814499831i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_screen_transform", 3814499831i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_visible_rect", 1639390495i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_transparent_background", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "has_transparent_background", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_use_hdr_2d", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "is_using_hdr_2d", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_msaa_2d", 3330258708i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_msaa_2d", 2542055527i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_msaa_3d", 3330258708i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_msaa_3d", 2542055527i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_screen_space_aa", 3544169389i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_screen_space_aa", 1390814124i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_use_taa", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "is_using_taa", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_use_debanding", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "is_using_debanding", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_use_occlusion_culling", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "is_using_occlusion_culling", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_debug_draw", 1970246205i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_debug_draw", 579191299i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_use_oversampling", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "is_using_oversampling", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_oversampling_override", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_oversampling_override", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_oversampling", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_render_info", 481977019i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_texture", 1746695840i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_physics_object_picking", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_physics_object_picking", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_physics_object_picking_sort", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_physics_object_picking_sort", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_physics_object_picking_first_only", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_physics_object_picking_first_only", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_viewport_rid", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "push_text_input", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "push_input", 3644664830i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "push_unhandled_input", 3644664830i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "notify_mouse_entered", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "notify_mouse_exited", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_mouse_position", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "warp_mouse", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "update_mouse_cursor_state", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "gui_cancel_drag", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "gui_get_drag_data", 1214101251i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "gui_get_drag_description", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "gui_set_drag_description", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "gui_is_dragging", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "gui_is_drag_successful", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "gui_release_focus", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "gui_get_focus_owner", 2783021301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "gui_get_hovered_control", 2783021301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_disable_input", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "is_input_disabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_positional_shadow_atlas_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_positional_shadow_atlas_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_positional_shadow_atlas_16_bits", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_positional_shadow_atlas_16_bits", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_snap_controls_to_pixels", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "is_snap_controls_to_pixels_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_snap_2d_transforms_to_pixel", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "is_snap_2d_transforms_to_pixel_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_snap_2d_vertices_to_pixel", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "is_snap_2d_vertices_to_pixel_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_positional_shadow_atlas_quadrant_subdiv", 2596956071i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_positional_shadow_atlas_quadrant_subdiv", 2676778355i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_input_as_handled", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "is_input_handled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_handle_input_locally", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "is_handling_input_locally", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_default_canvas_item_texture_filter", 2815160100i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_default_canvas_item_texture_filter", 896601198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_embedding_subwindows", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "is_embedding_subwindows", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_embedded_subwindows", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_canvas_cull_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_canvas_cull_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_canvas_cull_mask_bit", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_canvas_cull_mask_bit", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_default_canvas_item_texture_repeat", 1658513413i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_default_canvas_item_texture_repeat", 4049774160i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_sdf_oversize", 2574159017i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_sdf_oversize", 2631427510i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_sdf_scale", 1402773951i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_sdf_scale", 3162688184i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_mesh_lod_threshold", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_mesh_lod_threshold", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_as_audio_listener_2d", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "is_audio_listener_2d", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_audio_listener_2d", 1840977180i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_camera_2d", 3551466917i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_world_3d", 1400875337i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_world_3d", 317588385i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "find_world_3d", 317588385i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_use_own_world_3d", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "is_using_own_world_3d", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_audio_listener_3d", 3472246991i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_camera_3d", 2285090890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_as_audio_listener_3d", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "is_audio_listener_3d", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_disable_3d", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "is_3d_disabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_use_xr", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "is_using_xr", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_scaling_3d_mode", 1531597597i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_scaling_3d_mode", 2597660574i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_scaling_3d_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_scaling_3d_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_fsr_sharpness", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_fsr_sharpness", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_texture_mipmap_bias", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_texture_mipmap_bias", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_anisotropic_filtering_level", 3445583046i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_anisotropic_filtering_level", 3991528932i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_vrs_mode", 2749867817i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_vrs_mode", 349660525i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_vrs_update_mode", 3182412319i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_vrs_update_mode", 2255951583i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "set_vrs_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Viewport), "Viewport", "get_vrs_texture", 3635182373i64),);
    
}
fn load_ViewportTexture_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ViewportTexture = string_names.fetch("ViewportTexture");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ViewportTexture), "ViewportTexture", "set_viewport_path_in_scene", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ViewportTexture), "ViewportTexture", "get_viewport_path_in_scene", 4075236667i64),);
    
}
fn load_VisibleOnScreenEnabler2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisibleOnScreenEnabler2D = string_names.fetch("VisibleOnScreenEnabler2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisibleOnScreenEnabler2D), "VisibleOnScreenEnabler2D", "set_enable_mode", 2961788752i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisibleOnScreenEnabler2D), "VisibleOnScreenEnabler2D", "get_enable_mode", 2650445576i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisibleOnScreenEnabler2D), "VisibleOnScreenEnabler2D", "set_enable_node_path", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisibleOnScreenEnabler2D), "VisibleOnScreenEnabler2D", "get_enable_node_path", 277076166i64),);
    
}
fn load_VisibleOnScreenEnabler3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisibleOnScreenEnabler3D = string_names.fetch("VisibleOnScreenEnabler3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisibleOnScreenEnabler3D), "VisibleOnScreenEnabler3D", "set_enable_mode", 320303646i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisibleOnScreenEnabler3D), "VisibleOnScreenEnabler3D", "get_enable_mode", 3352990031i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisibleOnScreenEnabler3D), "VisibleOnScreenEnabler3D", "set_enable_node_path", 1348162250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisibleOnScreenEnabler3D), "VisibleOnScreenEnabler3D", "get_enable_node_path", 277076166i64),);
    
}
fn load_VisibleOnScreenNotifier2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisibleOnScreenNotifier2D = string_names.fetch("VisibleOnScreenNotifier2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisibleOnScreenNotifier2D), "VisibleOnScreenNotifier2D", "set_rect", 2046264180i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisibleOnScreenNotifier2D), "VisibleOnScreenNotifier2D", "get_rect", 1639390495i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisibleOnScreenNotifier2D), "VisibleOnScreenNotifier2D", "set_show_rect", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisibleOnScreenNotifier2D), "VisibleOnScreenNotifier2D", "is_showing_rect", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisibleOnScreenNotifier2D), "VisibleOnScreenNotifier2D", "is_on_screen", 36873697i64),);
    
}
fn load_VisibleOnScreenNotifier3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisibleOnScreenNotifier3D = string_names.fetch("VisibleOnScreenNotifier3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisibleOnScreenNotifier3D), "VisibleOnScreenNotifier3D", "set_aabb", 259215842i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisibleOnScreenNotifier3D), "VisibleOnScreenNotifier3D", "is_on_screen", 36873697i64),);
    
}
fn load_VisualInstance3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualInstance3D = string_names.fetch("VisualInstance3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualInstance3D), "VisualInstance3D", "set_base", 2722037293i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualInstance3D), "VisualInstance3D", "get_base", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualInstance3D), "VisualInstance3D", "get_instance", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualInstance3D), "VisualInstance3D", "set_layer_mask", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualInstance3D), "VisualInstance3D", "get_layer_mask", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualInstance3D), "VisualInstance3D", "set_layer_mask_value", 300928843i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualInstance3D), "VisualInstance3D", "get_layer_mask_value", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualInstance3D), "VisualInstance3D", "set_sorting_offset", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualInstance3D), "VisualInstance3D", "get_sorting_offset", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualInstance3D), "VisualInstance3D", "set_sorting_use_aabb_center", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualInstance3D), "VisualInstance3D", "is_sorting_use_aabb_center", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualInstance3D), "VisualInstance3D", "get_aabb", 1068685055i64),);
    
}
fn load_VisualShader_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShader = string_names.fetch("VisualShader");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShader), "VisualShader", "set_mode", 3978014962i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShader), "VisualShader", "add_node", 1560769431i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShader), "VisualShader", "get_node", 3784670312i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShader), "VisualShader", "set_node_position", 2726660721i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShader), "VisualShader", "get_node_position", 2175036082i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShader), "VisualShader", "get_node_list", 2370592410i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShader), "VisualShader", "get_valid_node_id", 629467342i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShader), "VisualShader", "remove_node", 844050912i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShader), "VisualShader", "replace_node", 3144735253i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShader), "VisualShader", "is_node_connection", 3922381898i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShader), "VisualShader", "can_connect_nodes", 3922381898i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShader), "VisualShader", "connect_nodes", 3081049573i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShader), "VisualShader", "disconnect_nodes", 2268060358i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShader), "VisualShader", "connect_nodes_forced", 2268060358i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShader), "VisualShader", "get_node_connections", 1441964831i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShader), "VisualShader", "attach_node_to_frame", 2479945279i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShader), "VisualShader", "detach_node_from_frame", 844050912i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShader), "VisualShader", "add_varying", 2084110726i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShader), "VisualShader", "remove_varying", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShader), "VisualShader", "has_varying", 3927539163i64),);
    
}
fn load_VisualShaderNode_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNode = string_names.fetch("VisualShaderNode");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNode), "VisualShaderNode", "get_default_input_port", 1894493699i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNode), "VisualShaderNode", "set_output_port_for_preview", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNode), "VisualShaderNode", "get_output_port_for_preview", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNode), "VisualShaderNode", "set_input_port_default_value", 150923387i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNode), "VisualShaderNode", "get_input_port_default_value", 4227898402i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNode), "VisualShaderNode", "remove_input_port_default_value", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNode), "VisualShaderNode", "clear_default_input_values", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNode), "VisualShaderNode", "set_default_input_values", 381264803i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNode), "VisualShaderNode", "get_default_input_values", 3995934104i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNode), "VisualShaderNode", "set_frame", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNode), "VisualShaderNode", "get_frame", 3905245786i64),);
    
}
fn load_VisualShaderNodeBillboard_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeBillboard = string_names.fetch("VisualShaderNodeBillboard");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeBillboard), "VisualShaderNodeBillboard", "set_billboard_type", 1227463289i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeBillboard), "VisualShaderNodeBillboard", "get_billboard_type", 3724188517i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeBillboard), "VisualShaderNodeBillboard", "set_keep_scale_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeBillboard), "VisualShaderNodeBillboard", "is_keep_scale_enabled", 36873697i64),);
    
}
fn load_VisualShaderNodeBooleanConstant_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeBooleanConstant = string_names.fetch("VisualShaderNodeBooleanConstant");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeBooleanConstant), "VisualShaderNodeBooleanConstant", "set_constant", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeBooleanConstant), "VisualShaderNodeBooleanConstant", "get_constant", 36873697i64),);
    
}
fn load_VisualShaderNodeBooleanParameter_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeBooleanParameter = string_names.fetch("VisualShaderNodeBooleanParameter");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeBooleanParameter), "VisualShaderNodeBooleanParameter", "set_default_value_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeBooleanParameter), "VisualShaderNodeBooleanParameter", "is_default_value_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeBooleanParameter), "VisualShaderNodeBooleanParameter", "set_default_value", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeBooleanParameter), "VisualShaderNodeBooleanParameter", "get_default_value", 36873697i64),);
    
}
fn load_VisualShaderNodeClamp_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeClamp = string_names.fetch("VisualShaderNodeClamp");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeClamp), "VisualShaderNodeClamp", "set_op_type", 405010749i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeClamp), "VisualShaderNodeClamp", "get_op_type", 233276050i64),);
    
}
fn load_VisualShaderNodeColorConstant_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeColorConstant = string_names.fetch("VisualShaderNodeColorConstant");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeColorConstant), "VisualShaderNodeColorConstant", "set_constant", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeColorConstant), "VisualShaderNodeColorConstant", "get_constant", 3444240500i64),);
    
}
fn load_VisualShaderNodeColorFunc_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeColorFunc = string_names.fetch("VisualShaderNodeColorFunc");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeColorFunc), "VisualShaderNodeColorFunc", "set_function", 3973396138i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeColorFunc), "VisualShaderNodeColorFunc", "get_function", 554863321i64),);
    
}
fn load_VisualShaderNodeColorOp_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeColorOp = string_names.fetch("VisualShaderNodeColorOp");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeColorOp), "VisualShaderNodeColorOp", "set_operator", 4260370673i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeColorOp), "VisualShaderNodeColorOp", "get_operator", 1950956529i64),);
    
}
fn load_VisualShaderNodeColorParameter_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeColorParameter = string_names.fetch("VisualShaderNodeColorParameter");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeColorParameter), "VisualShaderNodeColorParameter", "set_default_value_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeColorParameter), "VisualShaderNodeColorParameter", "is_default_value_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeColorParameter), "VisualShaderNodeColorParameter", "set_default_value", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeColorParameter), "VisualShaderNodeColorParameter", "get_default_value", 3444240500i64),);
    
}
fn load_VisualShaderNodeCompare_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeCompare = string_names.fetch("VisualShaderNodeCompare");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeCompare), "VisualShaderNodeCompare", "set_comparison_type", 516558320i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeCompare), "VisualShaderNodeCompare", "get_comparison_type", 3495315961i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeCompare), "VisualShaderNodeCompare", "set_function", 2370951349i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeCompare), "VisualShaderNodeCompare", "get_function", 4089164265i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeCompare), "VisualShaderNodeCompare", "set_condition", 918742392i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeCompare), "VisualShaderNodeCompare", "get_condition", 3281078941i64),);
    
}
fn load_VisualShaderNodeCubemap_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeCubemap = string_names.fetch("VisualShaderNodeCubemap");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeCubemap), "VisualShaderNodeCubemap", "set_source", 1625400621i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeCubemap), "VisualShaderNodeCubemap", "get_source", 2222048781i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeCubemap), "VisualShaderNodeCubemap", "set_cube_map", 1278366092i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeCubemap), "VisualShaderNodeCubemap", "get_cube_map", 3984243839i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeCubemap), "VisualShaderNodeCubemap", "set_texture_type", 1899718876i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeCubemap), "VisualShaderNodeCubemap", "get_texture_type", 3356498888i64),);
    
}
fn load_VisualShaderNodeCurveTexture_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeCurveTexture = string_names.fetch("VisualShaderNodeCurveTexture");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeCurveTexture), "VisualShaderNodeCurveTexture", "set_texture", 181872837i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeCurveTexture), "VisualShaderNodeCurveTexture", "get_texture", 2800800579i64),);
    
}
fn load_VisualShaderNodeCurveXYZTexture_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeCurveXYZTexture = string_names.fetch("VisualShaderNodeCurveXYZTexture");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeCurveXYZTexture), "VisualShaderNodeCurveXYZTexture", "set_texture", 8031783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeCurveXYZTexture), "VisualShaderNodeCurveXYZTexture", "get_texture", 1950275015i64),);
    
}
fn load_VisualShaderNodeCustom_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeCustom = string_names.fetch("VisualShaderNodeCustom");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeCustom), "VisualShaderNodeCustom", "get_option_index", 923996154i64),);
    
}
fn load_VisualShaderNodeDerivativeFunc_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeDerivativeFunc = string_names.fetch("VisualShaderNodeDerivativeFunc");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeDerivativeFunc), "VisualShaderNodeDerivativeFunc", "set_op_type", 377800221i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeDerivativeFunc), "VisualShaderNodeDerivativeFunc", "get_op_type", 3997800514i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeDerivativeFunc), "VisualShaderNodeDerivativeFunc", "set_function", 1944704156i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeDerivativeFunc), "VisualShaderNodeDerivativeFunc", "get_function", 2389093396i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeDerivativeFunc), "VisualShaderNodeDerivativeFunc", "set_precision", 797270566i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeDerivativeFunc), "VisualShaderNodeDerivativeFunc", "get_precision", 3822547323i64),);
    
}
fn load_VisualShaderNodeExpression_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeExpression = string_names.fetch("VisualShaderNodeExpression");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeExpression), "VisualShaderNodeExpression", "set_expression", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeExpression), "VisualShaderNodeExpression", "get_expression", 201670096i64),);
    
}
fn load_VisualShaderNodeFloatConstant_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeFloatConstant = string_names.fetch("VisualShaderNodeFloatConstant");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFloatConstant), "VisualShaderNodeFloatConstant", "set_constant", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFloatConstant), "VisualShaderNodeFloatConstant", "get_constant", 1740695150i64),);
    
}
fn load_VisualShaderNodeFloatFunc_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeFloatFunc = string_names.fetch("VisualShaderNodeFloatFunc");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFloatFunc), "VisualShaderNodeFloatFunc", "set_function", 536026177i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFloatFunc), "VisualShaderNodeFloatFunc", "get_function", 2033948868i64),);
    
}
fn load_VisualShaderNodeFloatOp_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeFloatOp = string_names.fetch("VisualShaderNodeFloatOp");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFloatOp), "VisualShaderNodeFloatOp", "set_operator", 2488468047i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFloatOp), "VisualShaderNodeFloatOp", "get_operator", 1867979390i64),);
    
}
fn load_VisualShaderNodeFloatParameter_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeFloatParameter = string_names.fetch("VisualShaderNodeFloatParameter");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFloatParameter), "VisualShaderNodeFloatParameter", "set_hint", 3712586466i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFloatParameter), "VisualShaderNodeFloatParameter", "get_hint", 3042240429i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFloatParameter), "VisualShaderNodeFloatParameter", "set_min", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFloatParameter), "VisualShaderNodeFloatParameter", "get_min", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFloatParameter), "VisualShaderNodeFloatParameter", "set_max", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFloatParameter), "VisualShaderNodeFloatParameter", "get_max", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFloatParameter), "VisualShaderNodeFloatParameter", "set_step", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFloatParameter), "VisualShaderNodeFloatParameter", "get_step", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFloatParameter), "VisualShaderNodeFloatParameter", "set_default_value_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFloatParameter), "VisualShaderNodeFloatParameter", "is_default_value_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFloatParameter), "VisualShaderNodeFloatParameter", "set_default_value", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFloatParameter), "VisualShaderNodeFloatParameter", "get_default_value", 1740695150i64),);
    
}
fn load_VisualShaderNodeFrame_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeFrame = string_names.fetch("VisualShaderNodeFrame");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFrame), "VisualShaderNodeFrame", "set_title", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFrame), "VisualShaderNodeFrame", "get_title", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFrame), "VisualShaderNodeFrame", "set_tint_color_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFrame), "VisualShaderNodeFrame", "is_tint_color_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFrame), "VisualShaderNodeFrame", "set_tint_color", 2920490490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFrame), "VisualShaderNodeFrame", "get_tint_color", 3444240500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFrame), "VisualShaderNodeFrame", "set_autoshrink_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFrame), "VisualShaderNodeFrame", "is_autoshrink_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFrame), "VisualShaderNodeFrame", "add_attached_node", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFrame), "VisualShaderNodeFrame", "remove_attached_node", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFrame), "VisualShaderNodeFrame", "set_attached_nodes", 3614634198i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeFrame), "VisualShaderNodeFrame", "get_attached_nodes", 1930428628i64),);
    
}
fn load_VisualShaderNodeGroupBase_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeGroupBase = string_names.fetch("VisualShaderNodeGroupBase");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeGroupBase), "VisualShaderNodeGroupBase", "set_inputs", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeGroupBase), "VisualShaderNodeGroupBase", "get_inputs", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeGroupBase), "VisualShaderNodeGroupBase", "set_outputs", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeGroupBase), "VisualShaderNodeGroupBase", "get_outputs", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeGroupBase), "VisualShaderNodeGroupBase", "is_valid_port_name", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeGroupBase), "VisualShaderNodeGroupBase", "add_input_port", 2285447957i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeGroupBase), "VisualShaderNodeGroupBase", "remove_input_port", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeGroupBase), "VisualShaderNodeGroupBase", "get_input_port_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeGroupBase), "VisualShaderNodeGroupBase", "has_input_port", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeGroupBase), "VisualShaderNodeGroupBase", "clear_input_ports", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeGroupBase), "VisualShaderNodeGroupBase", "add_output_port", 2285447957i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeGroupBase), "VisualShaderNodeGroupBase", "remove_output_port", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeGroupBase), "VisualShaderNodeGroupBase", "get_output_port_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeGroupBase), "VisualShaderNodeGroupBase", "has_output_port", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeGroupBase), "VisualShaderNodeGroupBase", "clear_output_ports", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeGroupBase), "VisualShaderNodeGroupBase", "set_input_port_name", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeGroupBase), "VisualShaderNodeGroupBase", "set_input_port_type", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeGroupBase), "VisualShaderNodeGroupBase", "set_output_port_name", 501894301i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeGroupBase), "VisualShaderNodeGroupBase", "set_output_port_type", 3937882851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeGroupBase), "VisualShaderNodeGroupBase", "get_free_input_port_id", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeGroupBase), "VisualShaderNodeGroupBase", "get_free_output_port_id", 3905245786i64),);
    
}
fn load_VisualShaderNodeInput_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeInput = string_names.fetch("VisualShaderNodeInput");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeInput), "VisualShaderNodeInput", "set_input_name", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeInput), "VisualShaderNodeInput", "get_input_name", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeInput), "VisualShaderNodeInput", "get_input_real_name", 201670096i64),);
    
}
fn load_VisualShaderNodeIntConstant_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeIntConstant = string_names.fetch("VisualShaderNodeIntConstant");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeIntConstant), "VisualShaderNodeIntConstant", "set_constant", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeIntConstant), "VisualShaderNodeIntConstant", "get_constant", 3905245786i64),);
    
}
fn load_VisualShaderNodeIntFunc_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeIntFunc = string_names.fetch("VisualShaderNodeIntFunc");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeIntFunc), "VisualShaderNodeIntFunc", "set_function", 424195284i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeIntFunc), "VisualShaderNodeIntFunc", "get_function", 2753496911i64),);
    
}
fn load_VisualShaderNodeIntOp_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeIntOp = string_names.fetch("VisualShaderNodeIntOp");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeIntOp), "VisualShaderNodeIntOp", "set_operator", 1677909323i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeIntOp), "VisualShaderNodeIntOp", "get_operator", 1236987913i64),);
    
}
fn load_VisualShaderNodeIntParameter_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeIntParameter = string_names.fetch("VisualShaderNodeIntParameter");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeIntParameter), "VisualShaderNodeIntParameter", "set_hint", 2540512075i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeIntParameter), "VisualShaderNodeIntParameter", "get_hint", 4250814924i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeIntParameter), "VisualShaderNodeIntParameter", "set_min", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeIntParameter), "VisualShaderNodeIntParameter", "get_min", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeIntParameter), "VisualShaderNodeIntParameter", "set_max", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeIntParameter), "VisualShaderNodeIntParameter", "get_max", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeIntParameter), "VisualShaderNodeIntParameter", "set_step", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeIntParameter), "VisualShaderNodeIntParameter", "get_step", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeIntParameter), "VisualShaderNodeIntParameter", "set_enum_names", 4015028928i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeIntParameter), "VisualShaderNodeIntParameter", "get_enum_names", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeIntParameter), "VisualShaderNodeIntParameter", "set_default_value_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeIntParameter), "VisualShaderNodeIntParameter", "is_default_value_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeIntParameter), "VisualShaderNodeIntParameter", "set_default_value", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeIntParameter), "VisualShaderNodeIntParameter", "get_default_value", 3905245786i64),);
    
}
fn load_VisualShaderNodeIs_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeIs = string_names.fetch("VisualShaderNodeIs");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeIs), "VisualShaderNodeIs", "set_function", 1438374690i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeIs), "VisualShaderNodeIs", "get_function", 580678557i64),);
    
}
fn load_VisualShaderNodeMix_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeMix = string_names.fetch("VisualShaderNodeMix");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeMix), "VisualShaderNodeMix", "set_op_type", 3397501671i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeMix), "VisualShaderNodeMix", "get_op_type", 4013957297i64),);
    
}
fn load_VisualShaderNodeMultiplyAdd_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeMultiplyAdd = string_names.fetch("VisualShaderNodeMultiplyAdd");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeMultiplyAdd), "VisualShaderNodeMultiplyAdd", "set_op_type", 1409862380i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeMultiplyAdd), "VisualShaderNodeMultiplyAdd", "get_op_type", 2823201991i64),);
    
}
fn load_VisualShaderNodeParameter_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeParameter = string_names.fetch("VisualShaderNodeParameter");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeParameter), "VisualShaderNodeParameter", "set_parameter_name", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeParameter), "VisualShaderNodeParameter", "get_parameter_name", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeParameter), "VisualShaderNodeParameter", "set_qualifier", 1276489447i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeParameter), "VisualShaderNodeParameter", "get_qualifier", 3558406205i64),);
    
}
fn load_VisualShaderNodeParameterRef_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeParameterRef = string_names.fetch("VisualShaderNodeParameterRef");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeParameterRef), "VisualShaderNodeParameterRef", "set_parameter_name", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeParameterRef), "VisualShaderNodeParameterRef", "get_parameter_name", 201670096i64),);
    
}
fn load_VisualShaderNodeParticleAccelerator_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeParticleAccelerator = string_names.fetch("VisualShaderNodeParticleAccelerator");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeParticleAccelerator), "VisualShaderNodeParticleAccelerator", "set_mode", 3457585749i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeParticleAccelerator), "VisualShaderNodeParticleAccelerator", "get_mode", 2660365633i64),);
    
}
fn load_VisualShaderNodeParticleEmit_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeParticleEmit = string_names.fetch("VisualShaderNodeParticleEmit");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeParticleEmit), "VisualShaderNodeParticleEmit", "set_flags", 3960756792i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeParticleEmit), "VisualShaderNodeParticleEmit", "get_flags", 171277835i64),);
    
}
fn load_VisualShaderNodeParticleEmitter_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeParticleEmitter = string_names.fetch("VisualShaderNodeParticleEmitter");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeParticleEmitter), "VisualShaderNodeParticleEmitter", "set_mode_2d", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeParticleEmitter), "VisualShaderNodeParticleEmitter", "is_mode_2d", 36873697i64),);
    
}
fn load_VisualShaderNodeParticleMeshEmitter_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeParticleMeshEmitter = string_names.fetch("VisualShaderNodeParticleMeshEmitter");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeParticleMeshEmitter), "VisualShaderNodeParticleMeshEmitter", "set_mesh", 194775623i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeParticleMeshEmitter), "VisualShaderNodeParticleMeshEmitter", "get_mesh", 1808005922i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeParticleMeshEmitter), "VisualShaderNodeParticleMeshEmitter", "set_use_all_surfaces", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeParticleMeshEmitter), "VisualShaderNodeParticleMeshEmitter", "is_use_all_surfaces", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeParticleMeshEmitter), "VisualShaderNodeParticleMeshEmitter", "set_surface_index", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeParticleMeshEmitter), "VisualShaderNodeParticleMeshEmitter", "get_surface_index", 3905245786i64),);
    
}
fn load_VisualShaderNodeParticleMultiplyByAxisAngle_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeParticleMultiplyByAxisAngle = string_names.fetch("VisualShaderNodeParticleMultiplyByAxisAngle");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeParticleMultiplyByAxisAngle), "VisualShaderNodeParticleMultiplyByAxisAngle", "set_degrees_mode", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeParticleMultiplyByAxisAngle), "VisualShaderNodeParticleMultiplyByAxisAngle", "is_degrees_mode", 36873697i64),);
    
}
fn load_VisualShaderNodeParticleRandomness_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeParticleRandomness = string_names.fetch("VisualShaderNodeParticleRandomness");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeParticleRandomness), "VisualShaderNodeParticleRandomness", "set_op_type", 2060089061i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeParticleRandomness), "VisualShaderNodeParticleRandomness", "get_op_type", 3597061078i64),);
    
}
fn load_VisualShaderNodeRemap_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeRemap = string_names.fetch("VisualShaderNodeRemap");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeRemap), "VisualShaderNodeRemap", "set_op_type", 1703697889i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeRemap), "VisualShaderNodeRemap", "get_op_type", 1678380563i64),);
    
}
fn load_VisualShaderNodeReroute_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeReroute = string_names.fetch("VisualShaderNodeReroute");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeReroute), "VisualShaderNodeReroute", "get_port_type", 1287173294i64),);
    
}
fn load_VisualShaderNodeResizableBase_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeResizableBase = string_names.fetch("VisualShaderNodeResizableBase");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeResizableBase), "VisualShaderNodeResizableBase", "set_size", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeResizableBase), "VisualShaderNodeResizableBase", "get_size", 3341600327i64),);
    
}
fn load_VisualShaderNodeSample3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeSample3D = string_names.fetch("VisualShaderNodeSample3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeSample3D), "VisualShaderNodeSample3D", "set_source", 3315130991i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeSample3D), "VisualShaderNodeSample3D", "get_source", 1079494121i64),);
    
}
fn load_VisualShaderNodeSmoothStep_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeSmoothStep = string_names.fetch("VisualShaderNodeSmoothStep");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeSmoothStep), "VisualShaderNodeSmoothStep", "set_op_type", 2427426148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeSmoothStep), "VisualShaderNodeSmoothStep", "get_op_type", 359640855i64),);
    
}
fn load_VisualShaderNodeStep_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeStep = string_names.fetch("VisualShaderNodeStep");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeStep), "VisualShaderNodeStep", "set_op_type", 715172489i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeStep), "VisualShaderNodeStep", "get_op_type", 3274022781i64),);
    
}
fn load_VisualShaderNodeSwitch_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeSwitch = string_names.fetch("VisualShaderNodeSwitch");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeSwitch), "VisualShaderNodeSwitch", "set_op_type", 510471861i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeSwitch), "VisualShaderNodeSwitch", "get_op_type", 2517845071i64),);
    
}
fn load_VisualShaderNodeTexture_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeTexture = string_names.fetch("VisualShaderNodeTexture");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTexture), "VisualShaderNodeTexture", "set_source", 905262939i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTexture), "VisualShaderNodeTexture", "get_source", 2896297444i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTexture), "VisualShaderNodeTexture", "set_texture", 4051416890i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTexture), "VisualShaderNodeTexture", "get_texture", 3635182373i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTexture), "VisualShaderNodeTexture", "set_texture_type", 986314081i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTexture), "VisualShaderNodeTexture", "get_texture_type", 3290430153i64),);
    
}
fn load_VisualShaderNodeTexture2DArray_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeTexture2DArray = string_names.fetch("VisualShaderNodeTexture2DArray");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTexture2DArray), "VisualShaderNodeTexture2DArray", "set_texture_array", 1278366092i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTexture2DArray), "VisualShaderNodeTexture2DArray", "get_texture_array", 3984243839i64),);
    
}
fn load_VisualShaderNodeTexture3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeTexture3D = string_names.fetch("VisualShaderNodeTexture3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTexture3D), "VisualShaderNodeTexture3D", "set_texture", 1188404210i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTexture3D), "VisualShaderNodeTexture3D", "get_texture", 373985333i64),);
    
}
fn load_VisualShaderNodeTextureParameter_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeTextureParameter = string_names.fetch("VisualShaderNodeTextureParameter");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTextureParameter), "VisualShaderNodeTextureParameter", "set_texture_type", 2227296876i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTextureParameter), "VisualShaderNodeTextureParameter", "get_texture_type", 367922070i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTextureParameter), "VisualShaderNodeTextureParameter", "set_color_default", 4217624432i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTextureParameter), "VisualShaderNodeTextureParameter", "get_color_default", 3837060134i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTextureParameter), "VisualShaderNodeTextureParameter", "set_texture_filter", 2147684752i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTextureParameter), "VisualShaderNodeTextureParameter", "get_texture_filter", 4184490817i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTextureParameter), "VisualShaderNodeTextureParameter", "set_texture_repeat", 2036143070i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTextureParameter), "VisualShaderNodeTextureParameter", "get_texture_repeat", 1690132794i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTextureParameter), "VisualShaderNodeTextureParameter", "set_texture_source", 1212687372i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTextureParameter), "VisualShaderNodeTextureParameter", "get_texture_source", 2039092262i64),);
    
}
fn load_VisualShaderNodeTransformConstant_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeTransformConstant = string_names.fetch("VisualShaderNodeTransformConstant");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTransformConstant), "VisualShaderNodeTransformConstant", "set_constant", 2952846383i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTransformConstant), "VisualShaderNodeTransformConstant", "get_constant", 3229777777i64),);
    
}
fn load_VisualShaderNodeTransformFunc_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeTransformFunc = string_names.fetch("VisualShaderNodeTransformFunc");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTransformFunc), "VisualShaderNodeTransformFunc", "set_function", 2900990409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTransformFunc), "VisualShaderNodeTransformFunc", "get_function", 2839926569i64),);
    
}
fn load_VisualShaderNodeTransformOp_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeTransformOp = string_names.fetch("VisualShaderNodeTransformOp");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTransformOp), "VisualShaderNodeTransformOp", "set_operator", 2287310733i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTransformOp), "VisualShaderNodeTransformOp", "get_operator", 1238663601i64),);
    
}
fn load_VisualShaderNodeTransformParameter_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeTransformParameter = string_names.fetch("VisualShaderNodeTransformParameter");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTransformParameter), "VisualShaderNodeTransformParameter", "set_default_value_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTransformParameter), "VisualShaderNodeTransformParameter", "is_default_value_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTransformParameter), "VisualShaderNodeTransformParameter", "set_default_value", 2952846383i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTransformParameter), "VisualShaderNodeTransformParameter", "get_default_value", 3229777777i64),);
    
}
fn load_VisualShaderNodeTransformVecMult_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeTransformVecMult = string_names.fetch("VisualShaderNodeTransformVecMult");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTransformVecMult), "VisualShaderNodeTransformVecMult", "set_operator", 1785665912i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeTransformVecMult), "VisualShaderNodeTransformVecMult", "get_operator", 1622088722i64),);
    
}
fn load_VisualShaderNodeUIntConstant_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeUIntConstant = string_names.fetch("VisualShaderNodeUIntConstant");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeUIntConstant), "VisualShaderNodeUIntConstant", "set_constant", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeUIntConstant), "VisualShaderNodeUIntConstant", "get_constant", 3905245786i64),);
    
}
fn load_VisualShaderNodeUIntFunc_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeUIntFunc = string_names.fetch("VisualShaderNodeUIntFunc");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeUIntFunc), "VisualShaderNodeUIntFunc", "set_function", 2273148961i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeUIntFunc), "VisualShaderNodeUIntFunc", "get_function", 4187123296i64),);
    
}
fn load_VisualShaderNodeUIntOp_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeUIntOp = string_names.fetch("VisualShaderNodeUIntOp");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeUIntOp), "VisualShaderNodeUIntOp", "set_operator", 3463048345i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeUIntOp), "VisualShaderNodeUIntOp", "get_operator", 256631461i64),);
    
}
fn load_VisualShaderNodeUIntParameter_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeUIntParameter = string_names.fetch("VisualShaderNodeUIntParameter");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeUIntParameter), "VisualShaderNodeUIntParameter", "set_default_value_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeUIntParameter), "VisualShaderNodeUIntParameter", "is_default_value_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeUIntParameter), "VisualShaderNodeUIntParameter", "set_default_value", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeUIntParameter), "VisualShaderNodeUIntParameter", "get_default_value", 3905245786i64),);
    
}
fn load_VisualShaderNodeUVFunc_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeUVFunc = string_names.fetch("VisualShaderNodeUVFunc");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeUVFunc), "VisualShaderNodeUVFunc", "set_function", 765791915i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeUVFunc), "VisualShaderNodeUVFunc", "get_function", 3772902164i64),);
    
}
fn load_VisualShaderNodeVarying_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeVarying = string_names.fetch("VisualShaderNodeVarying");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVarying), "VisualShaderNodeVarying", "set_varying_name", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVarying), "VisualShaderNodeVarying", "get_varying_name", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVarying), "VisualShaderNodeVarying", "set_varying_type", 3565867981i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVarying), "VisualShaderNodeVarying", "get_varying_type", 523183580i64),);
    
}
fn load_VisualShaderNodeVec2Constant_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeVec2Constant = string_names.fetch("VisualShaderNodeVec2Constant");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVec2Constant), "VisualShaderNodeVec2Constant", "set_constant", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVec2Constant), "VisualShaderNodeVec2Constant", "get_constant", 3341600327i64),);
    
}
fn load_VisualShaderNodeVec2Parameter_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeVec2Parameter = string_names.fetch("VisualShaderNodeVec2Parameter");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVec2Parameter), "VisualShaderNodeVec2Parameter", "set_default_value_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVec2Parameter), "VisualShaderNodeVec2Parameter", "is_default_value_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVec2Parameter), "VisualShaderNodeVec2Parameter", "set_default_value", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVec2Parameter), "VisualShaderNodeVec2Parameter", "get_default_value", 3341600327i64),);
    
}
fn load_VisualShaderNodeVec3Constant_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeVec3Constant = string_names.fetch("VisualShaderNodeVec3Constant");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVec3Constant), "VisualShaderNodeVec3Constant", "set_constant", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVec3Constant), "VisualShaderNodeVec3Constant", "get_constant", 3360562783i64),);
    
}
fn load_VisualShaderNodeVec3Parameter_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeVec3Parameter = string_names.fetch("VisualShaderNodeVec3Parameter");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVec3Parameter), "VisualShaderNodeVec3Parameter", "set_default_value_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVec3Parameter), "VisualShaderNodeVec3Parameter", "is_default_value_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVec3Parameter), "VisualShaderNodeVec3Parameter", "set_default_value", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVec3Parameter), "VisualShaderNodeVec3Parameter", "get_default_value", 3360562783i64),);
    
}
fn load_VisualShaderNodeVec4Constant_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeVec4Constant = string_names.fetch("VisualShaderNodeVec4Constant");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVec4Constant), "VisualShaderNodeVec4Constant", "set_constant", 1727505552i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVec4Constant), "VisualShaderNodeVec4Constant", "get_constant", 1222331677i64),);
    
}
fn load_VisualShaderNodeVec4Parameter_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeVec4Parameter = string_names.fetch("VisualShaderNodeVec4Parameter");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVec4Parameter), "VisualShaderNodeVec4Parameter", "set_default_value_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVec4Parameter), "VisualShaderNodeVec4Parameter", "is_default_value_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVec4Parameter), "VisualShaderNodeVec4Parameter", "set_default_value", 643568085i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVec4Parameter), "VisualShaderNodeVec4Parameter", "get_default_value", 2435802345i64),);
    
}
fn load_VisualShaderNodeVectorBase_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeVectorBase = string_names.fetch("VisualShaderNodeVectorBase");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVectorBase), "VisualShaderNodeVectorBase", "set_op_type", 1692596998i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVectorBase), "VisualShaderNodeVectorBase", "get_op_type", 2568738462i64),);
    
}
fn load_VisualShaderNodeVectorFunc_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeVectorFunc = string_names.fetch("VisualShaderNodeVectorFunc");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVectorFunc), "VisualShaderNodeVectorFunc", "set_function", 629964457i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVectorFunc), "VisualShaderNodeVectorFunc", "get_function", 4047776843i64),);
    
}
fn load_VisualShaderNodeVectorOp_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VisualShaderNodeVectorOp = string_names.fetch("VisualShaderNodeVectorOp");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVectorOp), "VisualShaderNodeVectorOp", "set_operator", 3371507302i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VisualShaderNodeVectorOp), "VisualShaderNodeVectorOp", "get_operator", 11793929i64),);
    
}
fn load_VoxelGI_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VoxelGI = string_names.fetch("VoxelGI");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGI), "VoxelGI", "set_probe_data", 1637849675i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGI), "VoxelGI", "get_probe_data", 1730645405i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGI), "VoxelGI", "set_subdiv", 2240898472i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGI), "VoxelGI", "get_subdiv", 4261647950i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGI), "VoxelGI", "set_size", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGI), "VoxelGI", "get_size", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGI), "VoxelGI", "set_camera_attributes", 2817810567i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGI), "VoxelGI", "get_camera_attributes", 3921283215i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGI), "VoxelGI", "bake", 2781551026i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGI), "VoxelGI", "debug_bake", 3218959716i64),);
    
}
fn load_VoxelGIData_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_VoxelGIData = string_names.fetch("VoxelGIData");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGIData), "VoxelGIData", "allocate", 4041601946i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGIData), "VoxelGIData", "get_bounds", 1068685055i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGIData), "VoxelGIData", "get_octree_size", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGIData), "VoxelGIData", "get_to_cell_xform", 3229777777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGIData), "VoxelGIData", "get_octree_cells", 2362200018i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGIData), "VoxelGIData", "get_data_cells", 2362200018i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGIData), "VoxelGIData", "get_level_counts", 1930428628i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGIData), "VoxelGIData", "set_dynamic_range", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGIData), "VoxelGIData", "get_dynamic_range", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGIData), "VoxelGIData", "set_energy", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGIData), "VoxelGIData", "get_energy", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGIData), "VoxelGIData", "set_bias", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGIData), "VoxelGIData", "get_bias", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGIData), "VoxelGIData", "set_normal_bias", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGIData), "VoxelGIData", "get_normal_bias", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGIData), "VoxelGIData", "set_propagation", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGIData), "VoxelGIData", "get_propagation", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGIData), "VoxelGIData", "set_interior", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGIData), "VoxelGIData", "is_interior", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGIData), "VoxelGIData", "set_use_two_bounces", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_VoxelGIData), "VoxelGIData", "is_using_two_bounces", 36873697i64),);
    
}
fn load_WeakRef_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_WeakRef = string_names.fetch("WeakRef");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WeakRef), "WeakRef", "get_ref", 1214101251i64),);
    
}
fn load_WebRTCDataChannel_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_WebRTCDataChannel = string_names.fetch("WebRTCDataChannel");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCDataChannel), "WebRTCDataChannel", "poll", 166280745i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCDataChannel), "WebRTCDataChannel", "close", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCDataChannel), "WebRTCDataChannel", "was_string_packet", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCDataChannel), "WebRTCDataChannel", "set_write_mode", 1999768052i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCDataChannel), "WebRTCDataChannel", "get_write_mode", 2848495172i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCDataChannel), "WebRTCDataChannel", "get_ready_state", 3501143017i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCDataChannel), "WebRTCDataChannel", "get_label", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCDataChannel), "WebRTCDataChannel", "is_ordered", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCDataChannel), "WebRTCDataChannel", "get_id", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCDataChannel), "WebRTCDataChannel", "get_max_packet_life_time", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCDataChannel), "WebRTCDataChannel", "get_max_retransmits", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCDataChannel), "WebRTCDataChannel", "get_protocol", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCDataChannel), "WebRTCDataChannel", "is_negotiated", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCDataChannel), "WebRTCDataChannel", "get_buffered_amount", 3905245786i64),);
    
}
fn load_WebRTCMultiplayerPeer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_WebRTCMultiplayerPeer = string_names.fetch("WebRTCMultiplayerPeer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCMultiplayerPeer), "WebRTCMultiplayerPeer", "create_server", 2865356025i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCMultiplayerPeer), "WebRTCMultiplayerPeer", "create_client", 2641732907i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCMultiplayerPeer), "WebRTCMultiplayerPeer", "create_mesh", 2641732907i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCMultiplayerPeer), "WebRTCMultiplayerPeer", "add_peer", 4078953270i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCMultiplayerPeer), "WebRTCMultiplayerPeer", "remove_peer", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCMultiplayerPeer), "WebRTCMultiplayerPeer", "has_peer", 3067735520i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCMultiplayerPeer), "WebRTCMultiplayerPeer", "get_peer", 3554694381i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCMultiplayerPeer), "WebRTCMultiplayerPeer", "get_peers", 2382534195i64),);
    
}
fn load_WebRTCPeerConnection_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_WebRTCPeerConnection = string_names.fetch("WebRTCPeerConnection");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCPeerConnection), "WebRTCPeerConnection", "set_default_extension", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCPeerConnection), "WebRTCPeerConnection", "initialize", 2625064318i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCPeerConnection), "WebRTCPeerConnection", "create_data_channel", 1288557393i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCPeerConnection), "WebRTCPeerConnection", "create_offer", 166280745i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCPeerConnection), "WebRTCPeerConnection", "set_local_description", 852856452i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCPeerConnection), "WebRTCPeerConnection", "set_remote_description", 852856452i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCPeerConnection), "WebRTCPeerConnection", "add_ice_candidate", 3958950400i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCPeerConnection), "WebRTCPeerConnection", "poll", 166280745i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCPeerConnection), "WebRTCPeerConnection", "close", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCPeerConnection), "WebRTCPeerConnection", "get_connection_state", 2275710506i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCPeerConnection), "WebRTCPeerConnection", "get_gathering_state", 4262591401i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebRTCPeerConnection), "WebRTCPeerConnection", "get_signaling_state", 3342956226i64),);
    
}
fn load_WebSocketMultiplayerPeer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_WebSocketMultiplayerPeer = string_names.fetch("WebSocketMultiplayerPeer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketMultiplayerPeer), "WebSocketMultiplayerPeer", "create_client", 1966198364i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketMultiplayerPeer), "WebSocketMultiplayerPeer", "create_server", 2400822951i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketMultiplayerPeer), "WebSocketMultiplayerPeer", "get_peer", 1381378851i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketMultiplayerPeer), "WebSocketMultiplayerPeer", "get_peer_address", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketMultiplayerPeer), "WebSocketMultiplayerPeer", "get_peer_port", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketMultiplayerPeer), "WebSocketMultiplayerPeer", "get_supported_protocols", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketMultiplayerPeer), "WebSocketMultiplayerPeer", "set_supported_protocols", 4015028928i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketMultiplayerPeer), "WebSocketMultiplayerPeer", "get_handshake_headers", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketMultiplayerPeer), "WebSocketMultiplayerPeer", "set_handshake_headers", 4015028928i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketMultiplayerPeer), "WebSocketMultiplayerPeer", "get_inbound_buffer_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketMultiplayerPeer), "WebSocketMultiplayerPeer", "set_inbound_buffer_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketMultiplayerPeer), "WebSocketMultiplayerPeer", "get_outbound_buffer_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketMultiplayerPeer), "WebSocketMultiplayerPeer", "set_outbound_buffer_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketMultiplayerPeer), "WebSocketMultiplayerPeer", "get_handshake_timeout", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketMultiplayerPeer), "WebSocketMultiplayerPeer", "set_handshake_timeout", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketMultiplayerPeer), "WebSocketMultiplayerPeer", "set_max_queued_packets", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketMultiplayerPeer), "WebSocketMultiplayerPeer", "get_max_queued_packets", 3905245786i64),);
    
}
fn load_WebSocketPeer_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_WebSocketPeer = string_names.fetch("WebSocketPeer");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "connect_to_url", 1966198364i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "accept_stream", 255125695i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "send", 2780360567i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "send_text", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "was_string_packet", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "poll", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "close", 1047156615i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "get_connected_host", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "get_connected_port", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "get_selected_protocol", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "get_requested_url", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "set_no_delay", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "get_current_outbound_buffered_amount", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "get_ready_state", 346482985i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "get_close_code", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "get_close_reason", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "get_supported_protocols", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "set_supported_protocols", 4015028928i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "get_handshake_headers", 1139954409i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "set_handshake_headers", 4015028928i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "get_inbound_buffer_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "set_inbound_buffer_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "get_outbound_buffer_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "set_outbound_buffer_size", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "set_max_queued_packets", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "get_max_queued_packets", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "set_heartbeat_interval", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebSocketPeer), "WebSocketPeer", "get_heartbeat_interval", 1740695150i64),);
    
}
fn load_WebXRInterface_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_WebXRInterface = string_names.fetch("WebXRInterface");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebXRInterface), "WebXRInterface", "is_session_supported", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebXRInterface), "WebXRInterface", "set_session_mode", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebXRInterface), "WebXRInterface", "get_session_mode", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebXRInterface), "WebXRInterface", "set_required_features", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebXRInterface), "WebXRInterface", "get_required_features", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebXRInterface), "WebXRInterface", "set_optional_features", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebXRInterface), "WebXRInterface", "get_optional_features", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebXRInterface), "WebXRInterface", "get_reference_space_type", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebXRInterface), "WebXRInterface", "get_enabled_features", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebXRInterface), "WebXRInterface", "set_requested_reference_space_types", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebXRInterface), "WebXRInterface", "get_requested_reference_space_types", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebXRInterface), "WebXRInterface", "is_input_source_active", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebXRInterface), "WebXRInterface", "get_input_source_tracker", 399776966i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebXRInterface), "WebXRInterface", "get_input_source_target_ray_mode", 2852387453i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebXRInterface), "WebXRInterface", "get_visibility_state", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebXRInterface), "WebXRInterface", "get_display_refresh_rate", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebXRInterface), "WebXRInterface", "set_display_refresh_rate", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WebXRInterface), "WebXRInterface", "get_available_display_refresh_rates", 3995934104i64),);
    
}
fn load_Window_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_Window = string_names.fetch("Window");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_title", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_title", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_initial_position", 4084468099i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_initial_position", 4294066647i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_current_screen", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_current_screen", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_position", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_position", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "move_to_center", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_size", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_size", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "reset_size", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_position_with_decorations", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_size_with_decorations", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_max_size", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_max_size", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_min_size", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_min_size", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_mode", 3095236531i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_mode", 2566346114i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_flag", 3426449779i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_flag", 3062752289i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "is_maximize_allowed", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "request_attention", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "move_to_foreground", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_visible", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "is_visible", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "hide", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "show", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_transient", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "is_transient", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_transient_to_focused", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "is_transient_to_focused", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_exclusive", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "is_exclusive", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_unparent_when_invisible", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "can_draw", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "has_focus", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "grab_focus", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "start_drag", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "start_resize", 122288853i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_ime_active", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_ime_position", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "is_embedded", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_contents_minimum_size", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_force_native", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_force_native", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_content_scale_size", 1130785943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_content_scale_size", 3690982128i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_content_scale_mode", 2937716473i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_content_scale_mode", 161585230i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_content_scale_aspect", 2370399418i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_content_scale_aspect", 4158790715i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_content_scale_stretch", 349355940i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_content_scale_stretch", 536857316i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_keep_title_visible", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_keep_title_visible", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_content_scale_factor", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_content_scale_factor", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_mouse_passthrough_polygon", 1509147220i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_mouse_passthrough_polygon", 2961356807i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_wrap_controls", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "is_wrapping_controls", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "child_controls_changed", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_theme", 2326690814i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_theme", 3846893731i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_theme_type_variation", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_theme_type_variation", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "begin_bulk_theme_override", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "end_bulk_theme_override", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "add_theme_icon_override", 1373065600i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "add_theme_stylebox_override", 4188838905i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "add_theme_font_override", 3518018674i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "add_theme_font_size_override", 2415702435i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "add_theme_color_override", 4260178595i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "add_theme_constant_override", 2415702435i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "remove_theme_icon_override", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "remove_theme_stylebox_override", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "remove_theme_font_override", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "remove_theme_font_size_override", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "remove_theme_color_override", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "remove_theme_constant_override", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_theme_icon", 3163973443i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_theme_stylebox", 604739069i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_theme_font", 2826986490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_theme_font_size", 1327056374i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_theme_color", 2798751242i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_theme_constant", 1327056374i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "has_theme_icon_override", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "has_theme_stylebox_override", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "has_theme_font_override", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "has_theme_font_size_override", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "has_theme_color_override", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "has_theme_constant_override", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "has_theme_icon", 866386512i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "has_theme_stylebox", 866386512i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "has_theme_font", 866386512i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "has_theme_font_size", 866386512i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "has_theme_color", 866386512i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "has_theme_constant", 866386512i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_theme_default_base_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_theme_default_font", 3229501585i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_theme_default_font_size", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_window_id", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_accessibility_name", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_accessibility_name", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_accessibility_description", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_accessibility_description", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_focused_window", 1835468782i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_layout_direction", 3094704184i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "get_layout_direction", 3909617982i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "is_layout_rtl", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_auto_translate", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "is_auto_translating", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "set_use_font_oversampling", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "is_using_font_oversampling", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "popup", 1680304321i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "popup_on_parent", 1763793166i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "popup_centered", 3447975422i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "popup_centered_ratio", 1014814997i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "popup_centered_clamped", 2613752477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "popup_exclusive", 2134721627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "popup_exclusive_on_parent", 2344671043i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "popup_exclusive_centered", 3357594017i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "popup_exclusive_centered_ratio", 2284776287i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_Window), "Window", "popup_exclusive_centered_clamped", 2612708785i64),);
    
}
fn load_WorkerThreadPool_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_WorkerThreadPool = string_names.fetch("WorkerThreadPool");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WorkerThreadPool), "WorkerThreadPool", "add_task", 3745067146i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WorkerThreadPool), "WorkerThreadPool", "is_task_completed", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WorkerThreadPool), "WorkerThreadPool", "wait_for_task_completion", 844576869i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WorkerThreadPool), "WorkerThreadPool", "get_caller_task_id", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WorkerThreadPool), "WorkerThreadPool", "add_group_task", 1801953219i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WorkerThreadPool), "WorkerThreadPool", "is_group_task_completed", 1116898809i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WorkerThreadPool), "WorkerThreadPool", "get_group_processed_element_count", 923996154i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WorkerThreadPool), "WorkerThreadPool", "wait_for_group_task_completion", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WorkerThreadPool), "WorkerThreadPool", "get_caller_group_id", 3905245786i64),);
    
}
fn load_World2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_World2D = string_names.fetch("World2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_World2D), "World2D", "get_canvas", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_World2D), "World2D", "get_navigation_map", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_World2D), "World2D", "get_space", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_World2D), "World2D", "get_direct_space_state", 2506717822i64),);
    
}
fn load_World3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_World3D = string_names.fetch("World3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_World3D), "World3D", "get_space", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_World3D), "World3D", "get_navigation_map", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_World3D), "World3D", "get_scenario", 2944877500i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_World3D), "World3D", "set_environment", 4143518816i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_World3D), "World3D", "get_environment", 3082064660i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_World3D), "World3D", "set_fallback_environment", 4143518816i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_World3D), "World3D", "get_fallback_environment", 3082064660i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_World3D), "World3D", "set_camera_attributes", 2817810567i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_World3D), "World3D", "get_camera_attributes", 3921283215i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_World3D), "World3D", "get_direct_space_state", 2069328350i64),);
    
}
fn load_WorldBoundaryShape2D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_WorldBoundaryShape2D = string_names.fetch("WorldBoundaryShape2D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WorldBoundaryShape2D), "WorldBoundaryShape2D", "set_normal", 743155724i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WorldBoundaryShape2D), "WorldBoundaryShape2D", "get_normal", 3341600327i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WorldBoundaryShape2D), "WorldBoundaryShape2D", "set_distance", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WorldBoundaryShape2D), "WorldBoundaryShape2D", "get_distance", 1740695150i64),);
    
}
fn load_WorldBoundaryShape3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_WorldBoundaryShape3D = string_names.fetch("WorldBoundaryShape3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WorldBoundaryShape3D), "WorldBoundaryShape3D", "set_plane", 3505987427i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WorldBoundaryShape3D), "WorldBoundaryShape3D", "get_plane", 2753500971i64),);
    
}
fn load_WorldEnvironment_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_WorldEnvironment = string_names.fetch("WorldEnvironment");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WorldEnvironment), "WorldEnvironment", "set_environment", 4143518816i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WorldEnvironment), "WorldEnvironment", "get_environment", 3082064660i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WorldEnvironment), "WorldEnvironment", "set_camera_attributes", 2817810567i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_WorldEnvironment), "WorldEnvironment", "get_camera_attributes", 3921283215i64),);
    
}
fn load_X509Certificate_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_X509Certificate = string_names.fetch("X509Certificate");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_X509Certificate), "X509Certificate", "save", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_X509Certificate), "X509Certificate", "load", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_X509Certificate), "X509Certificate", "save_to_string", 2841200299i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_X509Certificate), "X509Certificate", "load_from_string", 166001499i64),);
    
}
fn load_XMLParser_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_XMLParser = string_names.fetch("XMLParser");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XMLParser), "XMLParser", "read", 166280745i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XMLParser), "XMLParser", "get_node_type", 2984359541i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XMLParser), "XMLParser", "get_node_name", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XMLParser), "XMLParser", "get_node_data", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XMLParser), "XMLParser", "get_node_offset", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XMLParser), "XMLParser", "get_attribute_count", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XMLParser), "XMLParser", "get_attribute_name", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XMLParser), "XMLParser", "get_attribute_value", 844755477i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XMLParser), "XMLParser", "has_attribute", 3927539163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XMLParser), "XMLParser", "get_named_attribute_value", 3135753539i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XMLParser), "XMLParser", "get_named_attribute_value_safe", 3135753539i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XMLParser), "XMLParser", "is_empty", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XMLParser), "XMLParser", "get_current_line", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XMLParser), "XMLParser", "skip_section", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XMLParser), "XMLParser", "seek", 844576869i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XMLParser), "XMLParser", "open", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XMLParser), "XMLParser", "open_buffer", 680677267i64),);
    
}
fn load_XRAnchor3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_XRAnchor3D = string_names.fetch("XRAnchor3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRAnchor3D), "XRAnchor3D", "get_size", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRAnchor3D), "XRAnchor3D", "get_plane", 2753500971i64),);
    
}
fn load_XRController3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_XRController3D = string_names.fetch("XRController3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRController3D), "XRController3D", "is_button_pressed", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRController3D), "XRController3D", "get_input", 2760726917i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRController3D), "XRController3D", "get_float", 2349060816i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRController3D), "XRController3D", "get_vector2", 3100822709i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRController3D), "XRController3D", "get_tracker_hand", 4181770860i64),);
    
}
fn load_XRHandModifier3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_XRHandModifier3D = string_names.fetch("XRHandModifier3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRHandModifier3D), "XRHandModifier3D", "set_hand_tracker", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRHandModifier3D), "XRHandModifier3D", "get_hand_tracker", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRHandModifier3D), "XRHandModifier3D", "set_bone_update", 3635701455i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRHandModifier3D), "XRHandModifier3D", "get_bone_update", 2873665691i64),);
    
}
fn load_XRHandTracker_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_XRHandTracker = string_names.fetch("XRHandTracker");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRHandTracker), "XRHandTracker", "set_has_tracking_data", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRHandTracker), "XRHandTracker", "get_has_tracking_data", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRHandTracker), "XRHandTracker", "set_hand_tracking_source", 2958308861i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRHandTracker), "XRHandTracker", "get_hand_tracking_source", 2475045250i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRHandTracker), "XRHandTracker", "set_hand_joint_flags", 3028437365i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRHandTracker), "XRHandTracker", "get_hand_joint_flags", 1730972401i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRHandTracker), "XRHandTracker", "set_hand_joint_transform", 2529959613i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRHandTracker), "XRHandTracker", "get_hand_joint_transform", 1090840196i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRHandTracker), "XRHandTracker", "set_hand_joint_radius", 2723659615i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRHandTracker), "XRHandTracker", "get_hand_joint_radius", 3400025734i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRHandTracker), "XRHandTracker", "set_hand_joint_linear_velocity", 1978646737i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRHandTracker), "XRHandTracker", "get_hand_joint_linear_velocity", 547240792i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRHandTracker), "XRHandTracker", "set_hand_joint_angular_velocity", 1978646737i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRHandTracker), "XRHandTracker", "get_hand_joint_angular_velocity", 547240792i64),);
    
}
fn load_XRInterface_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_XRInterface = string_names.fetch("XRInterface");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "get_name", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "get_capabilities", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "is_primary", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "set_primary", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "is_initialized", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "initialize", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "uninitialize", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "get_system_info", 2382534195i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "get_tracking_status", 167423259i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "get_render_target_size", 1497962370i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "get_view_count", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "trigger_haptic_pulse", 3752640163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "supports_play_area_mode", 3429955281i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "get_play_area_mode", 1615132885i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "set_play_area_mode", 3429955281i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "get_play_area", 497664490i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "get_anchor_detection_is_enabled", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "set_anchor_detection_is_enabled", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "get_camera_feed_id", 2455072627i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "is_passthrough_supported", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "is_passthrough_enabled", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "start_passthrough", 2240911060i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "stop_passthrough", 3218959716i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "get_transform_for_view", 518934792i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "get_projection_for_view", 3766090294i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "get_supported_environment_blend_modes", 2915620761i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "set_environment_blend_mode", 551152418i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterface), "XRInterface", "get_environment_blend_mode", 1984334071i64),);
    
}
fn load_XRInterfaceExtension_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_XRInterfaceExtension = string_names.fetch("XRInterfaceExtension");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterfaceExtension), "XRInterfaceExtension", "get_color_texture", 529393457i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterfaceExtension), "XRInterfaceExtension", "get_depth_texture", 529393457i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterfaceExtension), "XRInterfaceExtension", "get_velocity_texture", 529393457i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterfaceExtension), "XRInterfaceExtension", "add_blit", 258596971i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRInterfaceExtension), "XRInterfaceExtension", "get_render_target_texture", 41030802i64),);
    
}
fn load_XRNode3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_XRNode3D = string_names.fetch("XRNode3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRNode3D), "XRNode3D", "set_tracker", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRNode3D), "XRNode3D", "get_tracker", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRNode3D), "XRNode3D", "set_pose_name", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRNode3D), "XRNode3D", "get_pose_name", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRNode3D), "XRNode3D", "set_show_when_tracked", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRNode3D), "XRNode3D", "get_show_when_tracked", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRNode3D), "XRNode3D", "get_is_active", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRNode3D), "XRNode3D", "get_has_tracking_data", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRNode3D), "XRNode3D", "get_pose", 2806551826i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRNode3D), "XRNode3D", "trigger_haptic_pulse", 508576839i64),);
    
}
fn load_XROrigin3D_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_XROrigin3D = string_names.fetch("XROrigin3D");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XROrigin3D), "XROrigin3D", "set_world_scale", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XROrigin3D), "XROrigin3D", "get_world_scale", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XROrigin3D), "XROrigin3D", "set_current", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XROrigin3D), "XROrigin3D", "is_current", 36873697i64),);
    
}
fn load_XRPose_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_XRPose = string_names.fetch("XRPose");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPose), "XRPose", "set_has_tracking_data", 2586408642i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPose), "XRPose", "get_has_tracking_data", 36873697i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPose), "XRPose", "set_name", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPose), "XRPose", "get_name", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPose), "XRPose", "set_transform", 2952846383i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPose), "XRPose", "get_transform", 3229777777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPose), "XRPose", "get_adjusted_transform", 3229777777i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPose), "XRPose", "set_linear_velocity", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPose), "XRPose", "get_linear_velocity", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPose), "XRPose", "set_angular_velocity", 3460891852i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPose), "XRPose", "get_angular_velocity", 3360562783i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPose), "XRPose", "set_tracking_confidence", 4171656666i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPose), "XRPose", "get_tracking_confidence", 2064923680i64),);
    
}
fn load_XRPositionalTracker_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_XRPositionalTracker = string_names.fetch("XRPositionalTracker");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPositionalTracker), "XRPositionalTracker", "get_tracker_profile", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPositionalTracker), "XRPositionalTracker", "set_tracker_profile", 83702148i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPositionalTracker), "XRPositionalTracker", "get_tracker_hand", 4181770860i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPositionalTracker), "XRPositionalTracker", "set_tracker_hand", 3904108980i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPositionalTracker), "XRPositionalTracker", "has_pose", 2619796661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPositionalTracker), "XRPositionalTracker", "get_pose", 4099720006i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPositionalTracker), "XRPositionalTracker", "invalidate_pose", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPositionalTracker), "XRPositionalTracker", "set_pose", 3451230163i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPositionalTracker), "XRPositionalTracker", "get_input", 2760726917i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRPositionalTracker), "XRPositionalTracker", "set_input", 3776071444i64),);
    
}
fn load_XRTracker_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_XRTracker = string_names.fetch("XRTracker");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRTracker), "XRTracker", "get_tracker_type", 2784508102i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRTracker), "XRTracker", "set_tracker_type", 3055763575i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRTracker), "XRTracker", "get_tracker_name", 2002593661i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRTracker), "XRTracker", "set_tracker_name", 3304788590i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRTracker), "XRTracker", "get_tracker_desc", 201670096i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRTracker), "XRTracker", "set_tracker_desc", 83702148i64),);
    
}
fn load_XRVRS_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_XRVRS = string_names.fetch("XRVRS");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRVRS), "XRVRS", "get_vrs_min_radius", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRVRS), "XRVRS", "set_vrs_min_radius", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRVRS), "XRVRS", "get_vrs_strength", 1740695150i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRVRS), "XRVRS", "set_vrs_strength", 373806689i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRVRS), "XRVRS", "get_vrs_render_region", 410525958i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRVRS), "XRVRS", "set_vrs_render_region", 1763793166i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_XRVRS), "XRVRS", "make_vrs_texture", 3647044786i64),);
    
}
fn load_ZIPPacker_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ZIPPacker = string_names.fetch("ZIPPacker");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ZIPPacker), "ZIPPacker", "open", 1936816515i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ZIPPacker), "ZIPPacker", "set_compression_level", 1286410249i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ZIPPacker), "ZIPPacker", "get_compression_level", 3905245786i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ZIPPacker), "ZIPPacker", "start_file", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ZIPPacker), "ZIPPacker", "write_file", 680677267i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ZIPPacker), "ZIPPacker", "close_file", 166280745i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ZIPPacker), "ZIPPacker", "close", 166280745i64),);
    
}
fn load_ZIPReader_methods(function_pointers: &mut Vec < crate::ClassMethodBind >, string_names: &mut crate::StringCache, fetch_fptr: FetchFn,) {
    let sname_ZIPReader = string_names.fetch("ZIPReader");
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ZIPReader), "ZIPReader", "open", 166001499i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ZIPReader), "ZIPReader", "close", 166280745i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ZIPReader), "ZIPReader", "get_files", 2981934095i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ZIPReader), "ZIPReader", "read_file", 740857591i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ZIPReader), "ZIPReader", "file_exists", 35364943i64),);
    function_pointers.push(crate::load_class_method(fetch_fptr, string_names, Some(sname_ZIPReader), "ZIPReader", "get_compression_level", 3694577386i64),);
    
}